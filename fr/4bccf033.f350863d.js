(window.webpackJsonp=window.webpackJsonp||[]).push([[772],{2701:function(e,n,r){"use strict";r.d(n,"a",(function(){return u})),r.d(n,"b",(function(){return f}));var t=r(0),s=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var a=s.a.createContext({}),p=function(e){var n=s.a.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=p(e.components);return s.a.createElement(a.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},d=s.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,a=i(e,["components","mdxType","originalType","parentName"]),u=p(r),d=t,f=u["".concat(c,".").concat(d)]||u[d]||h[d]||o;return r?s.a.createElement(f,l(l({ref:n},a),{},{components:r})):s.a.createElement(f,l({ref:n},a))}));function f(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,c=new Array(o);c[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:t,c[1]=l;for(var a=2;a<o;a++)c[a]=r[a];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},844:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return c})),r.d(n,"metadata",(function(){return l})),r.d(n,"toc",(function(){return i})),r.d(n,"default",(function(){return p}));var t=r(3),s=r(7),o=(r(0),r(2701)),c={},l={unversionedId:"development/backend/regards/admin/api/generated-snippets/ResourceControllerIT/getAllResourceAccessesAsInstanceAdminTest/http-response",id:"version-1.4.0/development/backend/regards/admin/api/generated-snippets/ResourceControllerIT/getAllResourceAccessesAsInstanceAdminTest/http-response",isDocsHomePage:!1,title:"http-response",description:"Request",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-1.4.0/development/backend/regards/admin/api/generated-snippets/ResourceControllerIT/getAllResourceAccessesAsInstanceAdminTest/http-response.md",slug:"/development/backend/regards/admin/api/generated-snippets/ResourceControllerIT/getAllResourceAccessesAsInstanceAdminTest/http-response",permalink:"/fr/docs/development/backend/regards/admin/api/generated-snippets/ResourceControllerIT/getAllResourceAccessesAsInstanceAdminTest/http-response",editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/i18n/fr/docusaurus-plugin-content-docs/version-1.4.0/development/backend/regards/admin/api/generated-snippets/ResourceControllerIT/getAllResourceAccessesAsInstanceAdminTest/http-response.md",version:"1.4.0"},i=[],a={toc:i};function p(e){var n=e.components,r=Object(s.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},a,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h4",{id:"request"},"Request"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Code:")," 200 OK"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"  **Headers:**\n\n  `Pragma:no-cache`\n  `X-XSS-Protection:1; mode=block`\n  `Expires:0`\n  `X-Frame-Options:DENY`\n  `X-Content-Type-Options:nosniff`\n  `Access-Control-Allow-Headers:authorization, content-type, scope`\n  `Access-Control-Max-Age:3600`\n  `Content-Type:application/json;charset=UTF-8`\n  `Access-Control-Allow-Origin:*`\n  `Cache-Control:no-cache, no-store, max-age=0, must-revalidate`\n  `Access-Control-Allow-Methods:POST, PUT, GET, OPTIONS, DELETE`\n\n  **Content:**\n")))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'    \n{\n  "metadata" : {\n    "size" : 10,\n    "totalElements" : 62,\n    "totalPages" : 7,\n    "number" : 0\n  },\n  "content" : [ {\n    "content" : {\n      "id" : 1,\n      "description" : "Updates the setting managing the access requests",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "AccessSettingsController",\n      "resource" : "/accesses/settings",\n      "verb" : "PUT",\n      "defaultRole" : "PROJECT_ADMIN"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/1"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/1"\n    } ]\n  }, {\n    "content" : {\n      "id" : 2,\n      "description" : "Retrieves the settings managing the access requests",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "AccessSettingsController",\n      "resource" : "/accesses/settings",\n      "verb" : "GET",\n      "defaultRole" : "PROJECT_ADMIN"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/2"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/2"\n    } ]\n  }, {\n    "content" : {\n      "id" : 3,\n      "description" : "Allow admins to invalidate the license of the project for all the users of the project",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "LicenseController",\n      "resource" : "/license/reset",\n      "verb" : "PUT",\n      "defaultRole" : "ADMIN"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/3"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/3"\n    } ]\n  }, {\n    "content" : {\n      "id" : 4,\n      "description" : "Retrieve if the current user has accepted the license of the project",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "LicenseController",\n      "resource" : "/license",\n      "verb" : "GET",\n      "defaultRole" : "PUBLIC"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/4"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/4"\n    } ]\n  }, {\n    "content" : {\n      "id" : 5,\n      "description" : "Allow current user to accept the license of the project",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "LicenseController",\n      "resource" : "/license",\n      "verb" : "PUT",\n      "defaultRole" : "PUBLIC"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/5"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/5"\n    } ]\n  }, {\n    "content" : {\n      "id" : 6,\n      "description" : "Retrieve all resources for the given microservice and the given controller",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "MicroserviceResourceController",\n      "resource" : "/resources/microservices/{microservicename}/controllers",\n      "verb" : "GET",\n      "defaultRole" : "PROJECT_ADMIN"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/6"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/6"\n    } ]\n  }, {\n    "content" : {\n      "id" : 7,\n      "description" : "Retrieve all resources for the given microservice and the given controller",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "MicroserviceResourceController",\n      "resource" : "/resources/microservices/{microservicename}/controllers/{controllername}",\n      "verb" : "GET",\n      "defaultRole" : "PROJECT_ADMIN"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/7"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/7"\n    } ]\n  }, {\n    "content" : {\n      "id" : 8,\n      "description" : "Register all endpoints of a microservice",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "MicroserviceResourceController",\n      "resource" : "/resources/microservices/{microservicename}",\n      "verb" : "POST",\n      "defaultRole" : "INSTANCE_ADMIN"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/8"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/8"\n    } ]\n  }, {\n    "content" : {\n      "id" : 9,\n      "description" : "Retrieve accessible resource accesses of the user among the given microservice",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "MicroserviceResourceController",\n      "resource" : "/resources/microservices/{microservicename}",\n      "verb" : "GET",\n      "defaultRole" : "PUBLIC"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/9"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/9"\n    } ]\n  }, {\n    "content" : {\n      "id" : 10,\n      "description" : "update the list of all metadata of the user",\n      "microservice" : "Test application",\n      "controllerSimpleName" : "ProjectUserMetadataController",\n      "resource" : "/users/{user_id}/metadatas",\n      "verb" : "PUT",\n      "defaultRole" : "PROJECT_ADMIN"\n    },\n    "links" : [ {\n      "rel" : "list",\n      "href" : "http://localhost:8080/resources"\n    }, {\n      "rel" : "self",\n      "href" : "http://localhost:8080/resources/10"\n    }, {\n      "rel" : "update",\n      "href" : "http://localhost:8080/resources/10"\n    } ]\n  } ],\n  "links" : [ {\n    "rel" : "first",\n    "href" : "http://localhost:8080/resources?page=0&size=10&sort=id,asc"\n  }, {\n    "rel" : "self",\n    "href" : "http://localhost:8080/resources?page=0&size=10&sort=id,asc"\n  }, {\n    "rel" : "next",\n    "href" : "http://localhost:8080/resources?page=1&size=10&sort=id,asc"\n  }, {\n    "rel" : "last",\n    "href" : "http://localhost:8080/resources?page=6&size=10&sort=id,asc"\n  } ]\n}\n')))}p.isMDXComponent=!0}}]);