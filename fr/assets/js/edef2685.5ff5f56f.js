"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8981],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return g}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function d(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),p=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):d(d({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(o.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},N=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,o=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),N=p(a),g=r,s=N["".concat(o,".").concat(g)]||N[g]||k[g]||i;return a?n.createElement(s,d(d({ref:e},m),{},{components:a})):n.createElement(s,d({ref:e},m))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,d=new Array(i);d[0]=N;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=t,l.mdxType="string"==typeof t?t:r,d[1]=l;for(var p=2;p<i;p++)d[p]=a[p];return n.createElement.apply(null,d)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},12262:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return m},default:function(){return N}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),d=["components"],l={id:"swarm-setup",title:"Advanced setup",slug:"/setup/swarm/advanced-setup/"},o=void 0,p={unversionedId:"setup/swarm-setup",id:"version-1.5.0/setup/swarm-setup",isDocsHomePage:!1,title:"Advanced setup",description:"Deployment",source:"@site/versioned_docs/version-1.5.0/setup/swarm-advanced-setup.md",sourceDirName:"setup",slug:"/setup/swarm/advanced-setup/",permalink:"/fr/docs/1.5.0/setup/swarm/advanced-setup/",editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.5.0/setup/swarm-advanced-setup.md",version:"1.5.0",frontMatter:{id:"swarm-setup",title:"Advanced setup",slug:"/setup/swarm/advanced-setup/"},sidebar:"version-1.5.0/install",previous:{title:"Ansible playbook tasks",permalink:"/fr/docs/1.5.0/setup/ansible-tasks/"}},m=[{value:"Deployment",id:"deployment",children:[{value:"Introduction",id:"introduction",children:[]},{value:"Users &amp; groups",id:"users--groups",children:[]},{value:"Inventories configuration properties",id:"inventories-configuration-properties",children:[]},{value:"Add RabbitMQ shovel",id:"add-rabbitmq-shovel",children:[]}]}],k={toc:m};function N(t){var e=t.components,a=(0,r.Z)(t,d);return(0,i.kt)("wrapper",(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"deployment"},"Deployment"),(0,i.kt)("h3",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This page covers some of the possibilities offered by our inventory, specially the file ",(0,i.kt)("inlineCode",{parentName:"p"},"regards-playbook/inventories/regards-cnes/group_vars/all/main.yml"),"."),(0,i.kt)("h3",{id:"users--groups"},"Users & groups"),(0,i.kt)("p",null,"Let's see how users created by the demo inventory are used:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"User"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Group"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Tips"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"dockermapuid")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"dockermapgid")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Used by the docker daemon"),(0,i.kt)("td",{parentName:"tr",align:"left"},"This group is internal to the server")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"gregards_admin")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Regroup all users that are allowed to monitor the stack"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative, ",(0,i.kt)("inlineCode",{parentName:"td"},"johndoe")," can also replace this one")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"docker-regards-data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"gregards_data")),(0,i.kt)("td",{parentName:"tr",align:"left"},"IPA User/Group owning all files created by REGARDS, ",(0,i.kt)("strong",{parentName:"td"},"must be able to access network disk ",(0,i.kt)("inlineCode",{parentName:"strong"},"group_workdir_network"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Your user should be inside that group")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"johndoe")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"johndoe"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"dockermapgid"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"gregards_admin"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"gregards_data")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Your personnal user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Your user has access to Docker, to the stack and data")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mariecurie")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mariecurie"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"gregards_data")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Some user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"She has access to data, not the stack itself")))),(0,i.kt)("p",null,"To setup these users and groups, you must follow these requirements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"User or group"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Value requirement"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"dockermapuid")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name_space_uid"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"dockermapgid")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name_space_gid"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"johndoe"),",",(0,i.kt)("inlineCode",{parentName:"td"},"mariecurie")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value inferior to ",(0,i.kt)("inlineCode",{parentName:"td"},"name_space_uid"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"gregards_admin")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value inferior to ",(0,i.kt)("inlineCode",{parentName:"td"},"name_space_gid"),". That user can be no login.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"docker-regards-data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_uid + name_space_uid"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"gregards_data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_gid + name_space_gid"))))),(0,i.kt)("h3",{id:"inventories-configuration-properties"},"Inventories configuration properties"),(0,i.kt)("p",null,"Global properties :"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Constraints"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_workdir_network")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Network disk shared accross every nodes"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_workdir_network_allow_root")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Bool")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Do we allow root inside the network volume?"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_workdir_local")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Local folder where regards is installed on every node"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_stack_name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Unique stack name (for swarm)"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. ",(0,i.kt)("inlineCode",{parentName:"td"},"[a-z-]+"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_setype")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"SELinux type"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_seuser")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"SELinux user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_root_user")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"User owning the REGARDS folder tree, Docker must have read/write access"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_root_group")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Group owning the REGARDS folder tree"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_enable_setup_regards_users")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Bool")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Do we need to create ",(0,i.kt)("inlineCode",{parentName:"td"},"root_group"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"run_group")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"run_user")," locally ?"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default to true.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_user")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"All files created by containers will use this user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_group")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"All files created by containers will use this group"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_uid")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Run user id. (See ",(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_user"),")"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_gid")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Run group id. (See ",(0,i.kt)("inlineCode",{parentName:"td"},"group_container_run_group"),")"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_network_name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Docker network name. Automatically created by Ansible"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_network_ip_network")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Docker network ip"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. If a basic IPV4 looks like ",(0,i.kt)("inlineCode",{parentName:"td"},"A.B.C.D"),", you must provide ",(0,i.kt)("inlineCode",{parentName:"td"},"A.B.C."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_registry")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Docker registry holding REGARDS images"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required")))),(0,i.kt)("p",null,"Microservices properties :"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Constraints"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_tag")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Used to store docker image tag version"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Only used in this file.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_plugins")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Used to store docker plugins to execute."),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be empty.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_plugins[].image")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Docker image name of the plugin that stores plugins you want to install on REGARDS"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_plugins[].tag")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Docker image tag"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"List of microservices that will be deployed"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Some of these keys are facultative, but config, registry, gateway, admin_instance, admin & front should not be removed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.tag")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Docker image tag that will be deployed"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Open the public HTTP port of the service (bypass reverse proxy + gateway)"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.jdwp")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Open a public port to debug a microservice with your IDE"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.jmx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Open the JMX port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.front")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots the frontend, which is also the reverse proxy to the gateway"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.front.tag")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Docker image tag that will be deployed"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.front.port")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Open the HTTP port of the NGINX to let users access to the front"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.front.protocol")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Protocol used to access to the front"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.front.host")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Host used to access to the front"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")))),(0,i.kt)("p",null,"If you don't have mutualised COTS, don't worry. You can deploy yours and use mutualised ones later."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Constraints"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"List COTS that will be deployed"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be empty.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots an ElasticSearch"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch.client")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, opens the client port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots an ElasticSearch to store logs"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs.client")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, opens the client port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.kibana")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots a Kibana linked to ",(0,i.kt)("inlineCode",{parentName:"td"},"elasticsearch")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.kibana.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.kibana_logs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots a Kibana linked to ",(0,i.kt)("inlineCode",{parentName:"td"},"elasticsearch_logs")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.kibana_logs.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.fluent")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots Fluentd"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.maildev")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots a local SMTP server Mailchimp"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.maildev.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.postgres")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots Postgres"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.postgres.client")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, open the TCP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.phppgadmin")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots a PGAdmin"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.phppgadmin.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, open the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots a RabbitMQ"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.client")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, open the TCP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, open the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, adds or updates a RabbitMQ user in addition to the REGARDS admin (see ",(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp.user"),")"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users.name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Username of the RabbitMQ user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users.password")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Password of the RabbitMQ user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users.tags")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Tags of the RabbitMQ user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be empty, or a comma separated string with one of these values: ",(0,i.kt)("inlineCode",{parentName:"td"},"management"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"policymaker"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"monitoring"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"administrator"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, adds a RabbitMQ user permission"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.user")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Username of this RabbitMQ user permission"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.vhost")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"VirtualHost of the RabbitMQ user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be ",(0,i.kt)("inlineCode",{parentName:"td"},"/"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"regards.multitenant.manager")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"regards.instance.manager"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.configure")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Configuration authorisation of the RabbitMQ user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be empty, ",(0,i.kt)("inlineCode",{parentName:"td"},".*")," or any other valid value")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.write")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Write authorisation of the RabbitMQ user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be empty, ",(0,i.kt)("inlineCode",{parentName:"td"},".*")," or any other valid value")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.read")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Read authorisation of the RabbitMQ user"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be empty, ",(0,i.kt)("inlineCode",{parentName:"td"},".*")," or any other valid value")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_parameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ",(0,i.kt)("inlineCode",{parentName:"td"},"parameters")," field of the ",(0,i.kt)("inlineCode",{parentName:"td"},"definitions.json")," file, used for example to configure shovel"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. ",(0,i.kt)("inlineCode",{parentName:"td"},"Download broker definitions")," on your RabbitMQ to see valid format")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.doc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, boots the REGARDS documentation"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.doc.tag")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Documentation docker image tag that will be deployed"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.doc.http")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When defined, open the HTTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots_configuration")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"List COTS specific configuration"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required. Can be empty")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.postgres.nbTenant")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Use to deduce the number of connections Postgres should allow"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required when ",(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.postgres")," is defined")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.elasticsearch.cluster_name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Elasticsearch cluster name"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required when ",(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch")," is defined")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.elasticsearch_logs.cluster_name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Logging elasticsearch cluster name"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required when ",(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs")," is defined")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.use_ungranular_workspace_on_workdir_network")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Bool")),(0,i.kt)("td",{parentName:"tr",align:"left"},"When true, it means you don't have rights to elevate (sudo) on group_workdir_network folders"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default to false")))),(0,i.kt)("p",null,"The last but not least, the configuration of microservices :"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Constraints"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_config_mservices")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Microservices configuration"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.init_project")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Name of the default project"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Required.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.instance_admin")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Instance admin account definition"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.instance_admin.user")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Name of the instance admin"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"regards-admin@c-s.fr"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.instance_admin.password")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Password of the instance admin"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"root_admin"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.jwt_secret")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"JWT secret"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Recommended for production.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.access_token_validity")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Access token validity period in seconds"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: 1 hour")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.cipher_iv")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Cipher IV"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Recommended for production.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.mail")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Mail configuration used by microservices"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.host")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"SMTP Host"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"rs-maildev"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.port")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"SMTP port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"1025"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.username")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"SMTP username"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.password")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"SMTP password"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.noreply")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"No reply adress"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"regards@noreply.fr"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"AMQP configuration"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp.user")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"AMQP username"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"guest"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp.password")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"AMQP password"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"guest"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres configuration"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.user")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres instance username"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.password")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres instance password"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.host")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres instance host"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.port")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres instance port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.db")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres instance db"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.user")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres init project username"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.password")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres init project password"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.host")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres init project host"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.port")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres init project port"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.db")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Postgres init project db"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Proxy configuration"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy.url")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Proxy URL"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative, false, or a valid URL")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy.username")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Proxy username"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy.password")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Proxy password"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")))),(0,i.kt)("h3",{id:"add-rabbitmq-shovel"},"Add RabbitMQ shovel"),(0,i.kt)("p",null,"Here is an exemple for RabbitMQ shovel, here it receives some products from another system into the FEM (additional_parameters) and allows that system to receive setup another shovel using ",(0,i.kt)("inlineCode",{parentName:"p"},"myuser")," (additional_users and user_permissions):  "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"group_docker_cots:\n  [...]\n  rabbitmq:\n    [...]\n    additional_users:\n      - name: myuser\n        password: myuserpw\n        tags: ''\n    user_permissions:\n      - user: chronos\n        vhost: regards.multitenant.manager\n        configure: ''\n        write: ''\n        read: .*\n    additional_parameters:\n      - component: shovel\n        name: Chronos events to Geode\n        vhost: regards.multitenant.manager\n        value:\n          ack-mode: on-confirm\n          dest-add-forward-headers: false\n          dest-protocol: amqp091\n          dest-exchange: regards.broadcast.fr.cnes.regards.modules.featureprovider.domain.FeatureExtractionRequestEvent\n          dest-uri: amqp://guest:guest@localhost/regards.multitenant.manager\n          src-delete-after: never\n          src-protocol: amqp091\n          src-queue: postprocess.external.messages.geode\n          src-uri: amqp://geode:geodepw@chronos.cnes.fr:5672\n")))}N.isMDXComponent=!0}}]);