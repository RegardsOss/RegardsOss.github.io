(window.webpackJsonp=window.webpackJsonp||[]).push([[828],{2701:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),c=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=c(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),l=c(n),b=r,m=l["".concat(i,".").concat(b)]||l[b]||s[b]||o;return n?a.a.createElement(m,p(p({ref:t},d),{},{components:n})):a.a.createElement(m,p({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var d=2;d<o;d++)i[d]=n[d];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},900:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return c}));var r=n(3),a=n(7),o=(n(0),n(2701)),i={},p={unversionedId:"development/backend/regards/dam/api/generated-snippets/ModelAttributeControllerIT/updateModelAttribute/request-body",id:"development/backend/regards/dam/api/generated-snippets/ModelAttributeControllerIT/updateModelAttribute/request-body",isDocsHomePage:!1,title:"request-body",description:"*Data params",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/development/backend/regards/dam/api/generated-snippets/ModelAttributeControllerIT/updateModelAttribute/request-body.md",slug:"/development/backend/regards/dam/api/generated-snippets/ModelAttributeControllerIT/updateModelAttribute/request-body",permalink:"/fr/docs/next/development/backend/regards/dam/api/generated-snippets/ModelAttributeControllerIT/updateModelAttribute/request-body",editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/i18n/fr/docusaurus-plugin-content-docs/current/development/backend/regards/dam/api/generated-snippets/ModelAttributeControllerIT/updateModelAttribute/request-body.md",version:"current"},u=[],d={toc:u};function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"***Data params**\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'    {\n  "id" : 30,\n  "attribute" : {\n    "id" : 31,\n    "name" : "attnewUpMA",\n    "type" : "STRING",\n    "fragment" : {\n      "id" : 8,\n      "name" : "default",\n      "description" : "Default fragment"\n    },\n    "alterable" : false,\n    "optional" : false,\n    "label" : "ForTests",\n    "dynamic" : true,\n    "internal" : false,\n    "jsonPath" : "properties.attnewUpMA"\n  },\n  "model" : {\n    "id" : 27,\n    "name" : "modelUpMA",\n    "type" : "COLLECTION"\n  },\n  "pos" : 0\n}\n')))}c.isMDXComponent=!0}}]);