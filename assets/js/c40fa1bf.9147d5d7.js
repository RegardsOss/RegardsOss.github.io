"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[8298],{48148:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(74848),t=r(28453);const i={title:"Publish a response event from worker",sidebar_label:"Workers - Send response",slug:"/development/services/worker-manager/api-guides/amqp/publish-worker-response",sidebar_position:5},d=void 0,o={id:"development/services/worker-manager/api-guides/amqp/amqp-worker-publish-response",title:"Publish a response event from worker",description:"Introduction",source:"@site/versioned_docs/version-2.0.0/development/services/worker-manager/api-guides/amqp/amqp-worker-publish-response.md",sourceDirName:"development/services/worker-manager/api-guides/amqp",slug:"/development/services/worker-manager/api-guides/amqp/publish-worker-response",permalink:"/docs/development/services/worker-manager/api-guides/amqp/publish-worker-response",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-2.0.0/development/services/worker-manager/api-guides/amqp/amqp-worker-publish-response.md",tags:[],version:"2.0.0",sidebarPosition:5,frontMatter:{title:"Publish a response event from worker",sidebar_label:"Workers - Send response",slug:"/development/services/worker-manager/api-guides/amqp/publish-worker-response",sidebar_position:5},sidebar:"dev",previous:{title:"Workers - Subscribe to requests",permalink:"/docs/development/services/worker-manager/api-guides/amqp/subscribe-worker-request"},next:{title:"All endpoints (OpenAPI)",permalink:"/docs/development/services/worker-manager/api-guides/rest/api-swagger"}},a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"AMQP API",id:"amqp-api",level:2},{value:"How to",id:"how-to",level:3},{value:"Exchange",id:"exchange",level:3},{value:"Request content",id:"request-content",level:3},{value:"Headers",id:"headers",level:4},{value:"Body",id:"body",level:4}];function l(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(s.p,{children:["This section describes how to publish a new response event to ",(0,n.jsx)(s.code,{children:"rs-worker-manager"})," with an AMQP message from worker after\nreceiving a request from the ",(0,n.jsx)(s.code,{children:"rs-worker-manager"})," microservice."]}),"\n",(0,n.jsx)(s.h2,{id:"amqp-api",children:"AMQP API"}),"\n",(0,n.jsx)(s.h3,{id:"how-to",children:"How to"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"/docs/development/concepts/amqp-api/",children:"Regards AMQP API concept"})," describes how AMQP interfaces must be handled to\nsubmit events or to subscribe to events."]}),"\n",(0,n.jsx)(s.h3,{id:"exchange",children:"Exchange"}),"\n",(0,n.jsx)(s.p,{children:"Responses have to be published to REGARDS RabbitMQ exchange:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Exchange (type topic)"}),(0,n.jsx)(s.th,{children:"Virtual host"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"regards.worker.manager.response"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"regards.multitenant.manager"})})]})})]}),"\n",(0,n.jsx)(s.h3,{id:"request-content",children:"Request content"}),"\n",(0,n.jsx)(s.h4,{id:"headers",children:"Headers"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"regards.tenant"}),(0,n.jsx)(s.td,{children:"String"}),(0,n.jsx)(s.td,{children:"Tenant name depends on REGARDS instance project configuration."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"regards.request.id"}),(0,n.jsx)(s.td,{children:"String"}),(0,n.jsx)(s.td,{children:"Request identifier."})]})]})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",metastring:'title="Example of headers of an response event message"',children:'"regards.tenant": "tenant"\n"regards.request.id": "requestId"\n'})}),"\n",(0,n.jsx)(s.admonition,{title:"request identifier",type:"info",children:(0,n.jsxs)(s.p,{children:["This identifier is the correlation identifier that is provided in submission requests from the ",(0,n.jsx)(s.code,{children:"rs-worker-manager"}),"\nmicroservice."]})}),"\n",(0,n.jsx)(s.h4,{id:"body",children:"Body"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "status": "...",\n  "messages": [\n    "xxx",\n    "yyy"\n  ],\n  "additionalHeaders": {\n    "key1": "value1",\n    "key2": "value2"\n  },\n  "content": "..."\n}\n'})}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"status"}),(0,n.jsx)(s.td,{children:"String"}),(0,n.jsx)(s.td,{children:"Response status (RUNNING, INVALID_CONTENT, ERROR, SUCCESS)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"messages"}),(0,n.jsx)(s.td,{children:"List of String"}),(0,n.jsx)(s.td,{children:"Messages provided by the worker"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"additionalHeaders"}),(0,n.jsx)(s.td,{children:"List of key/value"}),(0,n.jsx)(s.td,{children:"Additional headers for this event"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"content"}),(0,n.jsx)(s.td,{children:"byte"}),(0,n.jsx)(s.td,{children:"The content supplied by the worker in response will be used in the case of a workflow of workers as the body of the message sent to the next worker."})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>d,x:()=>o});var n=r(96540);const t={},i=n.createContext(t);function d(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);