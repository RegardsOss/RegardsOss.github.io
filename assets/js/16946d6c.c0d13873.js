"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[17542],{71283:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var i=s(74848),t=s(28453);const r={title:"How it works",sidebar_label:"How it works",slug:"/development/backend/services/ingest/conception/",sidebar_position:2},d=void 0,o={id:"development/services/ingest/conception",title:"How it works",description:"Introduction",source:"@site/docs/development/services/ingest/conception.md",sourceDirName:"development/services/ingest",slug:"/development/backend/services/ingest/conception/",permalink:"/docs/development/backend/services/ingest/conception/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/ingest/conception.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"How it works",sidebar_label:"How it works",slug:"/development/backend/services/ingest/conception/",sidebar_position:2},sidebar:"dev",previous:{title:"Overview",permalink:"/docs/development/backend/services/ingest/overview/"},next:{title:"Create product",permalink:"/docs/development/backend/services/ingest/api-guides/amqp/ingest-amqp-publish-product"}},c={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Ingest chain",id:"ingest-chain",level:2},{value:"Model validation",id:"model-validation",level:2},{value:"Versioning",id:"versioning",level:2},{value:"Errors management",id:"errors-management",level:2},{value:"Products dissemination",id:"products-dissemination",level:2},{value:"How to ?",id:"how-to-",level:3},{value:"Products notification format",id:"products-notification-format",level:3},{value:"Products dissemination acknowledge",id:"products-dissemination-acknowledge",level:2},{value:"AIP dump",id:"aip-dump",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/development/concepts/products/",children:"Products"})," creation requests can be submitted with ",(0,i.jsx)(n.strong,{children:"SIP"})," formated requests\nthrough ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/api-guides/amqp/ingest-amqp-publish-product",children:"AMQP API"})," or ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/api-guides/rest/submit-sip-api",children:"REST API"}),"\nto ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"AMQP API is strongly recommended to increase service performances when a big amount of requests is sent."})}),"\n",(0,i.jsxs)(n.p,{children:["When a ",(0,i.jsx)(n.strong,{children:"SIP request"})," is received (AMQP or REST API), request is saved in the microservice database and will be\nprocessed by ",(0,i.jsx)(n.strong,{children:"schedulers"})," and ",(0,i.jsx)(n.strong,{children:"Jobs"})," as described\nin ",(0,i.jsx)(n.a,{href:"/docs/development/concepts/requests-jobs/",children:"Requests and Jobs processing concept overview"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["When a ",(0,i.jsx)(n.strong,{children:"SIP"})," or ",(0,i.jsx)(n.strong,{children:"S"}),"ubmition ",(0,i.jsx)(n.strong,{children:"I"}),"nformation ",(0,i.jsx)(n.strong,{children:"P"}),"ackage is handled by ",(0,i.jsx)(n.strong,{children:"rs-ingest service"}),", it is transformed\nto an ",(0,i.jsx)(n.strong,{children:"AIP"})," or ",(0,i.jsx)(n.strong,{children:"A"}),"rchival ",(0,i.jsx)(n.strong,{children:"I"}),"nformation ",(0,i.jsx)(n.strong,{children:"P"}),"ackage by adding :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Metadata"}),"\n",(0,i.jsx)(n.li,{children:"Tags"}),"\n",(0,i.jsx)(n.li,{children:"History"}),"\n",(0,i.jsx)(n.li,{children:"Files storage information"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The main concept to understand how ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice handles ",(0,i.jsx)(n.strong,{children:"SIP"})," is ",(0,i.jsx)(n.strong,{children:"Ingestion chains"}),".\nIngestion chains are configurable\nworkflows to define the way ",(0,i.jsx)(n.strong,{children:"SIP requests"})," will be handled. It is a succession of ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/plugins/listing",children:"plugins"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The here under diagram explains :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Concept of ",(0,i.jsx)(n.strong,{children:"Ingest chain"})," with ",(0,i.jsx)(n.strong,{children:"Plugins"})]}),"\n",(0,i.jsxs)(n.li,{children:["Workflow to handle a ",(0,i.jsx)(n.strong,{children:"SIP request"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(15044).A+"",width:"1209",height:"686"})}),"\n",(0,i.jsx)(n.p,{children:"SIP creation requests can be in different states. The following diagram explain these states."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(74271).A+"",width:"941",height:"662"})}),"\n",(0,i.jsx)(n.h2,{id:"ingest-chain",children:"Ingest chain"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Ingest chain"})," is the main configurable item in the ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice to define how SIPs will be handled.\nAdministrators can configure one or many ",(0,i.jsx)(n.strong,{children:"Ingest chains"})," as\ndescribed ",(0,i.jsx)(n.a,{href:"/docs/user-guide/import-data/oais-files/configure-ingestion-chains/",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Ingest chain"})," used to process a SIP is defined in the ",(0,i.jsx)(n.strong,{children:"metadata"})," section of the request as described\nin ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/api-guides/amqp/ingest-amqp-publish-product",children:"AMQP guide"})," or ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/api-guides/rest/submit-sip-api",children:"REST Guide"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["All steps of an ",(0,i.jsx)(n.strong,{children:"Ingest chain"})," are implemented by a plugin in order to be able to customize behavior for each\nproject and mission. Steps of an ",(0,i.jsx)(n.strong,{children:"Ingest chain"})," are :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SIP validation"})," : to valid input SIP metadata and/or associated files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SIP Pre processing"})," : apply a process before the SIP is transformed to an AIP."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AIP Metadata Generation"})," : transform the SIP metadata to insert them into the AIP."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AIP Storage Metadata Generation"})," : transform files storage location information."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AIP Tagging"})," : add some tags to the output AIP."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SIP Post processing"})," : apply a process once the AIP is fully stored."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["During all the process, the ",(0,i.jsx)(n.strong,{children:"SIP entity"})," status can be :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"INGESTED"})," : The SIP as been validated and AIP is generated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"STORED"})," : The files of the AIP associated to the SIP have been successfully stored with the ",(0,i.jsx)(n.code,{children:"rs-storage"})," service. If\nthe SIP and\nthe AIP are not associated to any file, then the ",(0,i.jsx)(n.code,{children:"STORED"})," status is immediately set without waiting for ",(0,i.jsx)(n.code,{children:"rs-storage"}),"\nresponse."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DELETED"})," : The SIP has been deleted without the ",(0,i.jsx)(n.strong,{children:"irrevocably"})," option. With the ",(0,i.jsx)(n.strong,{children:"irrevocably"})," option set, the\nentity is fully deleted from database (and not just marked as deleted)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["When a SIP is in ",(0,i.jsx)(n.code,{children:"INGESTED"})," state, the ",(0,i.jsx)(n.strong,{children:"AIP entity"})," is created. The AIP status can be :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GENERATED"})," : The AIP has been successfully generated by the ",(0,i.jsx)(n.strong,{children:"AIP Metadata Generation Plugin"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"STORED"}),"    : The files of the AIP are successfully stored or the AIP does not contain any files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DELETED"}),"   : The AIP as been deleted without the ",(0,i.jsx)(n.strong,{children:"irrevocably"})," option. With the ",(0,i.jsx)(n.strong,{children:"irrevocably"})," option\nset, the entity is fully deleted from database (and not just marked as deleted)."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"model-validation",children:"Model validation"}),"\n",(0,i.jsxs)(n.p,{children:["A submitted SIP requests can provide an associated ",(0,i.jsx)(n.strong,{children:"Data Model"})," in its metadata section as described\nin ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/api-guides/amqp/ingest-amqp-publish-product",children:"AMQP guide"})," or ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/api-guides/rest/submit-sip-api",children:"REST Guide"}),". If\nno model is defined in the submitted SIP, no validation is done. To do this model validation, ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice\nkeep a cache of Data Models retrieved from the ",(0,i.jsx)(n.code,{children:"rs-dam"})," microservice."]}),"\n",(0,i.jsxs)(n.p,{children:["Model validation checks for attributes in the ",(0,i.jsx)(n.strong,{children:"properties.descriptiveInformation"})," section of the SIP to be compliant\nwith\nattributes defined in the given ",(0,i.jsx)(n.strong,{children:"Data Model"}),". Validation checks for :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mandatory"})," attributes,"]}),"\n",(0,i.jsxs)(n.li,{children:["Attributes ",(0,i.jsx)(n.strong,{children:"values types"})]}),"\n",(0,i.jsxs)(n.li,{children:["Attributes ",(0,i.jsx)(n.strong,{children:"values restrictions"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Attributes of the data model are validated with ",(0,i.jsx)(n.strong,{children:"case sensitiveness"})," on attributes labels."]}),"\n",(0,i.jsx)(n.h2,{id:"versioning",children:"Versioning"}),"\n",(0,i.jsxs)(n.p,{children:["SIP (and associated AIP) versioning is handled by the ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice. To do so, the SIP (and AIP)\n",(0,i.jsx)(n.strong,{children:"providerId"}),"\nis used. When a SIP is submitted with a providerId that already exists the service will try to handle versioning with\nthree possible methods ",(0,i.jsx)(n.strong,{children:"REPLACE"}),", ",(0,i.jsx)(n.strong,{children:"INC_VERSION"})," or ",(0,i.jsx)(n.strong,{children:"MANUAL"}),". The versioning method is provided in request\n",(0,i.jsx)(n.strong,{children:"metadata.versioningMode"})," section."]}),"\n",(0,i.jsx)(n.p,{children:"These three methods of versioning are :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"INC_VERSION"})," : The new SIP and AIP are created with an incremented version."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"REPLACE"})," : The new SIP and AIP are created with an incremented version. And when new AIP is fully created and\nstored,\nthe original SIP and AIP versions are ",(0,i.jsx)(n.strong,{children:"deleted"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MANUAL"})," : With this versioning method, the SIP is not created. The request remains in\n",(0,i.jsxs)(n.em,{children:[(0,i.jsx)(n.em,{children:"WAITING_VERSIONING_MODE"})," status"]}),"\nwaiting for an administrator to manually select the versioning mode between the two first ones ",(0,i.jsx)(n.strong,{children:"REPLACE"})," or\n",(0,i.jsx)(n.strong,{children:"INC_VERSION"})," by using the administration UI."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"unique identifier"})," of a SIP or an AIP is generated by the ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice, it's its ",(0,i.jsx)(n.strong,{children:"URN"}),"\n(",(0,i.jsx)(n.strong,{children:"U"}),"niform ",(0,i.jsx)(n.strong,{children:"R"}),"esource ",(0,i.jsx)(n.strong,{children:"N"}),"ame). This identifier contains the entity version."]}),"\n",(0,i.jsxs)(n.p,{children:["The Ingest representation of an URN is URN:",(0,i.jsx)(n.code,{children:"<entity>"}),":",(0,i.jsx)(n.code,{children:"<type>"}),":",(0,i.jsx)(n.code,{children:"<tenant>"}),":",(0,i.jsx)(n.code,{children:"<uuid>"}),":V",(0,i.jsx)(n.code,{children:"<version>"})," with :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"entity"})," : AIP or SIP"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"type"})," : DATA, DATASET or COLLECTION"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"version"})," : entity version"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example of product URN"',children:'"urn":"URN:AIP:DATA:project1:c6487db8-9955-3917-a7e2-0374ccde903c:V1"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"errors-management",children:"Errors management"}),"\n",(0,i.jsxs)(n.p,{children:["SIP creation requests can specify the way errors are handled with the parameter ",(0,i.jsx)(n.code,{children:"metadata.replaceErrors"}),". This\nparameter is a boolean."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"replaceErrors"})," is set to ",(0,i.jsx)(n.code,{children:"true"})," and there is already an existing SIP creation request in error state,\nas both requests have the same ",(0,i.jsx)(n.code,{children:"providerId"}),", the previous error request is deleted and replaced with the\nnew one. Otherwise, the last request is retried."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"default value"})," of this parameter is ",(0,i.jsx)(n.code,{children:"false"})," if not specified in the submitted SIP."]}),"\n",(0,i.jsxs)(n.p,{children:["The default behavior is to keep SIP requests in error state to allow the administrator to retry them. If you prefer to\nsend a new request instead of retrying the existing one, use the ",(0,i.jsx)(n.code,{children:"replaceErrors"})," parameter in your request."]}),"\n",(0,i.jsx)(n.h2,{id:"products-dissemination",children:"Products dissemination"}),"\n",(0,i.jsx)(n.h3,{id:"how-to-",children:"How to ?"}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice is configured to notify external components, each created/modified/deleted AIPs are sent\nto the ",(0,i.jsx)(n.code,{children:"rs-notifier"})," microservice to notify external components."]}),"\n",(0,i.jsx)(n.p,{children:"To notify external systems, you need to :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Activate notification of products in ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice configuration. To do so,\nsee ",(0,i.jsx)(n.a,{href:"/docs/user-guide/import-data/oais-files/settings-ingest/",children:"Ingest Configuration"})]}),"\n",(0,i.jsxs)(n.li,{children:["Configure ",(0,i.jsx)(n.code,{children:"rs-notifier"})," to set the wanted destination of the notifications. To learn how to use ",(0,i.jsx)(n.code,{children:"rs-notifier"}),"\nmicroservice see ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/notifier/overview/",children:"Notification service"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Nevertheless, if automatic notification is not activated, or if you want to ",(0,i.jsx)(n.strong,{children:"re-notify"})," some AIP, you can manually\nnotify the selected AIPs using the admin UI. To do so, see [AIP Dissemination](../../..\n/user-documentation/4_1-ingest/oais-dissemination.md)."]}),"\n",(0,i.jsxs)(n.p,{children:["When a notification is sent to a recipient by notifier service, the dissemination information of the notified AIP is\nupdated by the ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice with :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"recipient label"}),"  : Name of the recipient of the notification (as configured in ",(0,i.jsx)(n.code,{children:"rs-notifier"})," service)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dissemination date"})," : Date of the notification"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"acknowledge date"}),"  : Date of the received acknowledgement. If the recipient is not configured to send\nacknowledgements, this date is the same as the dissemination date. If the recipient is configured to send\nacknowledgements, this date is the date when the acknowledgement is received. This acknowledgement parameter is\nconfigured in the ",(0,i.jsx)(n.code,{children:"rs-notifier"})," service for each recipient."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"With those information, Regards administrators can view all recipients of AIPs notifications using the administrator UI."}),"\n",(0,i.jsx)(n.h3,{id:"products-notification-format",children:"Products notification format"}),"\n",(0,i.jsxs)(n.p,{children:["All notifications of products in the OAIS catalog are sent to the ",(0,i.jsx)(n.code,{children:"Notifier"})," microservice using the same formalism\nindicated below and in accordance with the format expected by the Notify service."]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["The notification format is ",(0,i.jsx)(n.strong,{children:"very important"})," to understand\n",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/notifier/architecture/#configure-dispatching-rules",children:"how to configure the notifier microservice"})," to dispatch the\nproducts to the configured recipients."]})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Object"})}),(0,i.jsxs)(n.td,{children:["Metadata about the product notification                            ",(0,i.jsx)("br",{})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata.action"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsxs)(n.td,{children:["Type of product notification. Possible values are : ",(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:"INGEST"}),": New product created.",(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:"OAIS_DELETION"}),": Product deleted.",(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:"UPDATE"})," : Product updated.",(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:"AIP_DISSEMINATION"}),": Product manually notified."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata.sessionOwner"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"Owner of the product."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata.sessionOwner"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"Session in which the product has been created."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Object"})}),(0,i.jsx)(n.td,{children:"The product to broadcast"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.id"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Number"})}),(0,i.jsx)(n.td,{children:"The internal Regards database product identifier"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.aipId"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"The unique identifier of the product in URN format."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.state"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsxs)(n.td,{children:["Product state as described in the ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/conception/#ingest-chain",children:"Ingest chain section"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.storages"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"List<String>"})}),(0,i.jsx)(n.td,{children:"Storage locations of the product files. They correspond to storage spaces configured on the storage service."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.last"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Boolean"})}),(0,i.jsx)(n.td,{children:"Is the product the latest version?"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.disseminationStatus"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsxs)(n.td,{children:["Product notification status. Possible values are :",(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:"NONE"}),(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:"PENDING"}),(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:"DONE"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.sessionOwner"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"Session owner of the product"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.session"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:"Session name in which the product has been created."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.categories"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"List<String>"})}),(0,i.jsx)(n.td,{children:"List of optional categories of the product."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.tags"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"List<String>"})}),(0,i.jsx)(n.td,{children:"List of optional categories of the product."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.creationDate"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"DATE_ISO8601"})}),(0,i.jsx)(n.td,{children:"Creation date of the product."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.lastUpdate"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"DATE_ISO8601"})}),(0,i.jsx)(n.td,{children:"Last update date of the product."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"payload.aip"}),(0,i.jsx)(n.td,{children:"AIP"}),(0,i.jsxs)(n.td,{children:["AIP as describe in ",(0,i.jsx)(n.a,{href:"../../../appendices/oais",children:"OAIS appendice"})]})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Notification example"',children:'{\n  "metadata": {\n    "action": "INGEST",\n    "session": "Test owner",\n    "sessionOwner": "Session of 2024-06-14"\n  },\n  "payload": {\n    "id": 177,\n    "aipId": "URN:AIP:DATA:validation:098f6bcd-4621-3373-8ade-4e832627b4f6:V1",\n    "state": "STORED",\n    "storages": [\n      "Local"\n    ],\n    "last": true,\n    "disseminationStatus": "NONE",\n    "sessionOwner": "Test owner",\n    "session": "Session of 2024-06-14",\n    "categories": [],\n    "tags": [\n      "TAG_001"\n    ],\n    "creationDate": "2024-06-14T10:38:08.05868Z",\n    "lastUpdate": "2024-06-14T11:03:09.826293Z",\n    "aip": {\n      "type": "Feature",\n      "id": "URN:AIP:DATA:validation:098f6bcd-4621-3373-8ade-4e832627b4f6:V1",\n      "sipId": "URN:SIP:DATA:validation:098f6bcd-4621-3373-8ade-4e832627b4f6:V1",\n      "providerId": "Product001",\n      "version": 1,\n      "ipType": "DATA",\n      "geometry": {},\n      "properties": {\n        "contentInformations": [\n          {\n            "dataObject": {\n              "regardsDataType": "RAWDATA",\n              "filename": "regards-2296-data-1.dat",\n              "locations": [\n                {\n                  "storage:": "Local",\n                  "url": "file:///regards-input/validation/data/2296/regards-2296-data-1.dat"\n                }\n              ],\n              "checksum": "9a964ed3be0e2e2786d82ace9d971e90",\n              "algorithm": "MD5"\n            },\n            "representationInformation": {\n              "syntax": {\n                "name": "TEXT",\n                "mimeType": "text/plain"\n              }\n            }\n          }\n        ],\n        "pdi": {\n          "contextInformation": {\n            "tags": [\n              "TAG_001"\n            ]\n          },\n          "provenanceInformation": {\n            "history": []\n          },\n          "accessRightInformation": {}\n        },\n        "descriptiveInformation": {\n          "property1": 11056,\n          "date": "2018-01-20T17:22:48Z"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"products-dissemination-acknowledge",children:"Products dissemination acknowledge"}),"\n",(0,i.jsxs)(n.p,{children:["External systems who subscribe to AIP notifications from the ",(0,i.jsx)(n.code,{children:"rs-ingest"})," service can send back an acknowledgment to\ninform that the notification has been successfully handled. To do so, refer\nto ",(0,i.jsx)(n.a,{href:"/docs/development/backend/services/ingest/api-guides/amqp/ingest-amqp-publish-ack",children:"AIP notification acknowledge guide"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"With this system Regards administrators can validate using the administrator UI that notifications has been successfully\nhandled by recipients."}),"\n",(0,i.jsx)(n.h2,{id:"aip-dump",children:"AIP dump"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"rs-ingest"})," microservice provides a dump functionality of all the AIPs referenced in its catalog.\nIncremental dumps are done every time the dump ",(0,i.jsx)(n.strong,{children:"cron"})," is activated. The first time, all AIP are added into the dump\nfile.\nThe dump file is a ",(0,i.jsx)(n.strong,{children:"zip"})," archive containing AIP in json format."]}),"\n",(0,i.jsxs)(n.p,{children:["You can ",(0,i.jsx)(n.a,{href:"/docs/user-guide/import-data/oais-files/settings-ingest/#-les-param%C3%A8tres",children:"configure dump options"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},15044:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/conception-8fdfdb155c8996b4975209c8311b13c8.png"},74271:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/request_state_diagram-ab7e5c87213f1f69cc927362e6622ddc.png"},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);