"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[98699],{54933:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var s=n(74848),t=n(28453);const r={title:"Plugins",sidebar_label:"Available plugins",slug:"/development/backend/services/ingest/plugins/listing",sidebar_position:1},d=void 0,a={id:"development/services/ingest/plugins/overview",title:"Plugins",description:"As described in the conception section, the rs-ingest microservice is based on Ingest",source:"@site/versioned_docs/version-2.0.0/development/services/ingest/plugins/overview.md",sourceDirName:"development/services/ingest/plugins",slug:"/development/backend/services/ingest/plugins/listing",permalink:"/docs/development/backend/services/ingest/plugins/listing",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-2.0.0/development/services/ingest/plugins/overview.md",tags:[],version:"2.0.0",sidebarPosition:1,frontMatter:{title:"Plugins",sidebar_label:"Available plugins",slug:"/development/backend/services/ingest/plugins/listing",sidebar_position:1},sidebar:"dev",previous:{title:"All endpoints (OpenAPI)",permalink:"/docs/development/backend/services/ingest/api-guides/rest/api-swagger"},next:{title:"Importation/Exportation",permalink:"/docs/development/backend/services/ingest/configuration/import-export"}},l={},o=[{value:"SIP Validation plugins",id:"sip-validation-plugins",level:2},{value:"SIP Pre processing plugins",id:"sip-pre-processing-plugins",level:2},{value:"AIP Metadata generation",id:"aip-metadata-generation",level:2},{value:"AIP Storage metadata generation",id:"aip-storage-metadata-generation",level:2},{value:"AIP Tagging",id:"aip-tagging",level:2},{value:"SIP Post processing plugins",id:"sip-post-processing-plugins",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["As described in the ",(0,s.jsx)(i.a,{href:"/docs/development/backend/services/ingest/conception/",children:"conception section"}),", the ",(0,s.jsx)(i.code,{children:"rs-ingest"})," microservice is based on ",(0,s.jsx)(i.strong,{children:"Ingest\nchains"})," to\nprocess products creation requests. An ",(0,s.jsx)(i.strong,{children:"Ingest chain"})," is a workflow composed of successive steps. Each step of the\nworkflow is an ",(0,s.jsx)(i.strong,{children:"extension point"})," implemented through plugins. Those extension points are :"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"SIP validation"}),"\n",(0,s.jsx)(i.li,{children:"SIP Pre processing"}),"\n",(0,s.jsx)(i.li,{children:"AIP Metadata Generation"}),"\n",(0,s.jsx)(i.li,{children:"AIP Storage Metadata Generation"}),"\n",(0,s.jsx)(i.li,{children:"AIP Tagging"}),"\n",(0,s.jsx)(i.li,{children:"SIP Post processing"}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{title:"developers advice",type:"info",children:(0,s.jsx)(i.p,{children:"If you want to create your own implementation of one of these extension points, you need to extend the specific\ninterface indicated."})}),"\n",(0,s.jsx)(i.h2,{id:"sip-validation-plugins",children:"SIP Validation plugins"}),"\n",(0,s.jsxs)(i.p,{children:["All the following plugins implements\nthe ",(0,s.jsx)(i.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/ISipValidation.java",children:"ISipValidation interface"}),"."]}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Plugin image"}),(0,s.jsx)(i.th,{children:"Plugin name"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Already"})," provided ",(0,s.jsx)("br",{}),"inside the microservice"]}),(0,s.jsx)(i.td,{children:"DefaultSIPValidation"}),(0,s.jsx)(i.td,{children:"Products are not validated"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Already"})," provided ",(0,s.jsx)("br",{}),"inside the microservice"]}),(0,s.jsx)(i.td,{children:"UniqueProviderIdSipValidation"}),(0,s.jsx)(i.td,{children:"Invalidate products if a previous version already exists"})]})]})]}),"\n",(0,s.jsx)(i.h2,{id:"sip-pre-processing-plugins",children:"SIP Pre processing plugins"}),"\n",(0,s.jsxs)(i.p,{children:["All the following plugins implements\nthe ",(0,s.jsx)(i.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/ISipPreprocessing.java",children:"ISipPreprocessing interface"}),"."]}),"\n",(0,s.jsx)(i.p,{children:"No plugin available yet."}),"\n",(0,s.jsx)(i.h2,{id:"aip-metadata-generation",children:"AIP Metadata generation"}),"\n",(0,s.jsxs)(i.p,{children:["All the following plugins implements\nthe ",(0,s.jsx)(i.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/IAipGeneration.java",children:"IAipGeneration interface"}),"."]}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Plugin image"}),(0,s.jsx)(i.th,{children:"Plugin name"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Already"})," provided ",(0,s.jsx)("br",{}),"inside the microservice"]}),(0,s.jsx)(i.td,{children:"DefaultSingleAIPGeneration"}),(0,s.jsx)(i.td,{children:"No metadata enhancement, SIP metadata are reported in the AIP"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"https://github.com/orgs/RegardsOss/packages/container/package/rs-enhanced-descriptive-aip-generation-plugin",children:(0,s.jsx)(i.strong,{children:"rs-enhanced-descriptive-aip-generation-plugin"})})}),(0,s.jsx)(i.td,{children:"StringEnhancedDescriptiveAipGeneration"}),(0,s.jsx)(i.td,{children:"Add given key/value metadata (wih string value) to every AIP on descriptiveInformation section"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Not yet published"}),(0,s.jsx)(i.td,{children:"StringArrayEnhancedDescriptiveAipGeneration"}),(0,s.jsx)(i.td,{children:"Add given key/values metadata (wih string values) to every AIP on descriptiveInformation section"})]})]})]}),"\n",(0,s.jsx)(i.h2,{id:"aip-storage-metadata-generation",children:"AIP Storage metadata generation"}),"\n",(0,s.jsxs)(i.p,{children:["All the following plugins implements\nthe ",(0,s.jsx)(i.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/IAIPStorageMetadataUpdate.java",children:"IAIPStorageMetadataUpdate interface"}),"."]}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Plugin image"}),(0,s.jsx)(i.th,{children:"Plugin name"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Already"})," provided ",(0,s.jsx)("br",{}),"inside the microservice"]}),(0,s.jsx)(i.td,{children:"VirtualStorageLocation"}),(0,s.jsx)(i.td,{children:"Transforms a configured virtual storage location into one or many real storage locations"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"aip-tagging",children:"AIP Tagging"}),"\n",(0,s.jsxs)(i.p,{children:["All the following plugins implements\nthe ",(0,s.jsx)(i.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/IAipTagging.java",children:"IAipTagging interface"}),"."]}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Plugin image"}),(0,s.jsx)(i.th,{children:"Plugin name"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Already"})," provided ",(0,s.jsx)("br",{}),"inside the microservice"]}),(0,s.jsx)(i.td,{children:"DefaultAIPTagging"}),(0,s.jsx)(i.td,{children:"Adds configured tags to every new AIP"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"sip-post-processing-plugins",children:"SIP Post processing plugins"}),"\n",(0,s.jsxs)(i.p,{children:["All the following plugins implements\nthe ",(0,s.jsx)(i.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/ISipPostprocessing.java",children:"ISipPostprocessing interface"}),"."]}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Plugin image"}),(0,s.jsx)(i.th,{children:"Plugin name"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Not yet published"}),(0,s.jsx)(i.td,{children:"SendDeleteFilesWorkerRequest"}),(0,s.jsx)(i.td,{children:"Send an AMQP request to worker manager with all SIP input files"})]})})]})]})}function g(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>a});var s=n(96540);const t={},r=s.createContext(t);function d(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);