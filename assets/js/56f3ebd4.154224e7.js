"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[22490],{88666:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>n,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=t(74848),r=t(28453);const i={title:"Product Restitution services",sidebar_label:"Product Restitution services",slug:"/development/functional-overview/microservices-restitution/"},n=void 0,c={id:"overview/functional-overview/product-restitution-services",title:"Product Restitution services",description:"Products restitution Services are a set of facultative REGARDS services that allows user to retrieve files associated to products from the metacatalog.",source:"@site/docs/overview/functional-overview/05-product-restitution-services.md",sourceDirName:"overview/functional-overview",slug:"/development/functional-overview/microservices-restitution/",permalink:"/docs/next/development/functional-overview/microservices-restitution/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/overview/functional-overview/05-product-restitution-services.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Product Restitution services",sidebar_label:"Product Restitution services",slug:"/development/functional-overview/microservices-restitution/"},sidebar:"overview",previous:{title:"GeoJson catalog services",permalink:"/docs/next/development/functional-overview/geojson-catalog-services/"},next:{title:"Products",permalink:"/docs/next/development/concepts/products/"}},a={},d=[];function l(e){const s={a:"a",admonition:"admonition",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.p,{children:["Products restitution Services are a set of ",(0,o.jsx)(s.strong,{children:"facultative REGARDS services"})," that allows user to retrieve files associated to products from the metacatalog."]}),"\n",(0,o.jsx)(s.p,{children:"In REGARDS, there are two types of storage. Hot storage, for direct downloading of data. Cold storage, which allows data to be downloaded only after it has been made available."}),"\n",(0,o.jsx)(s.admonition,{title:"Cold storages files",type:"info",children:(0,o.jsxs)(s.p,{children:["Restitution services are mandatory for products with files stored on ",(0,o.jsx)(s.strong,{children:"Cold storages"}),". This kind of storage implies\nthat all the data are not available for download at any time. Users need to request files for availability first."]})}),"\n",(0,o.jsx)(s.p,{children:"To allow users to download products from both storage types, you need to use the downloader microservice :"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"/docs/next/development/backend/services/downloader/overview/",children:"rs-donwloader"})," : Manage products files downloads."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"To allow users to request the return of files stored on a cold storage space, you need to ise the order microservice :"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"/docs/next/development/backend/services/order/overview/",children:"rs-order"})," : Manage users products orders."]}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["Finally, there are two ",(0,o.jsx)(s.strong,{children:"optional"})," services :"]}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"/docs/next/development/backend/services/delivery/overview/",children:"rs-delivery"})," : Enables users who have placed product orders via the order service to retrieve order totals from an S3 server."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"/docs/next/development/backend/services/processing/overview/",children:"rs-processing"})," : Enables users to request light processing of data ordered via the order service."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"The following schema explains the interactions between microservices to handle products restitution."}),"\n",(0,o.jsx)(s.p,{children:"In this diagram, steps 1 to 6 correspond to the issue of the command, and from step 7 onwards, two scenarios are possible:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Scenario A: The user downloads the order files one by one via REGARDS."}),"\n",(0,o.jsx)(s.li,{children:"Scenario B: The user downloads the result of his order to an S3 server."}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.img,{src:t(57784).A+"",width:"1054",height:"766"})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},57784:(e,s,t)=>{t.d(s,{A:()=>o});const o=t.p+"assets/images/order_workflow-8bdb67ccc0d5e48212129f609f3caef7.png"},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>c});var o=t(96540);const r={},i=o.createContext(r);function n(e){const s=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),o.createElement(i.Provider,{value:s},e.children)}}}]);