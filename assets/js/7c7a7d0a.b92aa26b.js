"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[32953],{1145:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>a});var i=n(74848),t=n(28453);const o={id:"backend-ingest-post-processing-plugins",title:"SIP Post processing plugins",sidebar_label:"SIP post processing",slug:"/development/backend/services/ingest/plugins/sip-post-processing/"},r=void 0,p={id:"development/backend/regards/ingest/plugins/backend-ingest-post-processing-plugins",title:"SIP Post processing plugins",description:"Overview",source:"@site/versioned_docs/version-1.14/development/backend/regards/ingest/plugins/sip-post-processing-plugins.md",sourceDirName:"development/backend/regards/ingest/plugins",slug:"/development/backend/services/ingest/plugins/sip-post-processing/",permalink:"/docs/1.14/development/backend/services/ingest/plugins/sip-post-processing/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.14/development/backend/regards/ingest/plugins/sip-post-processing-plugins.md",tags:[],version:"1.14",frontMatter:{id:"backend-ingest-post-processing-plugins",title:"SIP Post processing plugins",sidebar_label:"SIP post processing",slug:"/development/backend/services/ingest/plugins/sip-post-processing/"},sidebar:"dev",previous:{title:"AIP tagging",permalink:"/docs/1.14/development/backend/services/ingest/plugins/aip-tagging/"},next:{title:"Bus message events",permalink:"/docs/1.14/development/backend/services/ingest/events/"}},c={},a=[{value:"Overview",id:"overview",level:2},{value:"Interface",id:"interface",level:2},{value:"Implementation",id:"implementation",level:2}];function l(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"This extension point allows to process a business action after a SIP is successfully handled."})}),"\n",(0,i.jsx)(s.p,{children:"REGARDS do not provides any implementation of this extension point yet."}),"\n",(0,i.jsx)(s.h2,{id:"interface",children:"Interface"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/ISipPostprocessing.java",children:"ISipPostprocessing"})}),"\n",(0,i.jsx)(s.h2,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsxs)(s.p,{children:["To learn more about how to create your own plugin see ",(0,i.jsx)(s.a,{href:"/docs/1.14/development/backend/framework/modules/plugins/",children:"Plugins"})]}),"\n",(0,i.jsx)(s.p,{children:"Here under is an exemple of how to implements this extension point to create your own business logic."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'@Plugin(id = "exemple", version = "1.0.0", description = "exemple plugin",\n        author = "REGARDS Team", contact = "regards@c-s.fr", licence = "LGPLv3.0", owner = "CSSI",\n        url = "https://github.com/RegardsOss")\npublic class Plugin implements ISipPostprocessing {\n\n        @Override\n        public void postprocess(final SIP sip) {\n                \n        }\n   \n}\n'})})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>p});var i=n(96540);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function p(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);