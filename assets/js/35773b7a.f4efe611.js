"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[1266],{14929:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var o=a(74848),n=a(28453);const s={title:"REGARDS Meta catalog",sidebar_label:"Meta catalog",slug:"/development/concepts/meta-catalog/"},r=void 0,c={id:"overview/concepts/meta-catalog",title:"REGARDS Meta catalog",description:"Meta catalog",source:"@site/docs/overview/concepts/02-meta-catalog.md",sourceDirName:"overview/concepts",slug:"/development/concepts/meta-catalog/",permalink:"/docs/development/concepts/meta-catalog/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/overview/concepts/02-meta-catalog.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"REGARDS Meta catalog",sidebar_label:"Meta catalog",slug:"/development/concepts/meta-catalog/"},sidebar:"overview",previous:{title:"Products",permalink:"/docs/development/concepts/products/"}},i={},d=[{value:"Meta catalog",id:"meta-catalog",level:3},{value:"Model",id:"model",level:3},{value:"Data source",id:"data-source",level:3},{value:"Product standardization",id:"product-standardization",level:3}];function l(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h3,{id:"meta-catalog",children:"Meta catalog"}),"\n",(0,o.jsxs)(t.p,{children:["REGARDS ",(0,o.jsx)(t.strong,{children:"Meta catalog"})," is the result of the ",(0,o.jsx)(t.strong,{children:"standardization"})," of multiples source catalogs\nof ",(0,o.jsx)(t.a,{href:"/docs/development/concepts/products/",children:"products"}),"\nin a single catalog."]}),"\n",(0,o.jsx)(t.p,{children:"In all REGARDS documentation, we will talk about :"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Data source"})," for an existing catalog crawled by REGARDS."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Meta catalog"})," for the global resulting catalog containing all products from all data sources crawled."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["To learn more, you can\nread ",(0,o.jsx)(t.a,{href:"/docs/development/functional-overview/meta-catalog-services",children:"Functional Overview - Meta catalog services"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"model",children:"Model"}),"\n",(0,o.jsxs)(t.p,{children:["The notion of ",(0,o.jsx)(t.strong,{children:"Model"})," is a key notion and defines the list of metadata for a group of\nvalid ",(0,o.jsx)(t.a,{href:"/docs/development/concepts/products/",children:"products"}),". It is used to standardize products."]}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["REGARDS ",(0,o.jsx)(t.strong,{children:"Meta catalog"})," can contain products with different ",(0,o.jsx)(t.strong,{children:"Models"}),"."]})}),"\n",(0,o.jsx)(t.h3,{id:"data-source",children:"Data source"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"/docs/development/concepts/products/",children:"Products"})," of each crawled data source are transformed by REGARDS to match a ",(0,o.jsx)(t.strong,{children:"Model"}),"\nbefore being inserted in the final catalog called ",(0,o.jsx)(t.strong,{children:"Meta catalog"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Every ",(0,o.jsx)(t.strong,{children:"Data source"})," is associated to a ",(0,o.jsx)(t.strong,{children:"Model"})," to ensure every product is valid and contains associated\nmetadata."]}),"\n",(0,o.jsx)(t.h3,{id:"product-standardization",children:"Product standardization"}),"\n",(0,o.jsxs)(t.p,{children:["Thanks to ",(0,o.jsx)(t.strong,{children:"Model"})," and ",(0,o.jsx)(t.strong,{children:"Data source"})," design, you can transform products coming from several data sources to\nstandardize them into the same model. This is the key concept in REGARDS that allows you to search products coming fom\nseveral providers with the same search criteria."]}),"\n",(0,o.jsx)(t.p,{children:"Let's take an example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",metastring:'{5} title="Data source 1 products example"',children:'{\n  "label": "my product from source 1",\n  ...\n  "properties": {\n    "creation_date": "2024-01-01"\n  }\n}\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",metastring:'{3} title="Data source 2 products example"',children:'{\n  "description": "my product from source 2",\n  "date": "2023-06-01"\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["In this example, you can define a ",(0,o.jsx)(t.strong,{children:"Model"})," to standardize products coming from these two different datasource,\nwhich use 2 different products formats, to make products sharing the same standard Model. To do so, you can take these\ntwo metadata attributes, ",(0,o.jsx)(t.code,{children:"date"})," and ",(0,o.jsx)(t.code,{children:"properties.creation_date"}),", to set them in the same attribut in REGARDS\n",(0,o.jsx)(t.strong,{children:"Meta catalog"}),".",(0,o.jsx)(t.br,{}),"\n","With those two attributes indexed with the same attribute in the resulting meta catalog,\nyou can search for both products with the same search criteria."]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>c});var o=a(96540);const n={},s=o.createContext(n);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);