"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[34155],{36670:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=t(74848),a=t(28453);const o={id:"ansible-vault",title:"Ansible Vault",slug:"/setup/swarm/advanced/ansible-vault",sidebar_position:8},r=void 0,i={id:"setup/swarm/advanced/ansible-vault",title:"Ansible Vault",description:"Your inventory may contain some passwords that you do not want to share under source control.",source:"@site/docs/setup/swarm/advanced/ansible-vault.md",sourceDirName:"setup/swarm/advanced",slug:"/setup/swarm/advanced/ansible-vault",permalink:"/docs/setup/swarm/advanced/ansible-vault",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/setup/swarm/advanced/ansible-vault.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"ansible-vault",title:"Ansible Vault",slug:"/setup/swarm/advanced/ansible-vault",sidebar_position:8},sidebar:"install",previous:{title:"Microservices optimizations",permalink:"/docs/setup/swarm/advanced/optimizations/"},next:{title:"Mount volumes, configs...",permalink:"/docs/setup/swarm/advanced/swarm-mount"}},d={},l=[{value:"Create file",id:"create-file",level:2},{value:"Edit encrypt file",id:"edit-encrypt-file",level:2},{value:"docker_nodes Vault file",id:"docker_nodes-vault-file",level:2},{value:"regards_nodes Vault file",id:"regards_nodes-vault-file",level:2}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Your inventory may contain some passwords that you do not want to share under source control.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html",children:"Ansible Vault"})," allows you to crypt variable values and\nfiles content inside your inventory.",(0,s.jsx)(n.br,{}),"\n","After that, you will need to add ",(0,s.jsx)(n.code,{children:" --ask-vault-pass"})," when running ",(0,s.jsx)(n.code,{children:"ansible-playbook"})," to let Ansible decrypt crypted\nvalues on the fly."]}),"\n",(0,s.jsx)(n.admonition,{title:"Why",type:"info",children:(0,s.jsxs)(n.p,{children:["You can encrypt the content of a file, like the ",(0,s.jsx)(n.strong,{children:"certificate key"}),", or ",(0,s.jsx)(n.strong,{children:"create an inventory file"})," to store encrypted\nproperties / values (password, IP...)."]})}),"\n",(0,s.jsx)(n.admonition,{title:"vi usage",type:"danger",children:(0,s.jsxs)(n.p,{children:["Ansible Vault uses the ",(0,s.jsx)(n.code,{children:"vi"})," program to write the content of the file.",(0,s.jsx)(n.br,{}),"\n","Don't forget to press ",(0,s.jsx)(n.code,{children:"i"})," before writing inside the file, then save the content by pressing ",(0,s.jsx)(n.code,{children:"Escape"}),", then input ",(0,s.jsx)(n.code,{children:":wq"}),"\nand finally press ",(0,s.jsx)(n.code,{children:"Enter"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"create-file",children:"Create file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ansible-vault create --ask-vault-pass <file.to.encryt>\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command asks you for the vault password, then opens the vi program to let you write the content."}),"\n",(0,s.jsxs)(n.p,{children:["The file ",(0,s.jsx)(n.code,{children:"<file.to.encryt>"})," must not exist before running this command."]}),"\n",(0,s.jsx)(n.h2,{id:"edit-encrypt-file",children:"Edit encrypt file"}),"\n",(0,s.jsx)(n.p,{children:"You can also edit an encrypt file."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ansible-vault edit --ask-vault-pass <file.encryted>\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"nano editor",type:"info",children:(0,s.jsxs)(n.p,{children:["You can use the nano editor using :\n",(0,s.jsx)(n.code,{children:"env EDITOR=nano ansible-vault edit --ask-vault-pass <file.encryted>"})]})}),"\n",(0,s.jsx)(n.h2,{id:"docker_nodes-vault-file",children:"docker_nodes Vault file"}),"\n",(0,s.jsxs)(n.p,{children:["Here is an exemple of a Vault file that you can store inside ",(0,s.jsx)(n.code,{children:"inventories/<inventory name>/group_vars/docker_nodes/vault"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker_vault:\n  # Subnet/netmask address. Basically, it cannot end with .0\n  docker_bip: xx.xx.xx.xx/24\n  docker_ingress_network:  xx.xx.xx.xx/24\n  docker_ingress_network_gateway: xx.xx.xx.1\n  docker_gwbridge_network: xx.xx.xx.xx/24\n"})}),"\n",(0,s.jsx)(n.h2,{id:"regards_nodes-vault-file",children:"regards_nodes Vault file"}),"\n",(0,s.jsxs)(n.p,{children:["Here is an exemple of a Vault file that you can store inside ",(0,s.jsx)(n.code,{children:"inventories/<inventory name>/group_vars/regards_nodes/vault"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'regards_vault:\n  # Configuration related to Regards Docker network\n  group_docker_network_ip_network: xx.xx.xx\n  # Configuration related to REGARDS microservices\n  # see group_config_mservices for usage\n  group_config_mservices:\n    # Instance admin account configuration\n    instance_admin:\n      password: xxx\n    # Configure JWT secret token\n    authentication:\n      jwt_secret: xxxxx\n      jwt_key_hs256: xxxxx\n      jwt_key_hs384: xxxxx\n      jwt_key_hs512: xxxxx\n      order_jwt_secret: xxxxx\n      # Password to crypt DB secret (16 characters max)\n      cipher_iv: xxxxx\n    # Configuration related to REGARDS Postgres databases\n    postgres:\n      # Internal database used by REGARDS to allow multitenancy\n      instance:\n        password: xxx\n      # First tenant database used by REGARDS on first boot\n      init_project:\n        password: xxx\n  # Configuration related to COTS\n  # RabbitMQ, Grafana, MinIO...\n  # see group_docker_cots for usage\n  group_docker_cots:\n    # Configuration related to AMQP / RabbitMQ\n    rabbitmq:\n      # Used by REGARDS to connect to RabbitMQ\n      regards:\n        password: xxxx\n      additional_users:\n        # Add any missionized account here under\n        # yyyy is the component name that connects to your instance. Ex: airbus, nasa, chronos...\n        yyyy:\n          password: xxxx\n    # Configuration related to MinIO server\n    minio:\n      # Used by REGARDS to connect to MinIO\n      regards:\n        secret: xxxx\n    supervision:\n      # Configuration related to databases used by Grafana to allow supervision\n      grafana:\n        datasources:\n          custom:\n            # Used by Grafana to access to tenants databases\n            # Must be "read only" users\n            postgres:\n              foe_tenant:\n                password: xxx\n  # Exemple of S3 configuration. Remove if not used\n  s3:\n    # Used to connect to the datalake\n    datalake:\n      staf:\n        t2:\n          secret: xxxx\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(96540);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);