"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[15947],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(n),d=i,v=g["".concat(o,".").concat(d)]||g[d]||u[d]||r;return n?a.createElement(v,s(s({ref:t},p),{},{components:n})):a.createElement(v,s({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=g;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},71007:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return p},default:function(){return g}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),s=["components"],l={id:"backend-catalog-service-plugins",title:"Catalog service plugins",sidebar_label:"Catalog service",slug:"/development/backend/services/catalog/service-plugins/"},o=void 0,c={unversionedId:"development/backend/regards/catalog/plugins/backend-catalog-service-plugins",id:"version-1.7.1/development/backend/regards/catalog/plugins/backend-catalog-service-plugins",title:"Catalog service plugins",description:"Overview",source:"@site/versioned_docs/version-1.7.1/development/backend/regards/catalog/plugins/catalog-service-plugins.md",sourceDirName:"development/backend/regards/catalog/plugins",slug:"/development/backend/services/catalog/service-plugins/",permalink:"/docs/1.7.1/development/backend/services/catalog/service-plugins/",editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.7.1/development/backend/regards/catalog/plugins/catalog-service-plugins.md",tags:[],version:"1.7.1",frontMatter:{id:"backend-catalog-service-plugins",title:"Catalog service plugins",sidebar_label:"Catalog service",slug:"/development/backend/services/catalog/service-plugins/"},sidebar:"dev",previous:{title:"Search",permalink:"/docs/1.7.1/development/backend/services/catalog/search-api/"},next:{title:"Search engine",permalink:"/docs/1.7.1/development/backend/services/catalog/search-engine-plugins/"}},p=[{value:"Overview",id:"overview",children:[],level:2},{value:"Usages",id:"usages",children:[{value:"Apply service on one entity",id:"apply-service-on-one-entity",children:[],level:3},{value:"Apply service on one multiple entities",id:"apply-service-on-one-multiple-entities",children:[],level:3},{value:"Apply service on entities from a search query",id:"apply-service-on-entities-from-a-search-query",children:[],level:3}],level:2},{value:"Interfaces",id:"interfaces",children:[],level:2},{value:"Implementation",id:"implementation",children:[],level:2}],u={toc:p};function g(e){var t=e.components,l=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This extension point allows to provide a business processing on catalog meda data. "))),(0,r.kt)("p",null,"Each business service plugin is accessible through a unique microservice endpoint :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"@POST http://<host>:<port>/api/v1/rs-catalog/services/{servideId}/apply\n")),(0,r.kt)("p",null,"To define on which entities of the catalog the service must be applied you have to provide a json body like :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "entityId": "", // [Optional] Entity identifier to apply plugin service on one uniq entity\n    "entitiesId":[], // [Optional] Entities ids to apply plugin service on multiple entities\n    "entityType":"", // [Optional] One of [COLLECTION, DATA, DATASET, DOCUMENT] Combined with the search query \'q\' parameter. Entities type to apply plugin service on. \n    "q":"", // [Optional] Search query to apply on catalog to define\n    "dynamicParameters": { // [Optional]\n        // Specific plugin parameters applied at runtime\n    }\n}\n')),(0,r.kt)("p",null,"Each business service plugin return a stream of typed data in the response header. The implemention section of this page explains how to return typed results like ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"XML"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Image")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Octet-stream"),"."),(0,r.kt)("h2",{id:"usages"},"Usages"),(0,r.kt)("h3",{id:"apply-service-on-one-entity"},"Apply service on one entity"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "entityId": "URN:AIP:DATA:project1:44e4f46f-2584-3c8e-a803-d1fb1cfd276e:V1"\n}\n')),(0,r.kt)("h3",{id:"apply-service-on-one-multiple-entities"},"Apply service on one multiple entities"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "entitiesId": [\n        "URN:AIP:DATA:project1:44e4f46f-2584-3c8e-a803-d1fb1cfd276e:V1",\n        "URN:AIP:DATA:project1:44e4f46f-2584-3c8e-a803-d1fb1cfd276e:V2",\n        "URN:AIP:DATA:project1:44e4f46f-2584-3c8e-a803-d1fb1cfd276e:V3"\n    ]\n}\n')),(0,r.kt)("h3",{id:"apply-service-on-entities-from-a-search-query"},"Apply service on entities from a search query"),(0,r.kt)("p",null,"You can see the ",(0,r.kt)("a",{parentName:"p",href:"../search-api/"},"How to build a query")," page. The query is provided in the body like :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "entityType": "DATA",\n    "q": "title:\'test*\' AND date:[2019-01-01T00:00:00 TO 2019-02-01T00:00:00]",\n}\n')),(0,r.kt)("p",null,"For a search query application you can also execlude some entites from the search results by setting the entitiesId parameter :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "entityType": "DATA",\n    "entitiesId": [\n        "URN:AIP:DATA:project1:44e4f46f-2584-3c8e-a803-d1fb1cfd276e:V1",\n        "URN:AIP:DATA:project1:44e4f46f-2584-3c8e-a803-d1fb1cfd276e:V2",\n        "URN:AIP:DATA:project1:44e4f46f-2584-3c8e-a803-d1fb1cfd276e:V3"\n    ],\n    "q": "title:\'test*\' AND date:[2019-01-01T00:00:00 TO 2019-02-01T00:00:00]",\n}\n')),(0,r.kt)("p",null," REGARDS provides many implementation of this extension :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/RegardsOss/regards-catalog/blob/master/catalog-services/catalog-services-plugin/src/main/java/fr/cnes/regards/modules/catalog/services/plugins/MultiDownloadPlugin.java"},"MultiDownloadPlugin")," : Allow to download multiple selected entities in one zip archive."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/RegardsOss/regards-catalog/blob/master/catalog-services/catalog-services-plugin/src/main/java/fr/cnes/regards/modules/catalog/services/plugins/SampleServicePlugin.java"},"SampleServicePlugin")," : Example implementation")),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-catalog/catalog-services/catalog-services-domain/src/main/java/fr/cnes/regards/modules/catalog/services/domain/plugins/IService.java"},"IService")," : Base interface extended by the specific interfaces defined here under."),(0,r.kt)("p",{parentName:"li"},"To help developpers to make different service application you can also use the specific interfaces :")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-catalog/catalog-services/catalog-services-domain/src/main/java/fr/cnes/regards/modules/catalog/services/domain/plugins/IEntitiesServicePlugin.java"},"IEntitiesServicePlugin")," : To create a service applicable to multiple entities selection.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-catalog/catalog-services/catalog-services-domain/src/main/java/fr/cnes/regards/modules/catalog/services/domain/plugins/ISingleEntityServicePlugin.java"},"ISingleEntityServicePlugin")," : To create a service application only to a single entity selection"))),(0,r.kt)("h2",{id:"implementation"},"Implementation"),(0,r.kt)("p",null,"To learn more about how to create your own plugin see ",(0,r.kt)("a",{parentName:"p",href:"../../../framework/modules/plugins/"},"Plugins"),"."),(0,r.kt)("p",null,"You can implements two type of catalog services following the here under exemples :  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Plugin(description = "Single entity service plugin", id = SingleEntityServicePlugin.PLUGIN_ID, version = "1.0.0",\n        author = "CS-SI", contact = "regards@c-s.fr", licence = "GPLv3.0", owner = "CNES",\n        url = "https://github.com/RegardsOss")\n@CatalogServicePlugin(applicationModes = { ServiceScope.ONE }, entityTypes = { EntityType.DATA })\npublic class SingleEntityServicePlugin implements ISingleEntityServicePlugin {\n\n    public static final String PLUGIN_ID = "singleEntityPluginId";\n\n    @Autowired\n    private IServiceHelper serviceHelper;\n\n    @Autowired\n    private IAuthenticationResolver authResolver;\n\n    @Override\n    public ResponseEntity<StreamingResponseBody> applyOnEntity(String entityId, HttpServletResponse response) {\n        // Retrieve entity to apply service on\n        Page<DataObject> dos = serviceHelper.getDataObjects(Lists.newArrayList(entityId), 0, 1);\n        // ....\n        // TODO ....\n        return CatalogPluginResponseFactory.createSuccessResponse(response, CatalogPluginResponseType.JSON, result);\n    }\n\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Plugin(description = "Multiple entities service plugin", id = MultiEntitiesServicePlugin.PLUGIN_ID, version = "1.0.0",\n        author = "CS-SI", contact = "regards@c-s.fr", licence = "GPLv3.0", owner = "CNES",\n        url = "https://github.com/RegardsOss")\n@CatalogServicePlugin(applicationModes = { ServiceScope.MANY }, entityTypes = { EntityType.DATA })\npublic class MultiEntitiesServicePlugin extends AbstractCatalogServicePlugin implements IEntitiesServicePlugin {\n\n    public static final String PLUGIN_ID = "multiEntitiesPluginId";\n\n    @Autowired\n    private IServiceHelper serviceHelper;\n\n    @Autowired\n    private IAuthenticationResolver authResolver;\n\n    @Override\n    public ResponseEntity<StreamingResponseBody> applyOnEntities(List<String> entitiesId,\n            HttpServletResponse response) {\n        // Retrieve entities to apply service on\n        Page<DataObject> dos = serviceHelper.getDataObjects(Lists.newArrayList(entitiesId), 0, 100);\n        while (dos.hasNext()) {\n            Pageable nextPage = dos.nextPageable();\n            dos = serviceHelper.getDataObjects(Lists.newArrayList(entitiesId), nextPage.getPageNumber(),\n                                               nextPage.getPageSize());\n        }\n        // TODO ....\n        return CatalogPluginResponseFactory.createSuccessResponse(response, CatalogPluginResponseType.JSON, result);\n    }\n\n    @Override\n    public ResponseEntity<StreamingResponseBody> applyOnQuery(String pOpenSearchQuery, EntityType pEntityType,\n            HttpServletResponse response) {\n        // Retrieve entities to apply service on\n        Page<DataObject> dos;\n        try {\n            dos = serviceHelper.getDataObjects(pOpenSearchQuery, 0, 100);\n            while (dos.hasNext()) {\n                Pageable nextPage = dos.nextPageable();\n                dos = serviceHelper.getDataObjects(pOpenSearchQuery, nextPage.getPageNumber(), nextPage.getPageSize());\n            }\n        } catch (OpenSearchParseException e) {\n            return CatalogPluginResponseFactory.createSuccessResponse(response, CatalogPluginResponseType.JSON, "Error retrieving entities from catalog");\n        }\n        // TODO ....\n        return CatalogPluginResponseFactory.createSuccessResponse(response, CatalogPluginResponseType.JSON, result);\n    }\n\n}\n')),(0,r.kt)("p",null,"NOTE : "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"@CatalogServicePlugin : Annotation to define scope of service plugin."),(0,r.kt)("li",{parentName:"ul"},"AbstractCatalogServicePlugin : Allow to add the common plugin parameter to associate a service to all datasets of the catalog"),(0,r.kt)("li",{parentName:"ul"},"A tutorial on how to create a plugin is available ",(0,r.kt)("a",{target:"_blank",href:n(99557).Z},"here"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/RegardsOss/regards-catalog/blob/master/catalog-services/catalog-services-plugin/src/main/java/fr/cnes/regards/modules/catalog/services/plugins/SampleServicePlugin.java"},"SampleServicePlugin")," is an exemple of how to implements this extension point to create your own business logic.  "),(0,r.kt)("p",null,"In order to help you retrieving datas from the queried parameters the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/RegardsOss/regards-catalog/blob/master/catalog-services/catalogue-services-helper/src/main/java/fr/cnes/regards/modules/catalog/services/helper/ServiceHelper.java"},"ServiceHelper")," can be autowired on any of your plugin implementations."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Autowired\nprivate IServiceHelper serviceHelper;\n")),(0,r.kt)("p",null,"The exemple service :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extends ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/RegardsOss/regards-catalog/blob/master/catalog-services/catalog-services-plugin/src/main/java/fr/cnes/regards/modules/catalog/services/plugins/AbstractCatalogServicePlugin.java"},"AbstractCatalogServicePlugin")," to add a standard plugin parameter to allow access to the service on specified catalog datasets. The Administration HMI allows you to define access to catalog services for each dataset."),(0,r.kt)("li",{parentName:"ul"},"Implements the two interfaces ",(0,r.kt)("inlineCode",{parentName:"li"},"IEntitiesServicePlugin")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ISingleEntityServicePlugin")," to allow application with one or many entities."),(0,r.kt)("li",{parentName:"ul"},"Shows you how to specify the service return type (octet-stream, image, json or xml) through the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/RegardsOss/regards-catalog/blob/master/catalog-services/catalogue-services-helper/src/main/java/fr/cnes/regards/modules/catalog/services/helper/CatalogPluginResponseFactory.java"},"CatalogPluginResponseFactory")," class.")))}g.isMDXComponent=!0},99557:function(e,t,n){t.Z=n.p+"assets/files/regards-backend-tutorial-67ece5d5bea022c4ddc0721f69bd6016.odp"}}]);