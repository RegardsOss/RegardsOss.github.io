"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[37816],{46354:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(74848),r=t(28453);const s={title:"Configuration Importation/Exportation",sidebar_label:"Importation/Exportation",slug:"/development/backend/services/ingest/configuration/import-export",sidebar_position:1},a=void 0,o={id:"development/services/ingest/configuration/import-export",title:"Configuration Importation/Exportation",description:"Microservices settings regroup a set of settings that are specific by tenant",source:"@site/docs/development/services/ingest/configuration/import-export.md",sourceDirName:"development/services/ingest/configuration",slug:"/development/backend/services/ingest/configuration/import-export",permalink:"/docs/next/development/backend/services/ingest/configuration/import-export",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/ingest/configuration/import-export.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Configuration Importation/Exportation",sidebar_label:"Importation/Exportation",slug:"/development/backend/services/ingest/configuration/import-export",sidebar_position:1},sidebar:"dev",previous:{title:"Available plugins",permalink:"/docs/next/development/backend/services/ingest/plugins/listing"},next:{title:"Static configuration",permalink:"/docs/next/development/backend/services/ingest/configuration/static-configuration"}},d={},c=[{value:"Import/Export API",id:"importexport-api",level:2},{value:"Configurable parameters",id:"configurable-parameters",level:2},{value:"Ingest chains",id:"ingest-chains",level:3},{value:"Plugins configuration format",id:"plugins-configuration-format",level:3},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Microservices settings regroup a set of settings that are specific by ",(0,i.jsx)(n.a,{href:"/docs/next/development/concepts/multitenant/",children:"tenant"}),"\nand stored in the microservice database."]}),"\n",(0,i.jsx)(n.h2,{id:"importexport-api",children:"Import/Export API"}),"\n",(0,i.jsxs)(n.p,{children:["To configure ",(0,i.jsx)(n.code,{children:"rs-ingest"})," settings for a specific tenant, you need to follow the ",(0,i.jsx)(n.a,{href:"/docs/next/development/services/common/common-import-export-configuration",children:"generic Import/Export service\nconfiguration guide"}),", it will help you understand the expected JSON\nfile payload that you can send to the\n",(0,i.jsx)(n.a,{href:"/docs/next/development/backend/services/ingest/api-guides/rest/api-swagger#tag/module-manager-controller/operation/importConfiguration",children:"import configuration endpoint"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This configuration can also be imported or exported\nthrough ",(0,i.jsx)(n.a,{href:"/docs/next/user-guide/project-configuration/microservices/",children:"administrator UI"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["When you import a plugin configuration, dataset (",(0,i.jsx)(n.code,{children:"resetBeforeImport"})," to false) :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"update dynamic tenant settings"}),"\n",(0,i.jsxs)(n.li,{children:["if the ingest chain exists (",(0,i.jsx)(n.em,{children:"name"})," exists), it returns an error"]}),"\n",(0,i.jsxs)(n.li,{children:["if the ingest chain does not exist (",(0,i.jsx)(n.em,{children:"name"})," does not exist), it creates it"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["When you set ",(0,i.jsx)(n.code,{children:"resetBeforeImport"})," to true :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rs-ingest"})," resets only its dynamic tenant settings by applying the default values"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rs-ingest"})," does not remove any existing ingest chain (same behaviour with ",(0,i.jsx)(n.code,{children:"resetBeforeImport"})," to\nfalse with ingest chain)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configurable-parameters",children:"Configurable parameters"}),"\n",(0,i.jsxs)(n.p,{children:["Dynamic settings for ",(0,i.jsx)(n.code,{children:"rs-ingest"})," microservice are :"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"active_notifications"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsxs)(n.td,{children:["True                                                                             ",(0,i.jsx)("br",{})]}),(0,i.jsxs)(n.td,{children:["Enable or disable notifications sent to ",(0,i.jsx)(n.a,{href:"/docs/next/development/backend/services/notifier/overview/",children:"notifier microservice"})," after each action on a product CREATION, DELETION, .."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"sip_body_time_to_live"}),(0,i.jsx)(n.td,{children:"Integer"}),(0,i.jsx)(n.td,{children:"7"}),(0,i.jsx)(n.td,{children:"After this amount of days all SIP in database are cleared. This is done to lower the volume the database size."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dump_parameters"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'{<br/>"isActiveModule":true,<br/>"cronTrigger":"0 0 0 1-7 * SUN",<br/>"dumpLocation":""<br/>}"'})}),(0,i.jsx)(n.td,{children:"Dump parameters."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"last_dump_req_date"}),(0,i.jsx)(n.td,{children:"Date"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Date of the last dump of AIP done"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"ingest-chains",children:"Ingest chains"}),"\n",(0,i.jsx)(n.p,{children:"In the configuration file you can import/export ingest chains configuration. To do so you have to define all parameters\nof an ingest chain with all the associated plugins."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"name"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Unique label of the ingest chain"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"validationPlugin"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:"Selected validation plugin configuration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"preProcessingPlugin"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:"Selected pre processing plugin configuration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"generationPlugin"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:"Selected product name generation plugin configuration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"aipStorageMetadataPlugin"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:"Selected aip storage metadata plugin configuration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tagPlugin"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:"Selected AIP tag  plugin configuration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"postProcessingPlugin"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:"Selected post processing plugin configuration"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"plugins-configuration-format",children:"Plugins configuration format"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"pluginId"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Plugin unique identifier. Used to identify which plugin to use"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"businessId"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Plugin configuration unique identifier"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"label"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Plugin configuration label."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"version"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Plugin configuration compatible version"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"priorityOrder"}),(0,i.jsx)(n.td,{children:"Integer"}),(0,i.jsx)(n.td,{children:"plugin configuration priority."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"active"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"Enable or disable plugin configuration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"parameters"}),(0,i.jsx)(n.td,{children:"Object"}),(0,i.jsx)(n.td,{children:"Json format of the plugin configuration parameters (specific for each plugin)"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"title='rs-ingest configuration file example'",children:'{\n  "microservice": "rs-ingest",\n  "modules": [\n    {\n      "module": {\n        "id": "ingest",\n        "name": "SIP management module",\n        "description": "SIP submission and management",\n        "version": "1.6.0",\n        "author": "REGARDS",\n        "legalOwner": "CNES",\n        "documentation": "https://github.com/RegardsOss"\n      },\n      "resetBeforeImport": false,\n      "configuration": [\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "active_notifications",\n            "description": "Activate notifications on AIP request",\n            "value": "\\"true\\"",\n            "defaultValue": "false",\n            "className": "java.lang.Boolean",\n            "containsSensitiveParameters": false\n          }\n        },\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "last_dump_req_date",\n            "description": "Date of last dump request",\n            "value": "\\"2024-08-04T00:00:00.026113Z\\"",\n            "defaultValue": "\\"1970-01-01T00:00:00Z\\"",\n            "className": "java.time.OffsetDateTime",\n            "containsSensitiveParameters": false\n          }\n        },\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "sip_body_time_to_live",\n            "description": "Life time of a SIP, in days. SIP will be automatically removed at the term.",\n            "value": "7",\n            "defaultValue": "7",\n            "className": "java.lang.Integer",\n            "containsSensitiveParameters": false\n          }\n        },\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "dump_parameters",\n            "description": "Dump parameters",\n            "value": "{\\"isActiveModule\\":true,\\"cronTrigger\\":\\"0 0 0 1-7 * SUN\\",\\"dumpLocation\\":\\"\\"}",\n            "defaultValue": "{\\"isActiveModule\\":true,\\"cronTrigger\\":\\"0 0 0 1-7 * SUN\\",\\"dumpLocation\\":\\"\\"}",\n            "className": "fr.cnes.regards.framework.modules.dump.domain.DumpParameters",\n            "containsSensitiveParameters": false\n          }\n        },\n        {\n          "key": "fr.cnes.regards.modules.ingest.domain.chain.IngestProcessingChain",\n          "value": {\n            "name": "DefaultProcessingChain",\n            "validationPlugin": {\n              "pluginId": "DefaultSipValidation",\n              "label": "DefaultSIPValidation",\n              "businessId": "c7f13ec9-5349-4339-960c-143278a3e8ff",\n              "version": "1.0.0",\n              "priorityOrder": 0,\n              "active": true,\n              "parameters": []\n            },\n            "generationPlugin": {\n              "pluginId": "DefaultSingleAIPGeneration",\n              "label": "DefaultAIPGeneration",\n              "businessId": "9c115403-9f70-44b9-abc3-d4630a4a8a9d",\n              "version": "1.0.0",\n              "priorityOrder": 0,\n              "active": true,\n              "parameters": []\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);