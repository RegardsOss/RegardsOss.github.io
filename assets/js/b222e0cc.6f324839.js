"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[22010],{43605:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var s=i(74848),a=i(28453);const l={title:"Plugin setup",slug:"/setup/swarm/advanced/plugin-setup",sidebar_position:2.5},r=void 0,t={id:"setup/swarm/advanced/swarm-plugin",title:"Plugin setup",description:"This guide allows you to deploy a REGARDS backend plugin thanks to your inventory.",source:"@site/versioned_docs/version-2.0.0/setup/swarm/advanced/swarm-plugin.md",sourceDirName:"setup/swarm/advanced",slug:"/setup/swarm/advanced/plugin-setup",permalink:"/docs/setup/swarm/advanced/plugin-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-2.0.0/setup/swarm/advanced/swarm-plugin.md",tags:[],version:"2.0.0",sidebarPosition:2.5,frontMatter:{title:"Plugin setup",slug:"/setup/swarm/advanced/plugin-setup",sidebar_position:2.5},sidebar:"install",previous:{title:"Deploy required microservices",permalink:"/docs/setup/swarm/advanced/microservice-setup"},next:{title:"Worker setup",permalink:"/docs/setup/swarm/advanced/worker-setup"}},o={},d=[{value:"Inventory configuration",id:"inventory-configuration",level:3},{value:"Activate a plugin",id:"activate-a-plugin",level:3},{value:"Remove all plugins",id:"remove-all-plugins",level:3},{value:"Install or update all plugins",id:"install-or-update-all-plugins",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This guide allows you to deploy a REGARDS backend plugin thanks to your inventory."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["When a REGARDS microservice boots, it scans on the disk for plugins (jar files) to make them available on the service.",(0,s.jsx)(n.br,{}),"\n","You need to configure the plugin to make it usable."]})}),"\n",(0,s.jsx)(n.h3,{id:"inventory-configuration",children:"Inventory configuration"}),"\n",(0,s.jsxs)(n.p,{children:["To deploy a plugin, you need to add the image name and tag inside ",(0,s.jsx)(n.code,{children:"group_docker_plugins"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Plugins\ngroup_docker_plugins:\n  - image: <a plugin image name>\n    tag: <a plugin image tag>\n  - image: <another plugin image name>\n    tag: <another pluginimage tag>\n  - ...\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you want to add ",(0,s.jsxs)(n.a,{href:"/docs/development/services/dam/plugins/overview",children:["the ",(0,s.jsx)(n.code,{children:"aip-datasource"})," plugin"]})," to allow the\nmicroservice DataManagement to crawl OAIS products, you need to add the image plugin in the ",(0,s.jsx)(n.code,{children:"group_docker_plugins"}),"\nproperty, like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'# Plugins\ngroup_docker_plugins:\n  - image: rs-aip-datasource-plugin\n    tag: "{{ group_docker_tags.plugins }}"\n'})}),"\n",(0,s.jsxs)(n.admonition,{title:"Plugin list",type:"info",children:[(0,s.jsxs)(n.p,{children:["The documentation of every microservice list all available OSS plugins and their image name.",(0,s.jsx)(n.br,{}),"\n","Here is some examples:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/development/services/dam/plugins/overview",children:"rs-dam or DataManagement plugins"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/development/backend/services/notifier/plugins/listing",children:"rs-notifier plugins"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/development/backend/services/ingest/plugins/listing",children:"rs-ingest plugins"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/development/services/catalog/plugins/listing",children:"rs-catalog plugins"})}),"\n",(0,s.jsx)(n.li,{children:"..."}),"\n"]})]}),"\n",(0,s.jsx)(n.h3,{id:"activate-a-plugin",children:"Activate a plugin"}),"\n",(0,s.jsx)(n.p,{children:"To activate a plugin, you need to run the playbook:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# cd regards-docker/\nansible-playbook -i inventories/<inventory name> regards.yml <additional parameters>\n"})}),"\n",(0,s.jsx)(n.p,{children:"This task will copy the plugin on the disk."}),"\n",(0,s.jsx)(n.p,{children:"If your service did not reboot after the deployment, you need to reboot the service:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# go to cli folder, then run the folowing command:\n./status.sh\n# if the service did not reboot, run the folowing command:\n./reboot.sh <name of the service>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"remove-all-plugins",children:"Remove all plugins"}),"\n",(0,s.jsx)(n.p,{children:"To remove all plugins, first shutdown REGARDS. Then you need to run the playbook:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# cd regards-docker/\nansible-playbook -i inventories/<inventory name> regards-delete-plugins.yml <additional parameters>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"install-or-update-all-plugins",children:"Install or update all plugins"}),"\n",(0,s.jsx)(n.p,{children:"There is a direct Ansible task that copy all plugins:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# cd regards-docker/\nansible-playbook -i inventories/<inventory name> regards-plugins.yml <additional parameters>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>t});var s=i(96540);const a={},l=s.createContext(a);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);