"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[49780],{37169:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=i(74848),t=i(28453);const r={id:"backend-ingest-generation-plugins",title:"AIP generation plugins",sidebar_label:"AIP generation",slug:"/development/backend/services/ingest/plugins/aip-generation/"},a=void 0,o={id:"development/backend/regards/ingest/plugins/backend-ingest-generation-plugins",title:"AIP generation plugins",description:"Overview",source:"@site/versioned_docs/version-1.14/development/backend/regards/ingest/plugins/aip-generation-plugins.md",sourceDirName:"development/backend/regards/ingest/plugins",slug:"/development/backend/services/ingest/plugins/aip-generation/",permalink:"/docs/1.14/development/backend/services/ingest/plugins/aip-generation/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.14/development/backend/regards/ingest/plugins/aip-generation-plugins.md",tags:[],version:"1.14",frontMatter:{id:"backend-ingest-generation-plugins",title:"AIP generation plugins",sidebar_label:"AIP generation",slug:"/development/backend/services/ingest/plugins/aip-generation/"},sidebar:"dev",previous:{title:"SIP validation",permalink:"/docs/1.14/development/backend/services/ingest/plugins/sip-validation/"},next:{title:"AIP tagging",permalink:"/docs/1.14/development/backend/services/ingest/plugins/aip-tagging/"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Interface",id:"interface",level:2},{value:"Implementation",id:"implementation",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This extension point allows to generate one or many ",(0,s.jsx)(n.code,{children:"AIP"}),"(s) for one submitted ",(0,s.jsx)(n.code,{children:"SIP"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"REGARDS provides many implementation of this extension point :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-service/src/main/java/fr/cnes/regards/modules/ingest/service/chain/plugin/DefaultSingleAIPGeneration.java",children:"DefaultSingleAIPGeneration"})," : Build AIP with all informations from SIP"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-plugins/blob/master/ingest-plugins/enhanced-descriptive-aip-generation/src/main/java/fr/cnes/regards/modules/ingest/plugins/StringEnhancedDescriptiveAipGeneration.java",children:"StringEnhancedDescriptiveAipGeneration"})," : Allows to add two given String to generated AIPs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-plugins/blob/master/ingest-plugins/enhanced-descriptive-aip-generation/src/main/java/fr/cnes/regards/modules/ingest/plugins/DoubleEnhancedDescriptiveAipGeneration.java",children:"DoubleEnhancedDescriptiveAipGeneration"})," : Allows to add a random Double to generated AIPs"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/domain/plugin/IAipGeneration.java",children:"IAipGeneration"})}),"\n",(0,s.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsxs)(n.p,{children:["To learn more about how to create your own plugin see ",(0,s.jsx)(n.a,{href:"/docs/1.14/development/backend/framework/modules/plugins/",children:"Plugins"})]}),"\n",(0,s.jsx)(n.p,{children:"Here under is an exemple of how to implements this extension point to create your own business logic."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Plugin(id = "exemple", version = "1.0.0", description = "exemple plugin",\n        author = "REGARDS Team", contact = "regards@c-s.fr", licence = "LGPLv3.0", owner = "CSSI",\n        url = "https://github.com/RegardsOss")\npublic class Plugin implements IAipGeneration {\n\n    @Override\n    public List<AIP> generate(SIP sip, UniformResourceName aipId, UniformResourceName sipId, String providerId) {\n    }\n}\n'})})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(96540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);