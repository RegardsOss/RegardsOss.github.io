"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[22340],{77019:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=i(74848),s=i(28453);const t={id:"backend-dataprovider-sip-generation-plugin",title:"Acquisition chain - SIP generation plugins",sidebar_label:"SIP Generation",slug:"/development/backend/services/dataprovider/plugins/sip-generation/"},a=void 0,o={id:"development/backend/regards/dataprovider/plugins/backend-dataprovider-sip-generation-plugin",title:"Acquisition chain - SIP generation plugins",description:"Overview",source:"@site/versioned_docs/version-1.13.0/development/backend/regards/dataprovider/plugins/sip-generation-plugins.md",sourceDirName:"development/backend/regards/dataprovider/plugins",slug:"/development/backend/services/dataprovider/plugins/sip-generation/",permalink:"/docs/1.13.0/development/backend/services/dataprovider/plugins/sip-generation/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.13.0/development/backend/regards/dataprovider/plugins/sip-generation-plugins.md",tags:[],version:"1.13.0",frontMatter:{id:"backend-dataprovider-sip-generation-plugin",title:"Acquisition chain - SIP generation plugins",sidebar_label:"SIP Generation",slug:"/development/backend/services/dataprovider/plugins/sip-generation/"},sidebar:"dev",previous:{title:"Scan",permalink:"/docs/1.13.0/development/backend/services/dataprovider/plugins/scan/"},next:{title:"Validation",permalink:"/docs/1.13.0/development/backend/services/dataprovider/plugins/validation/"}},d={},c=[{value:"Overview",id:"overview",level:2},{value:"Interface",id:"interface",level:2},{value:"Implementation",id:"implementation",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This extension point allows to define how to construct a ",(0,r.jsx)(n.code,{children:"SIP"})," for a given ",(0,r.jsx)(n.code,{children:"Product"}),". Products are composed of files by the ",(0,r.jsx)(n.code,{children:"Product plugin"})," of the acquisition chain. This plugin is the one that fill the mata data of each SIP to ingest."]})}),"\n",(0,r.jsx)(n.p,{children:"REGARDS provides many implementation of this extension point :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-dataprovider/acquisition/acquisition-service/src/main/java/fr/cnes/regards/modules/acquisition/service/plugins/DefaultSIPGeneration.java",children:"DefaultSIPGeneration"})," : Only add files information in SIP (no specific descriptive information)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-dataprovider/acquisition/acquisition-service/src/main/java/fr/cnes/regards/modules/acquisition/service/plugins/GeoJsonSIPGeneration.java",children:"GeoJsonSIPGeneration"})," : Read each product file to extract GeoJson features and generate SIP according to geometry and label information."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-dataprovider/acquisition/acquisition-domain/src/main/java/fr/cnes/regards/modules/acquisition/plugins/ISipGenerationPlugin.java",children:"ISipGenerationPlugin"})}),"\n",(0,r.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsxs)(n.p,{children:["To learn more about how to create your own plugin see ",(0,r.jsx)(n.a,{href:"/docs/1.13.0/development/backend/framework/modules/plugins/",children:"Plugins"})]}),"\n",(0,r.jsx)(n.p,{children:"Here under is an exemple of how to implements this extension point to create your own business logic."}),"\n",(0,r.jsxs)(n.p,{children:["To learn more about SIP format (from OAIS stantard) see ",(0,r.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-backend/blob/master/rs-ingest/ingest/ingest-domain/src/main/java/fr/cnes/regards/modules/ingest/dto/sip/SIPBuilder.java",children:"OAIS SIP Builder"})," class. The framework module ",(0,r.jsx)(n.a,{href:"/docs/1.13.0/development/backend/framework/starters/oais/",children:"OAIS Starter"})," explains the information package described by the OAIS recommandation of the CCSDS."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Plugin(id = "exemple", version = "1.0.0", description = "exemple plugin",\n        author = "REGARDS Team", contact = "regards@c-s.fr", licence = "LGPLv3.0", owner = "CSSI",\n        url = "https://github.com/RegardsOss")\npublic class Plugin implements ISipGenerationPlugin {\n\n        @Override\n    public SIP generate(Product product) throws ModuleException {\n            // return SIP with all meta data in it.\n    }\n   \n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(96540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);