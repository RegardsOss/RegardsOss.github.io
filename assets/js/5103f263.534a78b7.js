"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[35137],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),g=r,f=u["".concat(l,".").concat(g)]||u[g]||d[g]||o;return t?i.createElement(f,a(a({ref:n},c),{},{components:t})):i.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},4032:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var i=t(87462),r=(t(67294),t(3905));const o={id:"backend-notifier-plugins-intro",title:"Notifier plugins overview",sidebar_label:"Overview",slug:"/development/backend/services/notifier/plugins/intro"},a=void 0,s={unversionedId:"development/backend/regards/notifier/plugins/backend-notifier-plugins-intro",id:"version-1.15/development/backend/regards/notifier/plugins/backend-notifier-plugins-intro",title:"Notifier plugins overview",description:"This section introduces you how to configure Notifier to send messages depending on the product content.",source:"@site/versioned_docs/version-1.15/development/backend/regards/notifier/plugins/notifier-intro-plugins.md",sourceDirName:"development/backend/regards/notifier/plugins",slug:"/development/backend/services/notifier/plugins/intro",permalink:"/docs/development/backend/services/notifier/plugins/intro",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.15/development/backend/regards/notifier/plugins/notifier-intro-plugins.md",tags:[],version:"1.15",frontMatter:{id:"backend-notifier-plugins-intro",title:"Notifier plugins overview",sidebar_label:"Overview",slug:"/development/backend/services/notifier/plugins/intro"},sidebar:"dev",previous:{title:"REST API",permalink:"/docs/development/backend/services/notifier/guides/rest/api"},next:{title:"Recipient sender plugins",permalink:"/docs/development/backend/services/notifier/plugins/recipient-sender"}},l={},p=[{value:"Recipient sender plugins",id:"recipient-sender-plugins",level:2},{value:"Recipients / Rules association",id:"recipients--rules-association",level:2},{value:"Rule matcher plugins",id:"rule-matcher-plugins",level:2},{value:"Apply configuration",id:"apply-configuration",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This section introduces you how to configure Notifier to send messages depending on the product content."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#recipient-sender-plugins"},"Recipient sender plugins")," generates the payload to send and send it"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#recipients--rules-association"},"Recipients / Rules association")," allows to link a matcher rule to a Recipient sender"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#rule-matcher-plugins"},"Rule matcher plugins")," permits or not to diffuse a product based on its product content and\nmetadata")),(0,r.kt)("h2",{id:"recipient-sender-plugins"},"Recipient sender plugins"),(0,r.kt)("p",null,"Sender plugins are used to define:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Notification content (aka the payload)"),(0,r.kt)("li",{parentName:"ul"},"Recipients to notify"),(0,r.kt)("li",{parentName:"ul"},"Can be directly notified")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/development/backend/services/notifier/plugins/recipient-sender"},"Check Recipient sender plugins guide")," to see available implementation and their\nconfiguration of this kind of plugins."),(0,r.kt)("h2",{id:"recipients--rules-association"},"Recipients / Rules association"),(0,r.kt)("p",null,"In order to have a functional notification system, you can :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Associate your Recipient sender plugins to your Rule matcher plugins.",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("strong",{parentName:"li"},"and/or")),(0,r.kt)("li",{parentName:"ul"},"allow direct notification from your recipient plugin configuration")),(0,r.kt)("p",null,"To associate your Recipient plugin to a Rule matcher plugin, you need to write an association for each of your Rule\nmatcher plugin:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "key": "fr.cnes.regards.modules.notifier.dto.conf.RuleRecipientsAssociation",\n  "value": {\n    "ruleId": "{businessId of rule plugin configuration}",\n    "recipientIds": [\n      "{businessId of recipient plugin configuration}"\n    ]\n  }\n}\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"You can associate one rule matcher plugin to many recipient sender plugins.")),(0,r.kt)("h2",{id:"rule-matcher-plugins"},"Rule matcher plugins"),(0,r.kt)("p",null,"Rules matcher plugins are used to define if a product should be sent according to product content and metadata."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/development/backend/services/notifier/plugins/rule-matcher"},"Check Rule matcher plugins guide")," to see available implementation and\nconfiguration of this kind of plugins."),(0,r.kt)("admonition",{title:"What's next?",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If the rule matcher plugin accepts the product to notification, it will send it to each ",(0,r.kt)("strong",{parentName:"p"},"Recipient sender plugin"),"\nassociated to the current rule matcher plugin, following ",(0,r.kt)("a",{parentName:"p",href:"#recipients--rules-association"},"the association ",(0,r.kt)("strong",{parentName:"a"}," Recipients / Rules")),".")),(0,r.kt)("admonition",{title:"Number of association",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Rule matcher plugins can be associated to ",(0,r.kt)("inlineCode",{parentName:"p"},"0 to N")," Recipient sender plugins")),(0,r.kt)("admonition",{title:"Notify without checking rule matcher",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"A recipient sender plugins can be configured to accept direct notifications. By doing so, the message won't be\ntested against Rule matcher plugins.")),(0,r.kt)("h2",{id:"apply-configuration"},"Apply configuration"),(0,r.kt)("p",null,"To import your plugin configurations to Notifier, you need ",(0,r.kt)("a",{parentName:"p",href:"/docs/development/backend/notifier/guides/rest/import-plugin-configuration"},"import module configuration REST API")))}d.isMDXComponent=!0}}]);