"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[45078],{16607:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=r(74848),s=r(28453);const o={id:"backend-framework-starters-amqp-monitoring",title:"AMQP monitoring starter",slug:"/development/backend/framework/starters/amqp-monitoring/"},a="1. Configuration",i={id:"development/framework/starters/backend-framework-starters-amqp-monitoring",title:"AMQP monitoring starter",description:"Add starter dependency to your POM (version depends on the REGARDS BOM)",source:"@site/docs/development/framework/starters/amqp-monitoring-starter.md",sourceDirName:"development/framework/starters",slug:"/development/backend/framework/starters/amqp-monitoring/",permalink:"/docs/next/development/backend/framework/starters/amqp-monitoring/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/framework/starters/amqp-monitoring-starter.md",tags:[],version:"current",frontMatter:{id:"backend-framework-starters-amqp-monitoring",title:"AMQP monitoring starter",slug:"/development/backend/framework/starters/amqp-monitoring/"},sidebar:"dev",previous:{title:"Introduction",permalink:"/docs/next/development/backend/framework/starters/"},next:{title:"AMQP starter",permalink:"/docs/next/development/backend/framework/starters/amqp/"}},d={},l=[{value:"4.1. How to publish <strong>LogEvent</strong> to the <strong>Metrics</strong> module",id:"41-how-to-publish-logevent-to-the-metrics-module",level:2},{value:"4.2. How to log events to SYSLOG",id:"42-how-to-log-events-to-syslog",level:2},{value:"4.3. How to log security events to SYSLOG",id:"43-how-to-log-security-events-to-syslog",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"1-configuration",children:"1. Configuration"})}),"\n",(0,t.jsx)(n.p,{children:"Add starter dependency to your POM (version depends on the REGARDS BOM)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n  <groupId>fr.cnes.regards.framework</groupId>\n  <artifactId>amqp-monitoring-regards-starter</artifactId>\n</dependency>\n"})}),"\n",(0,t.jsx)(n.h1,{id:"2-autoconfiguration",children:"2. Autoconfiguration"}),"\n",(0,t.jsx)(n.p,{children:"Starter autoconfigures:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"regardsAmqpAppender"})," is a logback appender. It is responsible to publish some ",(0,t.jsx)(n.strong,{children:"LogEvent"})," to a publisher for the current tenant."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IMonitoringLogEvent"})," is used subcribe to ",(0,t.jsx)(n.strong,{children:"LogEvent"})," form all known tenants."]}),"\n"]}),"\n",(0,t.jsxs)(n.h1,{id:"3-the-metrics-module",children:["3. The ",(0,t.jsx)(n.strong,{children:"Metrics"})," module"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Metrics"})," module define a subscriber to subscribe to the ",(0,t.jsx)(n.strong,{children:"LogEvent"})," publish for all the tenants. And for each tenant, each ",(0,t.jsx)(n.strong,{children:"LogEvent"})," are persisted to the tenant's database. The ",(0,t.jsx)(n.code,{children:"LogEventHandler"})," implements ",(0,t.jsx)(n.code,{children:"ILogEventHandler"})," and define a method ",(0,t.jsx)(n.code,{children:"handle"}),"."]}),"\n",(0,t.jsx)(n.h1,{id:"4-how-to",children:"4. How to"}),"\n",(0,t.jsxs)(n.h2,{id:"41-how-to-publish-logevent-to-the-metrics-module",children:["4.1. How to publish ",(0,t.jsx)(n.strong,{children:"LogEvent"})," to the ",(0,t.jsx)(n.strong,{children:"Metrics"})," module"]}),"\n",(0,t.jsxs)(n.p,{children:["To publish ",(0,t.jsx)(n.strong,{children:"LogEvent"})," to the ",(0,t.jsx)(n.strong,{children:"Metrics"})," module, it is necessary to add the logback appender ",(0,t.jsx)(n.strong,{children:"regardsAmqpAppender"})," to the logback.xml file. This is done in logback.xml file from each microservice's bootstrap."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<appender name="regardsAmqpAppender"\n  class="ch.qos.logback.ext.spring.DelegatingLogbackAppender">\n  <filter\n    class="fr.cnes.regards.framework.logbackappender.RegardsAmqpAppenderFilter">\n    <level>INFO</level>\n  </filter>\n</appender>\n\n<logger name="fr.cnes.regards" level="INFO" additivity="true">\n  <appender-ref ref="regardsAmqpAppender" />\n</logger>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"RegardsAmqpAppenderFilter"})," defined a list of package for which each log should be publish to the ",(0,t.jsx)(n.strong,{children:"Metrics"})," module."]}),"\n",(0,t.jsx)(n.h2,{id:"42-how-to-log-events-to-syslog",children:"4.2. How to log events to SYSLOG"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<include resource="fr/cnes/regards/framework/logbackappender/defaults.xml" />\n\n<appender name="SYSLOG" class="ch.qos.logback.classic.net.SyslogAppender">\n  <syslogHost>localhost</syslogHost>\n  <facility>LOCAL0</facility>\n  <suffixPattern>${SYSLOG_PATTERN}</suffixPattern>\n  <port>514</port>\n</appender>\n\n<root level="info">\n  <appender-ref ref="SYSLOG" />\n</root>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The pattern ",(0,t.jsx)(n.strong,{children:"SYSLOG_PATTERN"})," is defined in ",(0,t.jsx)(n.code,{children:"fr/cnes/regards/framework/logbackappender/defaults.xml"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"43-how-to-log-security-events-to-syslog",children:"4.3. How to log security events to SYSLOG"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<include resource="fr/cnes/regards/framework/logbackappender/defaults.xml" />\n\n<appender name="SYSLOG-SECU" class="ch.qos.logback.classic.net.SyslogAppender">\n  <syslogHost>localhost</syslogHost>\n  <facility>LOCAL1</facility>\n  <suffixPattern>${SYSLOG_SECURITY_PATTERN}</suffixPattern>\n  <port>514</port>\n</appender>\n\n\x3c!-- Log the user request authentication --\x3e\n<logger name="fr.cnes.regards.framework.authentication" level="INFO">\n  <appender-ref ref="SYSLOG-SECU" />\n</logger>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The pattern ",(0,t.jsx)(n.strong,{children:"SYSLOG_SECURITY_PATTERN"})," is defined in ",(0,t.jsx)(n.code,{children:"fr/cnes/regards/framework/logbackappender/defaults.xml"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(96540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);