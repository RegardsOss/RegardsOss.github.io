"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[48730],{17497:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var o=t(74848),i=t(28453);const r={id:"frontend-packages-lazy-modules-order-cart",title:"Frontend - Dynamic module Order Cart",sidebar_label:"Order cart",slug:"/development/frontend/packages/lazy-modules/order-cart/"},s=void 0,d={id:"development/frontend/modules/frontend-packages-lazy-modules-order-cart",title:"Frontend - Dynamic module Order Cart",description:"Description",source:"@site/docs/development/frontend/modules/order-cart.md",sourceDirName:"development/frontend/modules",slug:"/development/frontend/packages/lazy-modules/order-cart/",permalink:"/docs/development/frontend/packages/lazy-modules/order-cart/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/frontend/modules/order-cart.md",tags:[],version:"current",frontMatter:{id:"frontend-packages-lazy-modules-order-cart",title:"Frontend - Dynamic module Order Cart",sidebar_label:"Order cart",slug:"/development/frontend/packages/lazy-modules/order-cart/"},sidebar:"dev",previous:{title:"Menu",permalink:"/docs/development/frontend/packages/lazy-modules/menu/"},next:{title:"Order history",permalink:"/docs/development/frontend/packages/lazy-modules/order-history/"}},a={},l=[{value:"Description",id:"description",level:2},{value:"Module structure",id:"module-structure",level:2},{value:"Route",id:"route",level:2},{value:"Exposed functions",id:"exposed-functions",level:2},{value:"Internationalization",id:"internationalization",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"This module is a dynamic configurable module to be used in REGARDS user interfaces. It displays, for logged user, the current order cart content. Please note that his module must be instanciated once, in a dynamic container, to enable the order cart functionnality in interface menus and search results. However, instantiating it more than once instance is useless - only the first instance found will be used - and may be risky, depending on the global interface configuration."}),"\n",(0,o.jsx)(n.h2,{id:"module-structure",children:"Module structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:" .\n \u251c\u2500\u2500 src\n |   \u251c\u2500\u2500\n |   \u251c\u2500\u2500 clients         : Define all backend clients needed to request/send information\n |   \u251c\u2500\u2500 components      : React component to display panels\n |   \u251c\u2500\u2500 containers      : React-Redux logic to handle module functions\n |   \u251c\u2500\u2500 i18n            : Messages and labels internationalization\n |   \u251c\u2500\u2500 styles          : Panels styles (inline css objects)\n |   \u251c\u2500\u2500 main.js         : Module exported index\n |   \u251c\u2500\u2500 reducer.js      : Redux reducers\n |   \u2514\u2500\u2500 router.js       : React-router configuration\n \u251c\u2500\u2500 tests\n \u251c\u2500\u2500 default-icon.svg    : Default module icon as svg, mandatory\n \u251c\u2500\u2500 package.json        : Npm module description file\n \u2514\u2500\u2500 README.md\n"})}),"\n",(0,o.jsx)(n.h2,{id:"route",children:"Route"}),"\n",(0,o.jsxs)(n.p,{children:["This module is routed by the main application in which it is configured as a static or dynamic module.\nStatic modules are always displayed in the interface layout.\nDynamic modules are only displayed when the interface route is /modules/",":module_id"," where module_id is the configuration identifier of the module."]}),"\n",(0,o.jsx)(n.h2,{id:"exposed-functions",children:"Exposed functions"}),"\n",(0,o.jsx)(n.p,{children:"This module as a dynamic configurable module exposes its own:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"moduleContainer : Main module React component used to display this module,"}),"\n",(0,o.jsx)(n.li,{children:"adminContainer : Main module React component used to display the administration panel of this module,"}),"\n",(0,o.jsx)(n.li,{children:"reducer : To configure the general Redux Store."}),"\n",(0,o.jsx)(n.li,{children:"styles : Styles of the module"}),"\n",(0,o.jsx)(n.li,{children:"messages : Messages and labels internationalization object (default : imported index.js from messages/)"}),"\n",(0,o.jsx)(n.li,{children:"dependencies : The needed resources (backend enpoints) to display each part of the module"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"internationalization",children:"Internationalization"}),"\n",(0,o.jsx)(n.p,{children:"All displayed labels are defined in two languages (English and French) and are avaible from the i18n repository."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var o=t(96540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);