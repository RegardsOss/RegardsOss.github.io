"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[87221],{9125:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var i=r(74848),o=r(28453);const t={id:"frontend-view-forms",title:"Redux form",sidebar_label:"Forms",slug:"/development/frontend/view/forms/"},l=void 0,d={id:"development/frontend/components/frontend-view-forms",title:"Redux form",description:"Description",source:"@site/docs/development/frontend/components/redux-forms.md",sourceDirName:"development/frontend/components",slug:"/development/frontend/view/forms/",permalink:"/docs/development/frontend/view/forms/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/frontend/components/redux-forms.md",tags:[],version:"current",frontMatter:{id:"frontend-view-forms",title:"Redux form",sidebar_label:"Forms",slug:"/development/frontend/view/forms/"},sidebar:"dev",previous:{title:"Theme",permalink:"/docs/development/frontend/view/theme/"},next:{title:"Re-usable components",permalink:"/docs/development/frontend/packages/components/"}},s={},a=[{value:"Description",id:"description",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"Simple example",id:"simple-example",level:3},{value:"REGARDS form-utils",id:"regards-form-utils",level:3},{value:"More",id:"more",level:3}];function m(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The REGARDS frontend uses the ",(0,i.jsx)(n.a,{href:"https://redux-form.com/6.8.0/",children:"redux-form"})," library to create forms.\nThis library stores in the common ",(0,i.jsx)(n.code,{children:"redux store"})," all informations about the current state of the form."]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,i.jsx)(n.h3,{id:"simple-example",children:"Simple example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"\nimport { reduxForm } from 'redux-form'\nimport { RenderTextField, Field, ErrorTypes, ValidationHelpers } from '@regardsoss/form-utils'\n\nexport class ExampleComponent extends React.Component {\n\n  componentDidMount() {\n    const initialValues = {\n      // initialize the form field named 'label'\n      label: 'default label',\n    }\n    this.props.initialize(initialValues)\n  }\n\n  handleSubmit(formValues) {\n    ...\n  }\n\n  render() {\n    return (\n      { /* \n       Form with onSubmitMethod: onSubmit is first delegated to redux handleSubmit method that calls this.handleSubmit after execution. That mechanism allows Redux forms to compute mulitple state variable (pristine, invalid, submitting...)\n       */ }\n      <form onSubmit={this.props.handleSubmit(this.handleSubmit)}> \n        <Field\n          name=\"label\" // field name\n          component={RenderTextField} // field render component\n          type=\"text\" // field type\n          label=\"Label\" // field label to display at user\n          validate={ValidationHelpers.validRequiredString} // validator: computes if the field value is valid\n          fullWidth // field consumes parent full width, quite standard in REGARDS frontend\n        />\n      </form>\n    )\n  }\n}\n\n/* export the field as connected: reduxForm method will decorate ExampleComponent to add many properties like:\n * pristine: has the form changed?\n * submitting: is the form currently submitting?\n * invalid: is there an invalid field in form?\n * handleSubmit: submit method wrapper\n * ...\n */ \nexport default reduxForm({\n  form: 'example-form' // form name in redux store\n})(ExampleComponent)\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"regards-form-utils",children:"REGARDS form-utils"}),"\n",(0,i.jsxs)(n.p,{children:["In the upper example you can see that each ",(0,i.jsx)(n.code,{children:"Field"})," component use a ",(0,i.jsx)(n.code,{children:"component"})," parameter to define the field render. The REGARDS\nlibrary  ",(0,i.jsx)(n.code,{children:"@regardsoss/form-utils"})," provides the following render components types :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"RenderArrayObjectField : Render a field to configure an array of objects"}),"\n",(0,i.jsx)(n.li,{children:"RenderArrayTextField : Render a field to configure an array of strings"}),"\n",(0,i.jsx)(n.li,{children:"RenderAutoCompleteField: Render a field to configure a single value with auto completion"}),"\n",(0,i.jsx)(n.li,{children:"RenderCheckbox: Render a boolean checkbox field"}),"\n",(0,i.jsx)(n.li,{children:"RenderDateTimeField: Render a date time field"}),"\n",(0,i.jsx)(n.li,{children:"RenderDoubleLabelToggle: Render a boolean toggle field with double labels field"}),"\n",(0,i.jsx)(n.li,{children:"RenderFileFieldWithMui : Render a field to upload a file from the local user system"}),"\n",(0,i.jsx)(n.li,{children:"RenderJsonCodeEditorField : Render a  field to configure a complex json object within a JSON editor"}),"\n",(0,i.jsx)(n.li,{children:"RenderMapField : Render a field to configure a Map of objects"}),"\n",(0,i.jsx)(n.li,{children:"RenderPageableAutoCompleteField : Render a field to configure a single value with auto completion by fetching pageable server endpoint"}),"\n",(0,i.jsx)(n.li,{children:"RenderRadio: Render a choice field as radio"}),"\n",(0,i.jsx)(n.li,{children:"RenderSelectField: Render a choice field as list input"}),"\n",(0,i.jsx)(n.li,{children:"RenderTextField: Render a string field as input"}),"\n",(0,i.jsx)(n.li,{children:"RenderToggle: Render a boolean field as simple label toggle"}),"\n",(0,i.jsx)(n.li,{children:"RenderFieldArray: Render an array of field"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Those components can be imported from ",(0,i.jsx)(n.code,{children:"@regardsoss/form-utils"}),", like shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { RenderTextField, RenderToggle, RenderDoubleLabelToggle } from `@regardsoss/form-utils`\n"})}),"\n",(0,i.jsx)(n.h3,{id:"more",children:"More"}),"\n",(0,i.jsxs)(n.p,{children:["To understand more about using ",(0,i.jsx)(n.a,{href:"https://redux-form.com/6.8.0/",children:"redux-form"})," library see the ",(0,i.jsx)(n.a,{href:"https://redux-form.com/6.8.0/docs/api/",children:"API"})," official documentation"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>d});var i=r(96540);const o={},t=i.createContext(o);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);