"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[56364],{95788:(e,n,r)=>{r.d(n,{Iu:()=>m,yg:()=>c});var t=r(11504);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=t.createContext({}),s=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},m=function(e){var n=s(e.components);return t.createElement(d.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,c=p["".concat(d,".").concat(f)]||p[f]||u[f]||i;return r?t.createElement(c,l(l({ref:n},m),{},{components:r})):t.createElement(c,l({ref:n},m))}));function c(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=f;var a={};for(var d in n)hasOwnProperty.call(n,d)&&(a[d]=n[d]);a.originalType=e,a[p]="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},31244:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var t=r(45072),o=(r(11504),r(95788));const i={id:"frontend-view-forms",title:"Redux form",sidebar_label:"Forms",slug:"/development/frontend/view/forms/"},l=void 0,a={unversionedId:"development/frontend/components/frontend-view-forms",id:"version-1.12.0/development/frontend/components/frontend-view-forms",title:"Redux form",description:"Description",source:"@site/versioned_docs/version-1.12.0/development/frontend/components/redux-forms.md",sourceDirName:"development/frontend/components",slug:"/development/frontend/view/forms/",permalink:"/docs/1.12.0/development/frontend/view/forms/",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.12.0/development/frontend/components/redux-forms.md",tags:[],version:"1.12.0",frontMatter:{id:"frontend-view-forms",title:"Redux form",sidebar_label:"Forms",slug:"/development/frontend/view/forms/"},sidebar:"dev",previous:{title:"Theme",permalink:"/docs/1.12.0/development/frontend/view/theme/"},next:{title:"Re-usable components",permalink:"/docs/1.12.0/development/frontend/packages/components/"}},d={},s=[{value:"Description",id:"description",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"Simple example",id:"simple-example",level:3},{value:"REGARDS form-utils",id:"regards-form-utils",level:3},{value:"More",id:"more",level:3}],m={toc:s},p="wrapper";function u(e){let{components:n,...r}=e;return(0,o.yg)(p,(0,t.c)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"description"},"Description"),(0,o.yg)("p",null,"The REGARDS frontend uses the ",(0,o.yg)("a",{parentName:"p",href:"https://redux-form.com/6.8.0/"},"redux-form")," library to create forms.\nThis library stores in the common ",(0,o.yg)("inlineCode",{parentName:"p"},"redux store")," all informations about the current state of the form."),(0,o.yg)("h2",{id:"how-to-use"},"How to use"),(0,o.yg)("h3",{id:"simple-example"},"Simple example"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"\nimport { reduxForm } from 'redux-form'\nimport { RenderTextField, Field, ErrorTypes, ValidationHelpers } from '@regardsoss/form-utils'\n\nexport class ExampleComponent extends React.Component {\n\n  componentDidMount() {\n    const initialValues = {\n      // initialize the form field named 'label'\n      label: 'default label',\n    }\n    this.props.initialize(initialValues)\n  }\n\n  handleSubmit(formValues) {\n    ...\n  }\n\n  render() {\n    return (\n      { /* \n       Form with onSubmitMethod: onSubmit is first delegated to redux handleSubmit method that calls this.handleSubmit after execution. That mechanism allows Redux forms to compute mulitple state variable (pristine, invalid, submitting...)\n       */ }\n      <form onSubmit={this.props.handleSubmit(this.handleSubmit)}> \n        <Field\n          name=\"label\" // field name\n          component={RenderTextField} // field render component\n          type=\"text\" // field type\n          label=\"Label\" // field label to display at user\n          validate={ValidationHelpers.validRequiredString} // validator: computes if the field value is valid\n          fullWidth // field consumes parent full width, quite standard in REGARDS frontend\n        />\n      </form>\n    )\n  }\n}\n\n/* export the field as connected: reduxForm method will decorate ExampleComponent to add many properties like:\n * pristine: has the form changed?\n * submitting: is the form currently submitting?\n * invalid: is there an invalid field in form?\n * handleSubmit: submit method wrapper\n * ...\n */ \nexport default reduxForm({\n  form: 'example-form' // form name in redux store\n})(ExampleComponent)\n\n")),(0,o.yg)("h3",{id:"regards-form-utils"},"REGARDS form-utils"),(0,o.yg)("p",null,"In the upper example you can see that each ",(0,o.yg)("inlineCode",{parentName:"p"},"Field")," component use a ",(0,o.yg)("inlineCode",{parentName:"p"},"component")," parameter to define the field render. The REGARDS\nlibrary  ",(0,o.yg)("inlineCode",{parentName:"p"},"@regardsoss/form-utils")," provides the following render components types :"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"RenderArrayObjectField : Render a field to configure an array of objects"),(0,o.yg)("li",{parentName:"ul"},"RenderArrayTextField : Render a field to configure an array of strings"),(0,o.yg)("li",{parentName:"ul"},"RenderAutoCompleteField: Render a field to configure a single value with auto completion"),(0,o.yg)("li",{parentName:"ul"},"RenderCheckbox: Render a boolean checkbox field"),(0,o.yg)("li",{parentName:"ul"},"RenderDateTimeField: Render a date time field"),(0,o.yg)("li",{parentName:"ul"},"RenderDoubleLabelToggle: Render a boolean toggle field with double labels field"),(0,o.yg)("li",{parentName:"ul"},"RenderFileFieldWithMui : Render a field to upload a file from the local user system"),(0,o.yg)("li",{parentName:"ul"},"RenderJsonCodeEditorField : Render a  field to configure a complex json object within a JSON editor"),(0,o.yg)("li",{parentName:"ul"},"RenderMapField : Render a field to configure a Map of objects"),(0,o.yg)("li",{parentName:"ul"},"RenderPageableAutoCompleteField : Render a field to configure a single value with auto completion by fetching pageable server endpoint"),(0,o.yg)("li",{parentName:"ul"},"RenderRadio: Render a choice field as radio"),(0,o.yg)("li",{parentName:"ul"},"RenderSelectField: Render a choice field as list input"),(0,o.yg)("li",{parentName:"ul"},"RenderSlider: Render a number field as slider"),(0,o.yg)("li",{parentName:"ul"},"RenderTextField: Render a string field as input"),(0,o.yg)("li",{parentName:"ul"},"RenderToggle: Render a boolean field as simple label toggle")),(0,o.yg)("p",null,"Those components can be imported from ",(0,o.yg)("inlineCode",{parentName:"p"},"@regardsoss/form-utils"),", like shown below: "),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { RenderTextField, RenderToggle, RenderDoubleLabelToggle } from `@regardsoss/form-utils`\n")),(0,o.yg)("h3",{id:"more"},"More"),(0,o.yg)("p",null,"To understand more about using ",(0,o.yg)("a",{parentName:"p",href:"https://redux-form.com/6.8.0/"},"redux-form")," library see the ",(0,o.yg)("a",{parentName:"p",href:"https://redux-form.com/6.8.0/docs/api/"},"API")," official documentation"))}u.isMDXComponent=!0}}]);