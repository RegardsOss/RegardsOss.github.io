"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[79831],{3905:(e,r,a)=>{a.d(r,{Zo:()=>u,kt:()=>p});var t=a(67294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function s(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?s(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function l(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=t.createContext({}),i=function(e){var r=t.useContext(d),a=r;return e&&(a="function"==typeof e?e(r):o(o({},r),e)),a},u=function(e){var r=i(e.components);return t.createElement(d.Provider,{value:r},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},c=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,s=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=i(a),c=n,p=m["".concat(d,".").concat(c)]||m[c]||g[c]||s;return a?t.createElement(p,o(o({ref:r},u),{},{components:a})):t.createElement(p,o({ref:r},u))}));function p(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=c;var l={};for(var d in r)hasOwnProperty.call(r,d)&&(l[d]=r[d]);l.originalType=e,l[m]="string"==typeof e?e:n,o[1]=l;for(var i=2;i<s;i++)o[i]=a[i];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},59871:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>i});var t=a(87462),n=(a(67294),a(3905));const s={id:"1.14-to-1.15",title:"V1.14 to V1.15",slug:"/setup/swarm/migration/1.14-to-1.15",sidebar_position:5},o=void 0,l={unversionedId:"setup/swarm/migration/1.14-to-1.15",id:"setup/swarm/migration/1.14-to-1.15",title:"V1.14 to V1.15",description:"Steps to migrate REGARDS from version 1.14 to 1.15",source:"@site/docs/setup/swarm/migration/1.14-to-1.15.md",sourceDirName:"setup/swarm/migration",slug:"/setup/swarm/migration/1.14-to-1.15",permalink:"/docs/next/setup/swarm/migration/1.14-to-1.15",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/setup/swarm/migration/1.14-to-1.15.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"1.14-to-1.15",title:"V1.14 to V1.15",slug:"/setup/swarm/migration/1.14-to-1.15",sidebar_position:5},sidebar:"install",previous:{title:"V1.13 to V1.14",permalink:"/docs/next/setup/swarm/migration/1.13-to-1.14"},next:{title:"V1.15 to V1.16",permalink:"/docs/next/setup/swarm/migration/1.15-to-1.16"}},d={},i=[{value:"Migrating from 1.15.1 to 1.15.2",id:"migrating-from-1151-to-1152",level:2}],u={toc:i},m="wrapper";function g(e){let{components:r,...a}=e;return(0,n.kt)(m,(0,t.Z)({},u,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Steps to migrate REGARDS from version 1.14 to 1.15"),(0,n.kt)("admonition",{title:"Please read until the end",type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"There is some steps remaining at the end of this guide related to RabbitMQ")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Download last playbook version and move your inventory inside the new playbook"),(0,n.kt)("li",{parentName:"ul"},"Edit your inventory file ",(0,n.kt)("inlineCode",{parentName:"li"},"group_vars/all/main.yml")," :")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"# Replace \nversion: 1.14.9\n# Into \nversion: 1.15.2\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"When this guide has been written, last version was 1.15.2. Check if there is an updated version\navailable ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/orgs/RegardsOss/packages/container/package/rs-authentication"},"here"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Remove deprecated property ",(0,n.kt)("inlineCode",{parentName:"li"},"docker_dns")," inside your inventory file ",(0,n.kt)("inlineCode",{parentName:"li"},"group_vars/docker_nodes/main.yml"),":")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"#docker_dns:\n#  - 8.8.8.8\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Inside your inventory file ",(0,n.kt)("inlineCode",{parentName:"p"},"group_vars/regards_nodes/main.yml"),", remove deprecated properties:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"all references to ",(0,n.kt)("inlineCode",{parentName:"li"},"enable_resource_limits")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"enable_resource_limits")),(0,n.kt)("li",{parentName:"ul"},"property ",(0,n.kt)("inlineCode",{parentName:"li"},"group_docker_use_log_concentrator")),(0,n.kt)("li",{parentName:"ul"},"property ",(0,n.kt)("inlineCode",{parentName:"li"},"group_docker_mservices.front.securised")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"If you declare a some memory limit override inside your inventory file ",(0,n.kt)("inlineCode",{parentName:"p"},"group_vars/regards_nodes/main.yml"),", you need\nto write ",(0,n.kt)("inlineCode",{parentName:"p"},"2560m")," instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"2560mb")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"2g")," instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"2gb")," (remove ",(0,n.kt)("inlineCode",{parentName:"p"},"b"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Inside your inventory file ",(0,n.kt)("inlineCode",{parentName:"p"},"group_vars/regards_nodes/main.yml"),", add ",(0,n.kt)("inlineCode",{parentName:"p"},"group_docker_static_files_migrated")," property:"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"[ ... ]\ngroup_docker_registry: ghcr.io/regardsoss\n\n# Files needs to be moved from ./files/ to ../../static/\n# using $ mv ./files ../../static\ngroup_docker_static_files_migrated: False\n\ngroup_docker_tags:\n  [ ... ]\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Static files will be migrated with REGARDS V1.16 release.")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Shutdown REGARDS using the playbook")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook -i [...] regards-shutdown.yml [...]\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Disconnect swarm nodes")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook -i [...] delete-swarm.yml [...]\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Reinstall swarm nodes")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook -i [...] setup-vm.yml [...]\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"You must do the ",(0,n.kt)("inlineCode",{parentName:"p"},"setup-vm.yml")," step whether you use the logging stack or not")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Update REGARDS using the playbook")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook -i [...] regards.yml [...]\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Wait the stack to be up and running")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd /path/to/regards/cli\n./status.sh\n# Check every containers is up and running\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Now, connect to your RabbitMQ node or one of its replicate")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# Enter inside one of the RabbitMQ container\n./exec.sh rs-rabbitmq bash\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Activate two flags required to migrate from RabbitMQ 3.8 to RabbitMQ 3.11 later, with REGARDS V1.16 release:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rabbitmqctl enable_feature_flag maintenance_mode_status\nrabbitmqctl enable_feature_flag user_limits\n")),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"RabbitMQ 3.11 requires these feature flags to be enabled before the upgrade.\nThe upgrade of REGARDS V1.16 will fail if you miss this step.")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Create a migration script using ",(0,n.kt)("inlineCode",{parentName:"li"},"vi /var/lib/rabbitmq/mnesia/migration-to-1.15.sh")," with following content:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash -e\nADMIN_USER=guest\nADMIN_PASSWORD=guest\n\n# Param 1 : Shovel ID\n# Param 2 : Source queue\n# Param 2 : Dest queue\nfunction add_shovel\n{\n  local shovelId=${1}\n  local srcQueue=${2}\n  local destQueue=${3}\n\n  printf >&2 "[\\033[32mSHOVEL\\033[m]\\tAdd shovel to move ${srcQueue} to ${destQueue}\\n"\n  rabbitmqctl --quiet set_parameter shovel migrate-${shovelId} \\\n  "{\\"src-protocol\\": \\"amqp091\\", \\"src-uri\\": \\"amqp:///regards.multitenant.manager\\", \\"src-queue\\": \\"${srcQueue}\\", \\"dest-protocol\\": \\"amqp091\\", \\"dest-uri\\": \\"amqp:///regards.multitenant.manager\\", \\"dest-queue\\": \\"${destQueue}\\"}"\n}\n\n# Param 1 : Shovel ID\nfunction delete_shovel\n{\n  local shovelId=${1}\n\n  printf >&2 "[\\033[32mSHOVEL\\033[m]\\tRemove shovel ${shovelId}\\n"\n  rabbitmqctl --quiet clear_parameter shovel migrate-${shovelId}\n}\n\n\n# Param 1 : Queue Name to delete\n# Ensure queue is empty\nfunction delete_empty_queue\n{\n  local queueName=${1}\n\n  printf >&2 "[\\033[32mQUEUES\\033[m]\\tRemove queue ${queueName}\\n"\n  rabbitmqctl --quiet delete_queue --vhost=regards.multitenant.manager ${queueName} --if-unused --if-empty || printf >&2 "[\\033[34mQUEUES\\033[m]\\tQueue ${queueName} not existing, ignoring error...\\n"\n}\n\n\n# Param 1 : Queue Name to delete\n# Do not check if queue is empty\nfunction delete_queue\n{\n  local queueName=${1}\n\n  printf >&2 "[\\033[32mQUEUES\\033[m]\\tRemove queue ${queueName}\\n"\n  rabbitmqctl --quiet delete_queue --vhost=regards.multitenant.manager ${queueName} --if-unused || printf >&2 "[\\033[34mQUEUES\\033[m]\\tQueue ${queueName} not existing, ignoring error...\\n"\n}\n\n# Param 1 : Exchange Name to delete\nfunction delete_exchange\n{\n  local exchangeName=${1}\n\n  printf >&2 "[\\033[32mEXCHANGES\\033[m]\\tRemove exchange ${exchangeName}\\n"\n  rabbitmqadmin --username=$ADMIN_USER --password=$ADMIN_PASSWORD -V regards.multitenant.manager delete exchange name="${exchangeName}" || printf >&2 "[\\033[34mEXCHANGES\\033[m]\\tExchange ${exchangeName} not existing, ignoring error...\\n"\n}\n\n\n\nadd_shovel 01 \\\n  regards.broadcast.rs-dam.fr.cnes.regards.modules.storage.client.FileRequestGroupEventHandler \\\n  regards.broadcast.rs-dam.fr.cnes.regards.modules.filecatalog.client.handler.FileRequestGroupEventHandler\n\nadd_shovel 02 \\\n  regards.broadcast.rs-ingest.fr.cnes.regards.modules.storage.client.FileRequestGroupEventHandler \\\n  regards.broadcast.rs-ingest.fr.cnes.regards.modules.filecatalog.client.handler.FileRequestGroupEventHandler\n\nadd_shovel 03 \\\n  regards.broadcast.rs-fem.fr.cnes.regards.modules.storage.client.FileRequestGroupEventHandler \\\n  regards.broadcast.rs-fem.fr.cnes.regards.modules.filecatalog.client.handler.FileRequestGroupEventHandler\n\nadd_shovel 04 \\\n  regards.broadcast.rs-order.fr.cnes.regards.modules.storage.client.FileReferenceEventHandler \\\n  regards.broadcast.rs-order.fr.cnes.regards.modules.filecatalog.client.handler.FileReferenceEventHandler\n\nadd_shovel 05 \\\n  regards.broadcast.rs-order.fr.cnes.regards.modules.storage.client.FileReferenceUpdateEventHandler \\\n  regards.broadcast.rs-order.fr.cnes.regards.modules.filecatalog.client.handler.FileReferenceUpdateEventHandler\n\nadd_shovel 06 \\\n  regards.broadcast.fr.cnes.regards.modules.workermanager.dto.events.in.RequestEvent \\\n  regards.broadcast.rs-worker-manager.fr.cnes.regards.modules.workermanager.service.flow.RequestHandler\n\nadd_shovel 07 \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.AvailabilityFlowItemHandler \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.handler.FileRestorationRequestEventHandler\n\nadd_shovel 08 \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.CancelRequestGroupsEventHandler \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.handler.CancelRequestGroupsEventHandler\n\nadd_shovel 09 \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.CopyFlowHandler \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.handler.FilesCopyEventHandler\n\nadd_shovel 10 \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.DeletionFlowHandler \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.handler.FilesDeletionEventHandler\n\nadd_shovel 11 \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.ReferenceFlowItemHandler \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.handler.FilesReferenceEventHandler\n\nadd_shovel 12 \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.RetryFlowItemHandler \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.handler.FilesRetryRequestEventHandler\n\nadd_shovel 13 \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.StorageFlowItemHandler \\\n  regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.handler.FilesStorageRequestEventHandler\n\nprintf >&2 "[\\033[32mSHOVEL\\033[m]\\tWait 30s to ensure messages have been moved\\n"\nsleep 30\n\ndelete_shovel 01\ndelete_shovel 02\ndelete_shovel 03\ndelete_shovel 04\ndelete_shovel 05\ndelete_shovel 06\ndelete_shovel 07\ndelete_shovel 08\ndelete_shovel 09\ndelete_shovel 10\ndelete_shovel 11\ndelete_shovel 12\ndelete_shovel 13\n\ndelete_empty_queue regards.broadcast.rs-dam.fr.cnes.regards.modules.storage.client.FileRequestGroupEventHandler\ndelete_empty_queue regards.broadcast.rs-ingest.fr.cnes.regards.modules.storage.client.FileRequestGroupEventHandler\ndelete_empty_queue regards.broadcast.rs-fem.fr.cnes.regards.modules.storage.client.FileRequestGroupEventHandler\ndelete_empty_queue regards.broadcast.rs-order.fr.cnes.regards.modules.storage.client.FileReferenceEventHandler\ndelete_empty_queue regards.broadcast.rs-order.fr.cnes.regards.modules.storage.client.FileReferenceUpdateEventHandler\ndelete_empty_queue regards.broadcast.fr.cnes.regards.modules.workermanager.dto.events.in.RequestEvent\ndelete_empty_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.AvailabilityFlowItemHandler\ndelete_empty_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.CancelRequestGroupsEventHandler\ndelete_empty_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.CopyFlowHandler\ndelete_empty_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.DeletionFlowHandler\ndelete_empty_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.ReferenceFlowItemHandler\ndelete_empty_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.RetryFlowItemHandler\ndelete_empty_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.StorageFlowItemHandler\n\ndelete_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.ReferenceFlowItemHandler.DLQ\ndelete_queue regards.broadcast.rs-storage.fr.cnes.regards.modules.storage.service.file.flow.StorageFlowItemHandler.DLQ\ndelete_queue regards.broadcast.rs-catalog.fr.cnes.regards.modules.catalog.stac.service.collection.IdMappingUpdateHandler\ndelete_queue regards.unicast.swot.rs-dam.fr.cnes.regards.modules.dam.domain.entities.event.DatasetEvent\ndelete_queue regards.unicast.swot.rs-dam.fr.cnes.regards.modules.dam.domain.entities.event.NotDatasetEntityEvent\n\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.flow.RetryFlowItem\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.flow.AvailabilityFlowItem\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.flow.CopyFlowItem\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.flow.DeletionFlowItem\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.flow.ReferenceFlowItem\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.flow.RetryFlowItem\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.flow.StorageFlowItem\n\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.event.CancelRequestEvent\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.event.FileReferenceEvent\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.event.FileReferenceUpdateEvent\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.event.FileRequestsGroupEvent\ndelete_exchange regards.broadcast.fr.cnes.regards.modules.storage.domain.event.QuotaUpdateEvent\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Edit ",(0,n.kt)("inlineCode",{parentName:"li"},"ADMIN_USER")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"ADMIN_PASSWORD")," variables if you disabled the ",(0,n.kt)("inlineCode",{parentName:"li"},"guest")," default admin user"),(0,n.kt)("li",{parentName:"ul"},"Execute the script:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x /var/lib/rabbitmq/mnesia/migration-to-1.15.sh\n/var/lib/rabbitmq/mnesia/migration-to-1.15.sh\nrm -f /var/lib/rabbitmq/mnesia/migration-to-1.15.sh\n")),(0,n.kt)("h2",{id:"migrating-from-1151-to-1152"},"Migrating from 1.15.1 to 1.15.2"),(0,n.kt)("p",null,"If you have installed the 1.15.1 version and want to upgrade to 1.15.X, some microservices ",(0,n.kt)("strong",{parentName:"p"},"won't boot with flyway\nissues"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You need to add the following property inside your inventory file ",(0,n.kt)("inlineCode",{parentName:"li"},"group_vars/regards_nodes/main.yml"),":")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"group_config_mservices:\n  flyway:\n    out_of_order: true\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Update REGARDS using the playbook")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook -i [...] regards.yml [...]\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Ensure REGARDS is running fine (using ",(0,n.kt)("inlineCode",{parentName:"p"},"status.sh"),")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Remove the added property ",(0,n.kt)("inlineCode",{parentName:"p"},"flyway.out_of_order")," and update REGARDS again."))))}g.isMDXComponent=!0}}]);