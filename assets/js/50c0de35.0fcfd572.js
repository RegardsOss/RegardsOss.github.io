"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[38276],{89964:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var r=i(74848),o=i(28453);const n={id:"backend-dataprovider-static-configuration",title:"Dataprovider static configuration",sidebar_label:"Static configuration",slug:"/development/backend/services/dataprovider/configuration/static-configuration"},a=void 0,s={id:"development/services/dataprovider/configuration/backend-dataprovider-static-configuration",title:"Dataprovider static configuration",description:"Static configuration is the microservice configuration set before microservice startup in a property file (rs-dataprovider.properties handled by rs-config microservice, see more details here)",source:"@site/docs/development/services/dataprovider/configuration/dataprovider-static-configuration.md",sourceDirName:"development/services/dataprovider/configuration",slug:"/development/backend/services/dataprovider/configuration/static-configuration",permalink:"/docs/development/backend/services/dataprovider/configuration/static-configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/dataprovider/configuration/dataprovider-static-configuration.md",tags:[],version:"current",frontMatter:{id:"backend-dataprovider-static-configuration",title:"Dataprovider static configuration",sidebar_label:"Static configuration",slug:"/development/backend/services/dataprovider/configuration/static-configuration"},sidebar:"dev",previous:{title:"Import/Export",permalink:"/docs/development/backend/services/dataprovider/configuration/import-export"},next:{title:"Overview",permalink:"/docs/development/backend/services/delivery/overview/"}},c={},d=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Static configuration is the microservice configuration set before microservice startup in a property file (rs-dataprovider.properties handled by rs-config microservice, see ",(0,r.jsx)(t.a,{href:"/docs/user-guide/concept/configuration-overview/",children:"more details here"}),")\nThis configuration is common to all tenants."]}),"\n",(0,r.jsxs)(t.p,{children:["Static configuration for ",(0,r.jsx)(t.code,{children:"Dataprovider"})," service contains the following properties :"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default Value"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"regards.acquisition.product.bulk.deletion.limit"}),(0,r.jsx)(t.td,{children:"integer"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"100"})}),(0,r.jsx)(t.td,{children:"Max deletions treated at once."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"regards.acquisition.batch.size"}),(0,r.jsx)(t.td,{children:"integer"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"100"})}),(0,r.jsx)(t.td,{children:"Service will manage at most x entities at a time in order to take care of the memory consumption and potential tenant starvation"})]})]})]}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsxs)(t.p,{children:["Some of these properties are customizable in ansible inventory. ",(0,r.jsx)(t.a,{href:"http://localhost:3000/docs/next/setup/swarm/advanced/optimizations#dataprovider-optimization",children:"see installation guide"})]}),(0,r.jsx)(t.p,{children:"To make missing properties customizable, you have to update regards ansible playbook : the regards-mconfig role."})]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>s});var r=i(96540);const o={},n=r.createContext(o);function a(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);