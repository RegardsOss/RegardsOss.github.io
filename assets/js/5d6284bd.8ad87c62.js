"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[67714],{71270:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=n(74848),r=n(28453);const o={id:"concepts-requests-jobs",title:"Requests and Jobs processing",sidebar_label:"Requests & Jobs",slug:"/development/concepts/requests-jobs/"},i=void 0,c={id:"development/concepts/concepts-requests-jobs",title:"Requests and Jobs processing",description:"Parallelization of every process in a key architectural concept for REGARDS.",source:"@site/versioned_docs/version-2.0.0/development/concepts/10-requests-jobs.md",sourceDirName:"development/concepts",slug:"/development/concepts/requests-jobs/",permalink:"/docs/development/concepts/requests-jobs/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-2.0.0/development/concepts/10-requests-jobs.md",tags:[],version:"2.0.0",sidebarPosition:10,frontMatter:{id:"concepts-requests-jobs",title:"Requests and Jobs processing",sidebar_label:"Requests & Jobs",slug:"/development/concepts/requests-jobs/"},sidebar:"dev",previous:{title:"Workers",permalink:"/docs/development/concepts/workers/"},next:{title:"Overview",permalink:"/docs/development/services/overview/"}},a={},d=[];function l(e){const s={a:"a",admonition:"admonition",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Parallelization of every process in a key architectural concept for REGARDS."}),"\n",(0,t.jsxs)(s.p,{children:["To do so, REGARDS use ",(0,t.jsx)(s.strong,{children:"Requests"})," and ",(0,t.jsx)(s.strong,{children:"Jobs"})," notions :"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Request"})," : Is the process request information received by a service."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Job"})," : Is the work done by the service in a separate Thread for a batch of requests."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Regards Jobs system is configurable on each REGARDS microservice by setting :"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Jobs pool size"}),". If you want each instance of one microservice type to be able to process more Jobs in parallel."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Requests batch size"}),". If you want to configure the number of requests handled by a single job."]}),"\n"]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"You can raise these parameters in relation with server resources and database pool connection size."})}),"\n",(0,t.jsxs)(s.p,{children:["To make the fullest use of the ",(0,t.jsx)(s.strong,{children:"Jobs system"}),", each process request received by a Regards microservice is handled with\nthe same algorithm:"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:n(44232).A+"",width:"1265",height:"863"})}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["Process request is received by a microservice (",(0,t.jsx)(s.a,{href:"/docs/development/concepts/amqp-api/",children:"AMQP API"})," or ",(0,t.jsx)(s.a,{href:"/docs/development/concepts/rest-api/",children:"REST API"}),")."]}),"\n",(0,t.jsx)(s.li,{children:"Request format and consistency is validated."}),"\n",(0,t.jsxs)(s.li,{children:["Valid requests are saved in microservice database with a ",(0,t.jsx)(s.strong,{children:"Granted state"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["A planned task or ",(0,t.jsx)(s.strong,{children:"Scheduler"})," check for requests in ",(0,t.jsx)(s.strong,{children:"Granted state"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["The scheduler create one or many ",(0,t.jsx)(s.strong,{children:"Jobs"})," with associated requests, save ",(0,t.jsx)(s.strong,{children:"Jobs"})," in database and update requests\nwith ",(0,t.jsx)(s.strong,{children:"Scheduled"})," state. The ",(0,t.jsx)(s.strong,{children:"number of requests per jobs"})," is a configurable parameter in most of the\nmicroservices."]}),"\n",(0,t.jsxs)(s.li,{children:["Job is executed by the ",(0,t.jsx)(s.strong,{children:"Job Service"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Requests are updated to ",(0,t.jsx)(s.strong,{children:"Success"})," or ",(0,t.jsx)(s.strong,{children:"Error"})," status."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["To learn more about ",(0,t.jsx)(s.strong,{children:"Job system"})," and its usage in Regards Microservice,\nsee ",(0,t.jsx)(s.a,{href:"/docs/development/backend/framework/modules/jobs/",children:"Module Jobs"})]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},44232:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/requests_to_job_workflow-848d7203bb7eb9c6b24225f7e7204ec4.png"},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(96540);const r={},o=t.createContext(r);function i(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);