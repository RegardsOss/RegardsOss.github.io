"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[86660],{69599:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=t(74848),i=t(28453);const r={id:"backend-storage-security-delegation-plugins",title:"Security delegation plugins",sidebar_label:"Security delegation",slug:"/development/backend/services/storage/plugins/security-delegation/"},a=void 0,o={id:"development/backend/regards/storage/plugins/backend-storage-security-delegation-plugins",title:"Security delegation plugins",description:"Overview",source:"@site/versioned_docs/version-1.13.0/development/backend/regards/storage/plugins/security-delegation-plugins.md",sourceDirName:"development/backend/regards/storage/plugins",slug:"/development/backend/services/storage/plugins/security-delegation/",permalink:"/docs/1.13.0/development/backend/services/storage/plugins/security-delegation/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.13.0/development/backend/regards/storage/plugins/security-delegation-plugins.md",tags:[],version:"1.13.0",frontMatter:{id:"backend-storage-security-delegation-plugins",title:"Security delegation plugins",sidebar_label:"Security delegation",slug:"/development/backend/services/storage/plugins/security-delegation/"},sidebar:"dev",previous:{title:"Data storage",permalink:"/docs/1.13.0/development/backend/services/storage/plugins/data-storage/"},next:{title:"Bus message events",permalink:"/docs/1.13.0/development/backend/services/storage/events/"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Interface",id:"interface",level:2},{value:"Implementation",id:"implementation",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This extension point allows to define if a user has access to a given AIP and its files. By default the security is delegated to the catalog microservice with the CatalogSecurityDelegation plugin"})}),"\n",(0,s.jsx)(n.p,{children:"REGARDS provides many implementation of this extension point :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-plugins/blob/master/storage-plugins/catalog-security-delegation/src/main/java/fr/cnes/regards/modules/storage/plugins/security/CatalogSecurityDelegation.java",children:"CatalogSecurityDelegation"})," : Delegate access rights to catalog microservice"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-storage/blob/master/storage/storage-plugin/src/main/java/fr/cnes/regards/modules/storage/plugin/security/NoCatalogSecurityDelegationPlugin.java",children:"NoCatalogSecurityDelegationPlugin"})," : Allow access to all stored AIPs without any security check to all users."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/RegardsOss/regards-storage/blob/master/storage/storage-domain/src/main/java/fr/cnes/regards/modules/storage/domain/plugin/ISecurityDelegation.java",children:"ISecurityDelegation"})}),"\n",(0,s.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsxs)(n.p,{children:["To learn more about how to create your own plugin see ",(0,s.jsx)(n.a,{href:"/docs/1.13.0/development/backend/framework/modules/plugins/",children:"Plugins"})]}),"\n",(0,s.jsx)(n.p,{children:"Here under is an exemple of how to implements this extension point to create your own business logic."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Plugin(id = "exemple", version = "1.0.0", description = "exemple plugin",\n        author = "REGARDS Team", contact = "regards@c-s.fr", licence = "LGPLv3.0", owner = "CSSI",\n        url = "https://github.com/RegardsOss")\npublic class Plugin implements ISecurityDelegation {\n\n    /**\n     * Return URNs of which access is granted from given ones\n     */\n    @Override\n    public Set<UniformResourceName> hasAccess(Collection<UniformResourceName> urns){\n\n    }\n\n    /**\n     * Allow to know if the current user has access to a given AIP, through its ipId\n     * @param ipId identifier of aip that we are wondeering if we have access to.\n     * @return weither we have access to the aip or not\n     */\n    @Override\n    public boolean hasAccess(String ipId) {\n\n    }\n\n    /**\n     * @return weither the current user has access to features returning collections of AIP\n     */\n    @Override\n    public boolean hasAccessToListFeature() {\n\n    }\n   \n}\n'})})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);