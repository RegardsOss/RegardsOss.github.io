"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[5782],{19250:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var n=s(74848),o=s(28453);const i={title:"Overview",sidebar_label:"Overview",slug:"/development/services/worker-manager/overview",sidebar_position:1},t=void 0,a={id:"development/services/worker-manager/overview",title:"Overview",description:"The Worker Manager (or rs-worker-manager) microservice has been designed to manage light treatments, scalable,",source:"@site/docs/development/services/worker-manager/overview.md",sourceDirName:"development/services/worker-manager",slug:"/development/services/worker-manager/overview",permalink:"/docs/development/services/worker-manager/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/worker-manager/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overview",sidebar_label:"Overview",slug:"/development/services/worker-manager/overview",sidebar_position:1},sidebar:"dev",previous:{title:"Static configuration",permalink:"/docs/development/services/storage/configuration/static-configuration"},next:{title:"How it works",permalink:"/docs/development/services/worker-manager/conception/"}},c={},d=[{value:"How to use",id:"how-to-use",level:2},{value:"How to configure",id:"how-to-configure",level:2},{value:"How to access source code",id:"how-to-access-source-code",level:2}];function l(e){const r={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"Worker Manager"})," (or ",(0,n.jsx)(r.code,{children:"rs-worker-manager"}),") microservice has been designed to manage light treatments, scalable,\nhot-deployable and specific\nfor missions.\nTreatments are realized by standalone applications named ",(0,n.jsx)(r.a,{href:"/docs/development/concepts/workers/",children:"worker"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"rs-worker-manager"})," responsibilities:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"manage the cycle of life of workers"}),"\n",(0,n.jsx)(r.li,{children:"send requests to workers, retry request in error"}),"\n",(0,n.jsx)(r.li,{children:"monitor treatments realized by workers"}),"\n",(0,n.jsx)(r.li,{children:"manage a workflow of workers, the output of one worker is the input for the next"}),"\n"]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Concept"}),(0,n.jsx)(r.th,{children:"Compatibility"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/development/concepts/multitenant/",children:"Multitenant"})}),(0,n.jsx)(r.td,{children:"Yes"}),(0,n.jsx)(r.td,{children:"Can handle multiple tenants/projects"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/development/concepts/scalability/#vertical-scalability",children:"Vertical scalability"})}),(0,n.jsx)(r.td,{children:"Yes"}),(0,n.jsx)(r.td,{children:"Uses Jobs system"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/development/concepts/scalability/#horizontal-scalability",children:"Horizontal scalability"})}),(0,n.jsx)(r.td,{children:"Yes"}),(0,n.jsx)(r.td,{children:"Service can not be deployed with multiple instances"})]})]})]}),"\n",(0,n.jsxs)(r.p,{children:["You can learn how the service works with the ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/conception/",children:"How it works section"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,n.jsxs)(r.p,{children:["You can learn how to ",(0,n.jsx)(r.strong,{children:"operate"})," with the microservice thanks to ",(0,n.jsx)(r.strong,{children:"API Guides"})," :"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Publish a request to ",(0,n.jsx)(r.code,{children:"rs-worker-manager"})," ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/api-guides/amqp/publish-request",children:"using AMQP API"})]}),"\n",(0,n.jsxs)(r.li,{children:["Listen responses from ",(0,n.jsx)(r.code,{children:"rs-worker-manager"})," after publishing a request to\n",(0,n.jsx)(r.code,{children:"rs-worker-manager"})," ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/api-guides/amqp/subscribe-to-responses",children:"using AMQP API"})]}),"\n",(0,n.jsxs)(r.li,{children:["Browse all ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/api-guides/rest/api-swagger",children:"REST API available endpoints"})," for administration and\nmonitoring treatments realized by ",(0,n.jsx)(r.code,{children:"rs-worker-manager"}),", workers"]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["You can learn how to ",(0,n.jsx)(r.strong,{children:"operate"})," with a worker thanks to ",(0,n.jsx)(r.strong,{children:"API Guides"})," :"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Indicate to ",(0,n.jsx)(r.code,{children:"rs-worker-manager"}),", the worker is\nalive ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/api-guides/amqp/publish-heartbeat",children:"using AMQP API"})]}),"\n",(0,n.jsxs)(r.li,{children:["Subscribe to requests from worker-manager ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/api-guides/amqp/subscribe-worker-request",children:"using AMQP API"})]}),"\n",(0,n.jsxs)(r.li,{children:["Publish a response\nto ",(0,n.jsx)(r.code,{children:"rs-worker-manager"})," ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/api-guides/amqp/publish-worker-response",children:"using AMQP API"})]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"how-to-configure",children:"How to configure"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"rs-worker-manager"})," microservice manage workers with a configuration file.\nThis file is used to configure the types of worker and worker workflow accepted."]}),"\n",(0,n.jsxs)(r.p,{children:["To learn how the microservice is configured with ",(0,n.jsx)(r.strong,{children:"static parameters from properties files"}),"\nsee ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/configuration/static_configuration",children:"Configuration section"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["To understand the configuration of specific ",(0,n.jsx)(r.a,{href:"/docs/development/concepts/multitenant/",children:"tenant (aka project)"}),".\nsee ",(0,n.jsx)(r.a,{href:"/docs/development/services/worker-manager/configuration/import_export",children:"Import/export configuration section"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"how-to-access-source-code",children:"How to access source code"}),"\n",(0,n.jsxs)(r.p,{children:["Microservice source code is available\non ",(0,n.jsx)(r.a,{href:"https://github.com/RegardsOss/regards-backend/tree/master/rs-worker-manager",children:"GitHub"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>a});var n=s(96540);const o={},i=n.createContext(o);function t(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);