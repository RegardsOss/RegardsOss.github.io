"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[68644],{51657:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var s=t(74848),n=t(28453);const i={id:"backend-amqp-publish-delivery-request",title:"Publish a delivery request event",sidebar_label:"Publish a request",slug:"/development/backend/services/delivery/guides/amqp/publish-a-delivery-request"},d=void 0,l={id:"development/backend/regards/delivery/api-guides/amqp/backend-amqp-publish-delivery-request",title:"Publish a delivery request event",description:"This section describes how to publish a new delivery request event to REGARDS with AMQP message.",source:"@site/versioned_docs/version-1.15/development/backend/regards/delivery/api-guides/amqp/amqp-publish-request.md",sourceDirName:"development/backend/regards/delivery/api-guides/amqp",slug:"/development/backend/services/delivery/guides/amqp/publish-a-delivery-request",permalink:"/docs/1.15/development/backend/services/delivery/guides/amqp/publish-a-delivery-request",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.15/development/backend/regards/delivery/api-guides/amqp/amqp-publish-request.md",tags:[],version:"1.15",frontMatter:{id:"backend-amqp-publish-delivery-request",title:"Publish a delivery request event",sidebar_label:"Publish a request",slug:"/development/backend/services/delivery/guides/amqp/publish-a-delivery-request"},sidebar:"dev",previous:{title:"Architecture",permalink:"/docs/1.15/development/backend/services/delivery/architecture/"},next:{title:"Subscribe to responses",permalink:"/docs/1.15/development/backend/services/delivery/guides/amqp/subscribe-to-delivery-responses"}},c={},a=[{value:"Exchange",id:"exchange",level:2},{value:"AMQP message format",id:"amqp-message-format",level:2},{value:"Properties",id:"properties",level:3},{value:"Headers",id:"headers",level:3},{value:"Body",id:"body",level:3}];function o(e){const r={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:"This section describes how to publish a new delivery request event to REGARDS with AMQP message."}),"\n",(0,s.jsx)(r.h2,{id:"exchange",children:"Exchange"}),"\n",(0,s.jsxs)(r.p,{children:["Delivery requests have to be published to REGARDS RabbitMQ exchange on vhost 'regards.multitenant.manager':",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.code,{children:"regards.broadcast.fr.cnes.regards.modules.delivery.amqp.input.DeliveryRequestDtoEvent"})]}),"\n",(0,s.jsx)(r.h2,{id:"amqp-message-format",children:"AMQP message format"}),"\n",(0,s.jsx)(r.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Optional"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"app_id"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,s.jsx)(r.td,{children:"Standard RabbitMQ property to track message origin."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"priority"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,s.jsx)(r.td,{children:"Standard RabbitMQ property to sort messages by priority order."})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"headers",children:"Headers"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'"regards.tenant": "tenant"\n"regards.request.owner": "owner"\n'})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Optional"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"regards.tenant"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(r.td,{children:"Tenant name depends on REGARDS instance project configuration."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"regards.request.owner"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(r.td,{children:"Name of the request provider."})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"body",children:"Body"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'{\n  "correlationId": "xxxxxx",\n  "targetDelivery": "regards-s3-minio",\n  "order": {\n    "user": "xxxxxx",\n    "queries": [\n      "providerId:xxxxx"\n    ],\n    "filters": [\n      {\n        "dataTypes": [],\n        "filenameRegExp": ""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Optional"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"correlationId"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(r.td,{children:"Unique identifier to track the request."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"targetDelivery"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,s.jsxs)(r.td,{children:["Name of the S3 configuration to use. For now, provide the default value ",(0,s.jsx)(r.code,{children:"regards-s3-minio"}),"."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"queries"}),(0,s.jsx)(r.td,{children:"Lucene strings"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsxs)(r.td,{children:["List of lucene formatted queries to find products to order. (refer to ",(0,s.jsx)(r.a,{href:"/docs/1.15/development/appendices/lucene-query/",children:"lucene documentation"}),")"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"user"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(r.td,{children:"Email of your REGARDS user."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"filters.datatypes"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,s.jsxs)(r.td,{children:["List of REGARDS datatypes to filter files from ordered products. Datatypes can be either ",(0,s.jsx)(r.code,{children:"RAWDATA"})," or ",(0,s.jsx)(r.code,{children:"QUICKLOOK"}),"."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"filters.filenameRegExp"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,s.jsx)(r.td,{children:"Regular expression to filter files by their names from ordered products."})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>d,x:()=>l});var s=t(96540);const n={},i=s.createContext(n);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);