"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[58685],{69527:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var s=t(74848),n=t(28453);const i={title:"Send heart beats from workers to rs-worker-manager",sidebar_label:"Workers - Send heart beat",slug:"/development/services/worker-manager/api-guides/amqp/publish-heartbeat",sidebar_position:3},a=void 0,d={id:"development/services/worker-manager/api-guides/amqp/amqp-worker-publish-heartbeat",title:"Send heart beats from workers to rs-worker-manager",description:"Introduction",source:"@site/versioned_docs/version-2.0.0/development/services/worker-manager/api-guides/amqp/amqp-worker-publish-heartbeat.md",sourceDirName:"development/services/worker-manager/api-guides/amqp",slug:"/development/services/worker-manager/api-guides/amqp/publish-heartbeat",permalink:"/docs/development/services/worker-manager/api-guides/amqp/publish-heartbeat",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-2.0.0/development/services/worker-manager/api-guides/amqp/amqp-worker-publish-heartbeat.md",tags:[],version:"2.0.0",sidebarPosition:3,frontMatter:{title:"Send heart beats from workers to rs-worker-manager",sidebar_label:"Workers - Send heart beat",slug:"/development/services/worker-manager/api-guides/amqp/publish-heartbeat",sidebar_position:3},sidebar:"dev",previous:{title:"Subscribe to responses",permalink:"/docs/development/services/worker-manager/api-guides/amqp/subscribe-to-responses"},next:{title:"Workers - Subscribe to requests",permalink:"/docs/development/services/worker-manager/api-guides/amqp/subscribe-worker-request"}},o={},c=[{value:"Introduction",id:"introduction",level:2},{value:"AMQP API",id:"amqp-api",level:2},{value:"How to",id:"how-to",level:3},{value:"Exchange",id:"exchange",level:3},{value:"Request content",id:"request-content",level:3},{value:"Headers",id:"headers",level:4},{value:"Body",id:"body",level:4}];function h(e){const r={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(r.p,{children:["This section describes how to publish a heart beat event to the ",(0,s.jsx)(r.code,{children:"rs-worker-manager"})," microservice with an AMQP message.",(0,s.jsx)(r.br,{}),"\n","This message is usually sent from a worker to the ",(0,s.jsx)(r.code,{children:"rs-worker-manager"})," to indicates it is alive."]}),"\n",(0,s.jsx)(r.h2,{id:"amqp-api",children:"AMQP API"}),"\n",(0,s.jsx)(r.h3,{id:"how-to",children:"How to"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.a,{href:"/docs/development/concepts/amqp-api/",children:"Regards AMQP API concept"})," describes how AMQP interfaces must be handled to\nsubmit events or to subscribe to events."]}),"\n",(0,s.jsx)(r.h3,{id:"exchange",children:"Exchange"}),"\n",(0,s.jsx)(r.p,{children:"Heart beats must be published to the REGARDS RabbitMQ exchange:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Exchange (type topic)"}),(0,s.jsx)(r.th,{children:"Virtual host"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"regards.worker.manager.heartbeat"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"regards.multitenant.manager"})})]})})]}),"\n",(0,s.jsx)(r.h3,{id:"request-content",children:"Request content"}),"\n",(0,s.jsx)(r.h4,{id:"headers",children:"Headers"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"regards.tenant"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"The tenant name depends on the REGARDS instance project configuration."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"content_type"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"Content type of the body. Must be set to application/json"})]})]})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",metastring:'title="Example of the headers of a heartbeat request event message"',children:'{\n  "regards.tenant": "tenant",\n  "content_type": "application/json"\n}\n'})}),"\n",(0,s.jsx)(r.h4,{id:"body",children:"Body"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'{\n  "id": "...",\n  "type": "...",\n  "heartBeatDate": "2024-08-02T09:45:10.662619355Z"\n}\n'})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"id"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"Worker instance identifier"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"type"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"Worker type"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"heartBeatDate"}),(0,s.jsx)(r.td,{children:"String"}),(0,s.jsx)(r.td,{children:"Date and hour of the heart beat, when the worker sent it"})]})]})]})]})}function l(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>d});var s=t(96540);const n={},i=s.createContext(n);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);