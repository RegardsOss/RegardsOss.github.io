"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[36466],{39667:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>a});var n=s(74848),t=s(28453);const d={id:"backend-create-order-amqp",title:"Create Order",sidebar_label:"Create Order",sidebar_position:1,slug:"/development/backend/services/order/guides/create-order-amqp"},i=void 0,o={id:"development/services/order/api-guides/amqp/backend-create-order-amqp",title:"Create Order",description:"This guide describes how to order one or many products from the order service through AMQP interface.",source:"@site/docs/development/services/order/api-guides/amqp/amqp-create-order.md",sourceDirName:"development/services/order/api-guides/amqp",slug:"/development/backend/services/order/guides/create-order-amqp",permalink:"/docs/development/backend/services/order/guides/create-order-amqp",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/order/api-guides/amqp/amqp-create-order.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"backend-create-order-amqp",title:"Create Order",sidebar_label:"Create Order",sidebar_position:1,slug:"/development/backend/services/order/guides/create-order-amqp"},sidebar:"dev",previous:{title:"How it works",permalink:"/docs/development/backend/services/order/architecture/"},next:{title:"Get Order progress",permalink:"/docs/development/backend/services/order/guides/get-order-progress-amqp"}},l={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Submit Order request",id:"submit-order-request",level:2},{value:"Exchange",id:"exchange",level:3},{value:"Order request format",id:"order-request-format",level:3},{value:"Order request examples",id:"order-request-examples",level:3}];function c(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"This guide describes how to order one or many products from the order service through AMQP interface."}),"\n",(0,n.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(r.p,{children:"The diagram below explains the overall processing of an order request by the REGARDS system.\nFor a REGARDS client using message queuing, the main steps are :"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsx)(r.li,{children:"Publish your order request to REGARDS Rabbitmq server."}),"\n",(0,n.jsxs)(r.li,{children:["Wait for the first notification from REGARDS on its Rabbitmq server. The message status can be :","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DENIED"})," -> There is a problem with the order request, check the logs. No more message will be received."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"GRANTED"})," -> The order is now pending for product retrieval."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["Wait for other notification from Rabbitmq. Message status is","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"SUBORDER_DONE"})," (occurs 1 to many times) -> A suborder is done and is ready for download. The",(0,n.jsx)(r.code,{children:"SUBORDER_DONE"}),"\nmessage contains the URL to the ",(0,n.jsx)(r.a,{href:"./download-ordered-files",children:"Download ordered files"})," REST API which allows\ndownloading all available files related to an order."]}),"\n",(0,n.jsxs)(r.li,{children:["If no ",(0,n.jsx)(r.code,{children:"SUBORDER_DONE"})," is received after 2 hours, that means that your order failed. The order status is now\n",(0,n.jsx)(r.code,{children:"FAILED"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["Wait for a last notification from Rabbitmq. The message status can be","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DONE"})," -> All suborders successes."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DONE_WITH_WARNING"})," -> Some files have not been retrieved."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"FAILED"})," -> No file retrieved."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.admonition,{title:"suborder download",type:"info",children:[(0,n.jsxs)(r.p,{children:["You can configure number of parallel suborder per user ",(0,n.jsx)(r.a,{href:"/docs/development/backend/services/order/configuration/static-configuration",children:"here"})," (see\n",(0,n.jsx)(r.em,{children:"regards.order.max.storage.files.jobs.per.user"}),")."]}),(0,n.jsxs)(r.p,{children:["With n = parallel suborder max per user, REGARDS behave as follows : you can wait for n ",(0,n.jsx)(r.code,{children:"notification_done"}),"\nmessage before downloading. When downloading, all available suborders will be automatically downloaded."]})]}),"\n",(0,n.jsx)(r.admonition,{title:"done vs suborder_done",type:"note",children:(0,n.jsxs)(r.p,{children:["The last notification with ",(0,n.jsx)(r.strong,{children:"DONE"})," status only indicates that all suborders are done. This does not mean that more data\nare available to download."]})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"sequence",src:s(65639).A+"",width:"628",height:"809"})}),"\n",(0,n.jsx)(r.h2,{id:"submit-order-request",children:"Submit Order request"}),"\n",(0,n.jsx)(r.h3,{id:"exchange",children:"Exchange"}),"\n",(0,n.jsxs)(r.p,{children:["Exchange to submit Order requests:",(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.code,{children:"regards.broadcast.fr.cnes.regards.modules.order.amqp.input.OrderRequestDtoEvent"})]}),"\n",(0,n.jsx)(r.h3,{id:"order-request-format",children:"Order request format"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"Message headers"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'"regards.tenant": "tenant"\n'})}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameter"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"center"},children:"Optional"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"regards.tenant"})}),(0,n.jsx)(r.td,{children:"String"}),(0,n.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(r.td,{children:"Tenant name depends on REGARDS instance project configuration"})]})})]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"Message body content"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'{\n  "correlationId": "xxx",\n  "queries": [],\n  "user": "",\n  "sizeLimitInBytes": "xx",\n  "filters": {\n    "dataTypes": [],\n    "filenameRegExp": ""\n  }\n}\n'})}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameter"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"center"},children:"Optional"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"correlationId"}),(0,n.jsx)(r.td,{children:"String"}),(0,n.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(r.td,{children:"The request correlation id."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"queries"}),(0,n.jsx)(r.td,{children:"Lucene strings"}),(0,n.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(r.td,{children:"List of lucene formatted queries to find products to order."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"user"}),(0,n.jsx)(r.td,{children:"String"}),(0,n.jsx)(r.td,{style:{textAlign:"center"},children:"No"}),(0,n.jsx)(r.td,{children:"Email of your REGARDS user."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sizeLimitInBytes"}),(0,n.jsx)(r.td,{children:"Long"}),(0,n.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,n.jsx)(r.td,{children:"Number to limit the size of the files ordered at once, in bytes."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"filters.datatypes"}),(0,n.jsx)(r.td,{children:"String"}),(0,n.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,n.jsxs)(r.td,{children:["List of REGARDS datatypes to filter files from orderd products. Datatypes can be ",(0,n.jsx)(r.code,{children:"RAWDATA"})," or ",(0,n.jsx)(r.code,{children:"QUICKLOOK"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"filters.filenameRegExp"}),(0,n.jsx)(r.td,{children:"String"}),(0,n.jsx)(r.td,{style:{textAlign:"center"},children:"Yes"}),(0,n.jsx)(r.td,{children:"Regular expression to filter files by their names from orderd products."})]})]})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"NOTE"}),": Here is the link to the ",(0,n.jsx)(r.a,{href:"/docs/development/appendices/lucene-query/",children:"REGARDS Lucene format"})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"NOTE"}),": A REGARDS user is mandatory to order products. Your user must be activated and remaining download quota must\nallow you to order."]}),"\n",(0,n.jsx)(r.h3,{id:"order-request-examples",children:"Order request examples"}),"\n",(0,n.jsx)(r.p,{children:"If you want to retrieve a product by its identifier, the order request is :"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'{\n  "queries": [\n    "productId:my_product_identifier"\n  ],\n  "user": "myself@cnes.fr"\n}\n'})}),"\n",(0,n.jsx)(r.p,{children:"If you want to retrieve many products using their identifiers, the order request is :"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'{\n  "queries": [\n    "productId:(my_product_id_1 OR my_product_id_2 OR my_product_id_3 OR my_product_id_4)"\n  ],\n  "user": "myself@cnes.fr"\n}\n'})}),"\n",(0,n.jsx)(r.p,{children:"If you want to retrieve all products from a specific metadata like datatype (depends on configured REGARDS data models),\nthe restoration request is:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'{\n  "queries": [\n    "datatype:type1"\n  ],\n  "user": "myself@cnes.fr"\n}\n'})}),"\n",(0,n.jsx)(r.p,{children:"If you want to retrieve all products from a specific metadata like datatype (depends on configured REGARDS data models)\nand retrieve only image files, the restoration request is:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'{\n  "queries": [\n    "datatype:type1"\n  ],\n  "user": "myself@cnes.fr",\n  "filters": {\n    "dataTypes": [\n      "QUICKLOOK"\n    ]\n  }\n}\n'})}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Click on the link Get Order progress AMQP"})," just below, you will discover responses RS-ORDER will send you for your\norder."]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},65639:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/restitution-sequence-3.0-1559380f24220259a098114a4df5aabe.png"},28453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>o});var n=s(96540);const t={},d=n.createContext(t);function i(e){const r=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(d.Provider,{value:r},e.children)}}}]);