"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[82421],{41885:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var s=t(74848),i=t(28453);const n={id:"backend-framework-starters-staf",title:"STAF starter",slug:"/development/backend/framework/starters/staf/"},a="1. Configuration",o={id:"development/framework/starters/backend-framework-starters-staf",title:"STAF starter",description:"Add starter dependency to your POM (version depends on the REGARDS BOM)",source:"@site/versioned_docs/version-2.0.0/development/framework/starters/staf-starter.md",sourceDirName:"development/framework/starters",slug:"/development/backend/framework/starters/staf/",permalink:"/docs/development/backend/framework/starters/staf/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-2.0.0/development/framework/starters/staf-starter.md",tags:[],version:"2.0.0",frontMatter:{id:"backend-framework-starters-staf",title:"STAF starter",slug:"/development/backend/framework/starters/staf/"},sidebar:"dev",previous:{title:"Security starter",permalink:"/docs/development/backend/framework/starters/security/"},next:{title:"Swagger starter",permalink:"/docs/development/backend/framework/starters/swagger/"}},l={},c=[{value:"2.1 Initialization",id:"21-initialization",level:2},{value:"2.2 To archive files",id:"22-to-archive-files",level:2},{value:"2.3 To restore files",id:"23-to-restore-files",level:2},{value:"2.4 To delete files",id:"24-to-delete-files",level:2}];function d(e){const r={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"1-configuration",children:"1. Configuration"})}),"\n",(0,s.jsx)(r.p,{children:"Add starter dependency to your POM (version depends on the REGARDS BOM)"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-xml",children:"<dependency>\n  <groupId>fr.cnes.regards.framework</groupId>\n  <artifactId>staf-starter</artifactId>\n</dependency>\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-properties",children:"# 1. Restitution properties\n# -----------------------\n# Maximum numbe os staf session for files restitution. A session is opened connection to the STAF system.\nstaf.maxSessionsRestitutionMode=10\n# Maximum number of streams per STAF Session. A stream is an action of archving or retrieving a list of files\nstaf.maxSessionStreamsRestitutionMode=10\n# Maximum number of files to retrieve per stream.\nstaf.maxStreamFilesRestitutionMode=10\n\n# 2. Archiving properties\n# --------------------\n# Maximum numbe os staf session for files archiving. A session is opened connection to the STAF system.\nstaf.maxSessionsArchivingMode=10\n# Maximum number of streams per STAF Session. A stream is an action of archving or retrieving a list of files\nstaf.maxSessionStreamsArchivingMode=10\n# Maximum number of files to archive per stream.\nstaf.maxStreamFilesArchivingMode=10\n# Minim file size for archiving into STAF (in octets). Under this limit, files are archive in TAR archives.\nstaf.minFileSize=1000\n# Maximum files size for archiving into STAF (in octets). Above this limit, files are cuted in parts before archiving.\nstaf.maxFileSize=100000\n# Maximum size of an TAR archive into STAF (in octets). Above this limite another TAR archive is initialized.\nstaf.maxTarSize=100000\n# Minimum size of a TAR archive to be stored into STAF (in octets). Under this limit, TAR are locally stored.\nstaf.tarSizeThreshold=50000\n# Above this limit of time (in hours), TAR archive are stored into STAF even if the tarSizeThreshold is not reached.\nstaf.maxTarArchivingHours=1\n# STAF Class used to archive files under the 50Mo\nstaf.littleFileClass=CS3\n# STAF Class used to archive files above the 50Mo\nstaf.biggerFileGenClass=CS3\n\n# 3. Global properties\n# -----------------\n# Number of try before fail during STAF Connection\nstaf.attemptsBeforeFail=3\n# absolute path the executable used to run shell sessions\nstaf.kshExec=/usr/bin/ksh\n# Not mandatory. This parameter is used to run a system shell command before trying to connect to STAF system.\nstaf.initShellCommand=\n"})}),"\n",(0,s.jsx)(r.h1,{id:"2-how-to-use-staf-starter",children:"2. How to use STAF starter"}),"\n",(0,s.jsx)(r.h2,{id:"21-initialization",children:"2.1 Initialization"}),"\n",(0,s.jsx)(r.p,{children:"In order to use staf-starter the first step is to initialize :"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"STAF Service from the autowired STAFSessionManager"}),"\n",(0,s.jsx)(r.li,{children:"STAF Controller from the previuous initialized STAF Service"}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["The STAF Service is used to initialize the STAF Archive to use.",(0,s.jsx)(r.br,{}),"\n","The STAF Controller is used to handle STAF file transfer and needs to be initialized with an absolute path the local STAF workspace directory."]}),"\n",(0,s.jsx)(r.p,{children:"The local STAF Workspace directory is used to :"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Store local TAR archives not big enought to be store into STAF System."}),"\n",(0,s.jsx)(r.li,{children:"Temporary cut files which are too big to be store into STAF in one part."}),"\n",(0,s.jsx)(r.li,{children:"Temporary uncompress TAR archives retrieved from STAF system to retrieve one or many files into archives."}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'\t/**\n     * STAF connections manager\n     */\n    @Autowired\n    private STAFSessionManager stafManager;\n    \n    public void init() {\n        // Initialize STAF Service\n        STAFService stafService = stafManager.getNewArchiveAccessService(stafArchive);\n        try {\n            stafController = new STAFController(stafManager.getConfiguration(), Paths.get(workspaceDirectory),\n                    stafService);\n            stafController.initializeWorkspaceDirectories();\n        } catch (IOException e) {\n            LOG.error("[STAFDataStorage Plugin] Error during plugin initialization", e);\n        }\n    }\n'})}),"\n",(0,s.jsx)(r.h2,{id:"22-to-archive-files",children:"2.2 To archive files"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"// 1. Sort files to archive per STAF Node\n// key : STAF Node where to archive files in value.\n// value : List of file paths to archive into the associated STAF Node.\nMap<Path, Set<Path> filesToPrepare;\n// 2. Prepare files to store\nSet<AbstractPhysicalFile> preparedFiles = stafController.prepareFilesToArchive(filesToPrepare);\n// 3. do store\nstafController.archiveFiles(preparedFiles, false);\n// 4. Get link between original file paths to archive and STAF URL of archived files\nMap<Path, URL> rawArchivedFiles = stafController.getRawFilesArchived(preparedFiles);\n"})}),"\n",(0,s.jsx)(r.h2,{id:"23-to-restore-files",children:"2.3 To restore files"}),"\n",(0,s.jsx)(r.p,{children:"Note : The restoration can be asynchronous. So to handle files well restored, the STAFController uses a IClientCollectListener object. After each restoration success or fail the IClientCollectListener is notified."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"// List of STAF URL of files to restore.\nSet<URL> urls;\n// 1. prepare files to restore\nSet<AbstractPhysicalFile> preparedFiles = stafController.prepareFilesToRestore(urls);\n// 2. do restore\nstafController.restoreFiles(preparedFiles, restorationDirectory, listener);\n"})}),"\n",(0,s.jsx)(r.h2,{id:"24-to-delete-files",children:"2.4 To delete files"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"// List of STAF URL of files to restore.\nSet<URL> urls;\n// 1. prepare files to delete\nSet<AbstractPhysicalFile> filesToDelete = stafController.prepareFilesToDelete(urls);\n// 2. Delete prepared files\nSet<URL> deletedSTAFFiles = stafController.deleteFiles(filesToDelete);\n"})}),"\n",(0,s.jsx)(r.h1,{id:"3-use-a-staf-standalone-executable",children:"3. Use a STAF standalone executable"}),"\n",(0,s.jsxs)(r.p,{children:["The STAF libraby provide a standalone executable jar ",(0,s.jsx)(r.code,{children:"staf-standalone-<version>-.jar"}),"."]}),"\n",(0,s.jsx)("b",{children:"Usage to archive files :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"java -jar\n  -Dmode=ARCHIVE\n  -Darchive.name=<STAF Archive>\n  -Darchive.password=<STAF Archive password>  \n  -Dnode=<STAF Node where to archive>\n  -Ddir=<Absolute path to directory where to find files to archive>\n  -Dworkspace=<Absolute path to local STAF workspace>\n  staf-standalone--<version>.jar\n"})}),"\n",(0,s.jsx)("b",{children:"Usage to retrieve files :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"java -jar\n  -Dmode=RESTORE\n  -Darchive.name=\\<STAF Archive> \n  -Darchive.password=\\<STAF Archive password>\n  -Dworkspace=\\<Absolute path to local STAF workspace>\n  -Douputdir=\\<Absolute path to directory where to restore files>\n  staf-standalone--\\<version>\\.jar \\[STAF Files to retrieve]\n"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)("b",{children:"Note :"})," [STAF Files] : is a list of STAF URL to retrieve (example staf://ARCHIVE/NODE/file)"]}),"\n",(0,s.jsx)("b",{children:"Usage to delete files :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"java -jar \n  -Dmode=DELETE\n  -Darchive.name=\\<STAF Archive>\n  -Darchive.password=\\<STAF Archive password>\n  -Dworkspace=\\<Absolute path to local STAF workspace>\n  staf-standalone--\\<version>.jar [STAF Files to delete]\n"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)("b",{children:"Note :"})," [STAF Files] : is a list of STAF URL to delete (exeple staf://ARCHIVE/NODE/file)"]}),"\n",(0,s.jsx)("b",{children:"STAF Files url format"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:" - Direct acccess to file : staf://\\<ARCHIVE>/\\<NODE PATH>/\\<FileName>\n - Acccess a file into an archive (tar only) : staf://\\<ARCHIVE>/\\<NODE PATH>/\\<TarFileName>.tar?fileName=\\<fileName>\n - Acccess a file cut in multiple parts : staf://\\<ARCHIVE>/\\<NODE PATH>/\\<FileName>?parts=\\<Number of parts>\n"})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>o});var s=t(96540);const i={},n=s.createContext(i);function a(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(n.Provider,{value:r},e.children)}}}]);