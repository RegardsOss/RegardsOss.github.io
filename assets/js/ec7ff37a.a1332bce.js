"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[22854],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var l=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,l,r=function(t,e){if(null==t)return{};var n,l,r={},a=Object.keys(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=l.createContext({}),u=function(t){var e=l.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},d=function(t){var e=u(t.components);return l.createElement(i.Provider,{value:e},t.children)},c="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},k=l.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,i=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),c=u(n),k=r,m=c["".concat(i,".").concat(k)]||c[k]||p[k]||a;return n?l.createElement(m,s(s({ref:e},d),{},{components:n})):l.createElement(m,s({ref:e},d))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,s=new Array(a);s[0]=k;var o={};for(var i in e)hasOwnProperty.call(e,i)&&(o[i]=e[i]);o.originalType=t,o[c]="string"==typeof t?t:r,s[1]=o;for(var u=2;u<a;u++)s[u]=n[u];return l.createElement.apply(null,s)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},67699:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var l=n(87462),r=(n(67294),n(3905));const a={id:"depracated-server-configuration",title:"Minimal server configuration",slug:"/setup/deprecated/server-configuration/"},s=void 0,o={unversionedId:"setup/deprecated/depracated-server-configuration",id:"version-1.8.1/setup/deprecated/depracated-server-configuration",title:"Minimal server configuration",description:"In this guide, we'll see what is expected by REGARDS components, then we will see how to configure components that we rely on.",source:"@site/versioned_docs/version-1.8.1/setup/deprecated/configuration.md",sourceDirName:"setup/deprecated",slug:"/setup/deprecated/server-configuration/",permalink:"/docs/1.8.1/setup/deprecated/server-configuration/",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.8.1/setup/deprecated/configuration.md",tags:[],version:"1.8.1",frontMatter:{id:"depracated-server-configuration",title:"Minimal server configuration",slug:"/setup/deprecated/server-configuration/"}},i={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"System",id:"system",level:3},{value:"Regards",id:"regards",level:3},{value:"SMTP mail server",id:"smtp-mail-server",level:3},{value:"Password",id:"password",level:3},{value:"Linux users",id:"linux-users",level:2},{value:"Postgres",id:"postgres",level:2},{value:"RabbitMQ",id:"rabbitmq",level:2},{value:"Elasticsearch",id:"elasticsearch",level:2},{value:"Kibana",id:"kibana",level:2},{value:"Reverse proxy",id:"reverse-proxy",level:2},{value:"httpd",id:"httpd",level:3},{value:"NGinx",id:"nginx",level:3},{value:"Security and firewall",id:"security-and-firewall",level:2},{value:"Installation on a single server",id:"installation-on-a-single-server",level:3},{value:"Install on several servers",id:"install-on-several-servers",level:3},{value:"Systemctl",id:"systemctl",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Auto restart services on boot",id:"auto-restart-services-on-boot",level:3}],d={toc:u},c="wrapper";function p(t){let{components:e,...n}=t;return(0,r.kt)(c,(0,l.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this guide, we'll see what is expected by REGARDS components, then we will see how to configure components that we rely on."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("h3",{id:"system"},"System"),(0,r.kt)("p",null,"For a basic setup, to install REGARDS, PostgreSQL, RabbitMQ and ElasticSearch on a single server, you will need :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"16Gb RAM"),(0,r.kt)("li",{parentName:"ul"},"4 to 8 vCPU")),(0,r.kt)("p",null,"We'll assume you want to install REGARDS in ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/regards"),", so don't forget to adapt this path if you install it somewhere else."),(0,r.kt)("h3",{id:"regards"},"Regards"),(0,r.kt)("p",null,"Any server that hosts a REGARDS component needs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java OpenJDK JRE 1.8"),(0,r.kt)("li",{parentName:"ul"},"access to the database PostgreSQL"),(0,r.kt)("li",{parentName:"ul"},"access to the message broker RabbitMQ"),(0,r.kt)("li",{parentName:"ul"},"access to a SMTP mail server")),(0,r.kt)("p",null,"And for components ",(0,r.kt)("inlineCode",{parentName:"p"},"Data Management")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Catalog"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"access to the ElasticSearch")),(0,r.kt)("h3",{id:"smtp-mail-server"},"SMTP mail server"),(0,r.kt)("p",null,"You can use any SMTP mail server you want. The connection properties have to be provided during the REGARDS installation."),(0,r.kt)("h3",{id:"password"},"Password"),(0,r.kt)("p",null,"Components requires a cipher to encrypt some sensible information using AES algorithm."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir /opt/regards\nopenssl rand -hex 8 > /opt/regards/regards.key\n")),(0,r.kt)("p",null,"For maximum security, cipher key should only be readable by user ",(0,r.kt)("inlineCode",{parentName:"p"},"regards"),". We strongly advice you to execute the following commands as root:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chown regards:root /opt/regards/regards.key\nchmod 0400 /opt/regards/regards.key\n")),(0,r.kt)("p",null,"The Izpack installer will ask you where is located the ",(0,r.kt)("inlineCode",{parentName:"p"},"regards.key")," file, so put it in the REGARDS root folder."),(0,r.kt)("h2",{id:"linux-users"},"Linux users"),(0,r.kt)("p",null,"If you want to install the component with limited access rights (ie ",(0,r.kt)("inlineCode",{parentName:"p"},"Security Level")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"Enforce"),"), you need to create users and groups:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"groupadd regards\ngroupadd rsins\ngroupadd rsexec\ngroupadd rsadmin\ngroupadd rsrun\nuseradd rsins -g rsins -G regards,rsexec,rsadmin,rsrun\npasswd rsins\nuseradd rsadmin -g regards -G rsadmin,rsrun\npasswd rsadmin\nuseradd regards --no-create-home --shell=/sbin/nologin -g regards -G rsexec,rsrun\n")),(0,r.kt)("p",null,"And you need to update access rights of the installation folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"chown :regards /opt/regards\nchmod 1770 /opt/regards\n")),(0,r.kt)("h2",{id:"postgres"},"Postgres"),(0,r.kt)("p",null,"Install the database ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/"},"PostgreSQL")," 9.6.X.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Notice :")," Do not use a further version like 10.X."),(0,r.kt)("p",null,"You can also install ",(0,r.kt)("a",{parentName:"p",href:"http://phppgadmin.sourceforge.net/doku.php"},"phpPgAdmin")," to monitor the database."),(0,r.kt)("p",null,"Here is how to init Postgres on Red Hat OS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"su postgres -s /bin/bash -c '/usr/pgsql-9.6/bin/initdb -D /var/lib/pgsql/9.6/data/'\nsystemctl start postgresql-9.6.service\n")),(0,r.kt)("p",null,"This is how to create a postgres user named ",(0,r.kt)("inlineCode",{parentName:"p"},"rs_postgres")," using the PostgreSQL cli:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd /\nsu postgres\ncreateuser -P --interactive rs_postgres\n# Define that user password, then\n# answer no to all questions\n")),(0,r.kt)("p",null,"After your user is created, you have to add the authentication method in the pg_hba.conf. Here under is an exemple for local authentication."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# "local" is for Unix domain socket connections only\nlocal   all             rs_postgres                             md5\nlocal   all             postgres                                md5\n# IPv4 local connections:\nhost    all             all             127.0.0.1/32            md5\n')),(0,r.kt)("p",null,"You will need at least two databases, one for REGARDS instance and one for the first REGARDS project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"createdb -O rs_postgres -E UTF8 rs_instance\ncreatedb -O rs_postgres -E UTF8 rs_project1\n")),(0,r.kt)("p",null,"If you want to use REGARDS with a large number of projects, you may need to configure the maximum number of connections allowed by your postgres server. Indeed, in REGARDS each project needs a connection pool with at least 3connections per microservice."),(0,r.kt)("p",null,"For exemple if you install all REGARDS project microservices (9) you will need 27 (9microservices ","*"," 3connections) connections per project."),(0,r.kt)("p",null,"By default a postgres server allows 100 connections per server. So if you not planning to use more than 3 projects you don't need any modifications. So if you plan to create more than 3 projects you have to increase the maximum number of allowed connections.",(0,r.kt)("br",{parentName:"p"}),"\n","To do so :"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Increase max_connection and shared_buffers")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"in /var/lib/pgsql/data/postgresql.conf\nChange\nmax_connections = 100\nshared_buffers = 24MB\n\nto\nmax_connections = 300\nshared_buffers = 80MB\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Change kernel.shmmax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"In /etc/sysctl.conf\nkernel.shmmax=100663296\n")),(0,r.kt)("p",null,"Notice : REGARDS project microservices are ",(0,r.kt)("inlineCode",{parentName:"p"},"access-project"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"admin"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"authentication"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"catalog"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dam"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dataprovider"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ingest"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"order")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")),(0,r.kt)("h2",{id:"rabbitmq"},"RabbitMQ"),(0,r.kt)("p",null,"Install RabbitMQ Server 3.6.X ",(0,r.kt)("a",{parentName:"p",href:"https://www.rabbitmq.com/download.html#installation-guides"},"using the official documentation"),".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Notice :")," Do not use a further version like 3.7.X."),(0,r.kt)("p",null,"Then on Red Hat OS, you need to create some basic configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Provide a default configuration\ncp /usr/share/doc/rabbitmq-server-3.6.8/rabbitmq.config.example /etc/rabbitmq/rabbitmq.config.ori\ncp /etc/rabbitmq/rabbitmq.config.ori /etc/rabbitmq/rabbitmq.config\n\n# Create localhost configuration file\necho "\nvm.max_map_count=262144" >> /etc/sysctl.conf\n\n# Allow the rabbitmq default user to manage its config files\nchown -R :rabbitmq  /etc/rabbitmq\nchmod 0770 /etc/rabbitmq\nchmod 0640  /etc/rabbitmq/*\n\n# Configure data & logs directory\n\nWithout configuration rabbitmq will store all is files in /var/lib/rabbitmq. This can be a huge problem in production. To avoid this, follow the configuration here under.\n\necho "\nRABBITMQ_MNESIA_BASE=<data directory>\nRABBITMQ_LOG_BASE=<logs directory>\n" >> /etc/rabbitmq/rabbitmq-env.conf\n\n# Start the service\nsystemctl start rabbitmq-server.service\n')),(0,r.kt)("p",null,"We advise the following configuration of RabbitMQ for production environments, in /etc/rabbitmq/rabbitmq.conf:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"vm_memory_high_watermark: 0.4"),(0,r.kt)("li",{parentName:"ul"},"disk_free_limit: {mem_relative, 2.0}")),(0,r.kt)("p",null,"Once you have installed RabbitMQ, you need to activate the management plugin"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"su rabbitmq -s /bin/bash -c 'rabbitmq-plugins enable rabbitmq_management'\n")),(0,r.kt)("p",null,"Then, using the ",(0,r.kt)("a",{parentName:"p",href:"https://www.rabbitmq.com/rabbitmqctl.8.html#User_Management"},"RabbitMQ REST API")," or the management console, you need to activate the guest user, or create another one, that can :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create ",(0,r.kt)("a",{parentName:"li",href:"https://www.rabbitmq.com/vhosts.html"},"vhosts")),(0,r.kt)("li",{parentName:"ul"},"add rights to others users")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Create a RabbitMQ admin named regards_adm\nrabbitmqctl add_user regards_adm regards_adm\nrabbitmqctl set_user_tags regards_adm administrator\nrabbitmqctl set_permissions -p / regards_adm "." ".*" "."\n')),(0,r.kt)("p",null,"If you want increased security on RabbitMQ, you can run ",(0,r.kt)("inlineCode",{parentName:"p"},'rabbitmqctl set_permissions -p / regards_adm "^$" "^$" "^$"')," after REGARDS has been started at least once."),(0,r.kt)("h2",{id:"elasticsearch"},"Elasticsearch"),(0,r.kt)("p",null,"Install ",(0,r.kt)("a",{parentName:"p",href:"https://www.elastic.co/fr/downloads"},"ElasticSearch")," 6.X.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Notice :")," Do not use a further version like 7.X."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"grep vm.max_map_count /etc/sysctl.conf")," returns empty, you need to execute the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'sysctl -w vm.max_map_count=262144\necho "\nvm.max_map_count=262144" >> /etc/sysctl.conf\n')),(0,r.kt)("p",null,"We advise the following configuration for production environments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"change ",(0,r.kt)("strong",{parentName:"li"},"network.host")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"0.0.0.0")),(0,r.kt)("li",{parentName:"ul"},"change ",(0,r.kt)("strong",{parentName:"li"},"cluster.name")),(0,r.kt)("li",{parentName:"ul"},"change ",(0,r.kt)("strong",{parentName:"li"},"node.name")),(0,r.kt)("li",{parentName:"ul"},"change ",(0,r.kt)("strong",{parentName:"li"},"path.data")),(0,r.kt)("li",{parentName:"ul"},"configure manually the list of hosts from the cluster"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"gateway.recover_after_node")," should be the number of node deployed in the cluster"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"discovery.zen.minimum_master_nodes")," should be ",(0,r.kt)("inlineCode",{parentName:"li"},"n/2+1")," when n is the number of node in the cluster"),(0,r.kt)("li",{parentName:"ul"},"Elasticsearch being taking advantage of some file system features, if elasticsearch has his dedicated server, ",(0,r.kt)("strong",{parentName:"li"},"HEAP_SIZE")," should be no more than half of the server memory."),(0,r.kt)("li",{parentName:"ul"},"elasticsearch ",(0,r.kt)("strong",{parentName:"li"},"HEAP_SIZE")," should be no more than ",(0,r.kt)("inlineCode",{parentName:"li"},"32GB")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"bootstrap.memory_lock")," is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"true"))),(0,r.kt)("p",null,"For Red Hat OS, you just need to start it :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable elasticsearch.service\nsystemctl start elasticsearch.service\n")),(0,r.kt)("p",null,"If you have trouble we jna while starting Elasticsearch, it may come from the fact that your ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp")," is mounted with ",(0,r.kt)("strong",{parentName:"p"},"noexec")," option. In that case, you have to do the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("strong",{parentName:"li"},"/etc/sysconfig/elasticsearch"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'ES_JAVA_OPTS="-Djna.tmpdir=/opt/elasticsearch-jnatmp"\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create ",(0,r.kt)("strong",{parentName:"li"},"/opt/elasticsearch-jnatmp"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mkdir /opt/elasticsearch-jnatmp\nchown elasticsearch:elasticsearc /opt/elasticsearch-jnatmp\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Add a home dir to user elastisearch, in ",(0,r.kt)("strong",{parentName:"li"},"/etc/passwd"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"elasticsearch:x:995:154:elasticsearch user:/home/elasticsearch:/sbin/nologin\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Create elasticsearch home dir ",(0,r.kt)("strong",{parentName:"li"},"/home/elasticsearch"),", as root:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd /home\nmkdir elasticsearch\nchown elasticsearch:elasticsearch elasticsearch/\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("strong",{parentName:"li"},"/etc/systemd/system/elasticsearch.service.d/override.conf"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[Service]\nLimitMEMLOCK=infinity\n")),(0,r.kt)("h2",{id:"kibana"},"Kibana"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"This COTS is non-mandatory but higly recommended for administrators of REGARDS system.")),(0,r.kt)("p",null,"Installation of ",(0,r.kt)("a",{parentName:"p",href:"https://www.elastic.co/fr/downloads"},"Kibana")," 5.X.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Notice :")," Do not use a further version like 6.X."),(0,r.kt)("p",null,"This web server allows you to manage the content of your elasticsearch indexes."),(0,r.kt)("h2",{id:"reverse-proxy"},"Reverse proxy"),(0,r.kt)("p",null,"Install ",(0,r.kt)("a",{parentName:"p",href:"https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/"},"NGinx")," (1.15+) or ",(0,r.kt)("a",{parentName:"p",href:"http://httpd.apache.org/docs/current/fr/install.html"},"httpd")," (2.X+) as a reverse proxy, it handles on a single port (80 or 443) all trafic for the REGARDS."),(0,r.kt)("h3",{id:"httpd"},"httpd"),(0,r.kt)("p",null,"For httpd, edit the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/httpd/conf/httpd.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<IfModule mod_proxy.c>\n        <Proxy *>\n          Order deny,allow\n          Deny from all\n        </Proxy>\n        ProxyRequests Off\n        ProxyPreserveHost Off\n</IfModule>\n")),(0,r.kt)("p",null,"Then create the configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat > /etc/httpd/conf.d/httpd-proxy.conf <<FIN_CAT\nProxyVia On\n<IfModule mod_proxy.c>\n    <VirtualHost *:80>\n        ProxyPass "/kibana/"       "http://localhost:5601/"                connectiontimeout=5 timeout=30\n        ProxyPass "/api/v1/"       "http://localhost:9030/api/v1/"         connectiontimeout=5 timeout=30\n        ProxyPass "/zuul/api/v1/"  "http://localhost:9030/zuul/api/v1/"    connectiontimeout=5 timeout=30\n        ProxyPass "/"              "http://localhost:3333/"                connectiontimeout=5 timeout=30\n        ProxyPreserveHost Off\n    </VirtualHost>\n</IfModule>\n\n<Directory />\n    Options None\n    Order deny,allow\n    deny from all\n    <LimitExcept GET HEAD POST DELETE PUT>\n        order deny,allow\n        deny from all\n    </LimitExcept>\n</Directory>\n\n<Location "/" >\n    Order deny,allow\n    <LimitExcept GET HEAD POST DELETE PUT>\n        order deny,allow\n        deny from all\n    </LimitExcept>\n</Location>\nFIN_CAT\n')),(0,r.kt)("p",null,"For Red Hat OS, you need to start it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start httpd.service\n")),(0,r.kt)("p",null,"If you are using a ",(0,r.kt)("inlineCode",{parentName:"p"},"Red Hat OS")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"selinux"),", you will need to autorize httpd to connect to the network, even a local one. If the following property is off :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ getsebool -a | grep httpd_can_network_connect\nhttpd_can_network_connect --\x3e off\n")),(0,r.kt)("p",null,"You need to execute the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/sbin/setsebool -P httpd_can_network_connect 1\n")),(0,r.kt)("h3",{id:"nginx"},"NGinx"),(0,r.kt)("p",null,"For NGinx :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"worker_processes auto;\n\nuser root root;\npid /run/nginx.pid;\n\nevents {\n    worker_connections 4096;\n    use                epoll;\n    multi_accept       on;\n}\n\nhttp {\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include      /etc/nginx/mime.types;\n    default_type application/octet-stream;\n\n    access_log /var/log/nginx/access.log combined;\n    error_log /var/log/nginx/error.log error;\n\n    gzip         on;\n    gzip_disable \"msie6\";\n\n    client_max_body_size 100M;\n\n    upstream gateway {\n        server rs-gateway:9030;\n    }\n\n    server {\n        listen 80 default_server;\n\n        location /api/v1/ {\n           proxy_set_header X-Forwarded-Host $host:$server_port;\n           proxy_pass http://gateway/api/v1/;\n        }\n\n        location /zuul/api/v1/ {\n           proxy_set_header X-Forwarded-Host $host:$server_port;\n           proxy_pass http://gateway/zuul/api/v1/;\n        }\n\n        location / {\n            root /var/www;\n            # Always serve index.html for any request\n            try_files $uri /index.html;\n            # kill cache\n            add_header Last-Modified $date_gmt;\n            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';\n            if_modified_since off;\n            expires off;\n            etag off;\n        }\n    }\n}\n")),(0,r.kt)("h2",{id:"security-and-firewall"},"Security and firewall"),(0,r.kt)("p",null,"If you use iptable as a firewall, we strongly recommand you to deny everything except what is required."),(0,r.kt)("h3",{id:"installation-on-a-single-server"},"Installation on a single server"),(0,r.kt)("p",null,"You need to open httpd or nginx port in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/sysconfig/iptables"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT\n")),(0,r.kt)("h3",{id:"install-on-several-servers"},"Install on several servers"),(0,r.kt)("p",null,"Here is a list of all flux needed by each microservice:"),(0,r.kt)("table",{class:"table table-striped"},(0,r.kt)("tr",null,(0,r.kt)("th",{rowspan:"2"},"Protocol"),(0,r.kt)("th",{colspan:"1",scope:"colgroup"},"Source"),(0,r.kt)("th",{colspan:"2",scope:"colgroup"},"Target"),(0,r.kt)("th",{rowspan:"2"},"Flux description")),(0,r.kt)("tr",null,(0,r.kt)("th",{scope:"col"},"Component"),(0,r.kt)("th",{scope:"col"},"Component"),(0,r.kt)("th",{scope:"col"},"Port")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-instance"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-instance"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-instance"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management(exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management(exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"Elasticsearch"),(0,r.kt)("td",null,"9200"),(0,r.kt)("td",null,"Access to indexed data")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management (exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"9044"),(0,r.kt)("td",null,"Sends SIP")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management(exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"9042"),(0,r.kt)("td",null,"Sends AIP")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management (exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"9036"),(0,r.kt)("td",null,"Plugin CatalogSecurityDelegation")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management(exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management (exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management (exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"9035"),(0,r.kt)("td",null,"Acc\xe8s aux informations sur les mod\xe8les")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"Elasticsearch"),(0,r.kt)("td",null,"9200"),(0,r.kt)("td",null,"Access to indexed data")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management (exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-access-instance"),(0,r.kt)("td",null,"9040"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-access-project"),(0,r.kt)("td",null,"9041"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-authentication"),(0,r.kt)("td",null,"9034"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"9036"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"9035"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-dataprovider"),(0,r.kt)("td",null,"9045"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-ingest"),(0,r.kt)("td",null,"9044"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"9043"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"9042"),(0,r.kt)("td",null,"Request routing")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"rs-admin-instance"),(0,r.kt)("td",null,"9037"),(0,r.kt)("td",null,"Access to instance information (tenant/Account)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"rs-admin-project"),(0,r.kt)("td",null,"9033"),(0,r.kt)("td",null,"Access to project information (User/Role/Notification)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"rs-catalog"),(0,r.kt)("td",null,"9036"),(0,r.kt)("td",null,"Access to indexed data")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"rs-config"),(0,r.kt)("td",null,"9031"),(0,r.kt)("td",null,"Get configuration")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"rs-dam"),(0,r.kt)("td",null,"9035"),(0,r.kt)("td",null,"Acc\xe8s aux informations sur les mod\xe8les")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"rs-registry"),(0,r.kt)("td",null,"9032"),(0,r.kt)("td",null,"Microservice registering")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"rs-storage"),(0,r.kt)("td",null,"9042"),(0,r.kt)("td",null,"Sends AIP")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"15672"),(0,r.kt)("td",null,"AMQP management (exchanges, queues, bindings, vhosts)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"RabbitMQ"),(0,r.kt)("td",null,"5672"),(0,r.kt)("td",null,"sending/receiving AMQP messages")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"rs-order"),(0,r.kt)("td",null,"PostgreSQL"),(0,r.kt)("td",null,"5432"),(0,r.kt)("td",null,"DB access")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"httpd"),(0,r.kt)("td",null,"rs-gateway"),(0,r.kt)("td",null,"9030"),(0,r.kt)("td",null,"Access to backend")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"tcp"),(0,r.kt)("td",null,"httpd"),(0,r.kt)("td",null,"rs-front"),(0,r.kt)("td",null,"9029"),(0,r.kt)("td",null,"Access to frontend"))),(0,r.kt)("p",null,"You can use this ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/RegardsOss/regards-deployment/tree/master/security/iptable-generator"},"utility")," developped to ease your security configuration. You just need to provide two CSV configuration files (using ",(0,r.kt)("inlineCode",{parentName:"p"},";")," as separator):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the above table, ",(0,r.kt)("inlineCode",{parentName:"li"},"Flow.csv")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CompoIp.csv"),", a file describing which component is deployed on which machine (IP)")),(0,r.kt)("p",null,"Then you just need to compile the utility (",(0,r.kt)("inlineCode",{parentName:"p"},"mvn clean install -Dmaven.test.skip=true"),") and run the following command: ",(0,r.kt)("inlineCode",{parentName:"p"},"java -DcompoIpCsv=CompoIp.csv -DflowMatrix=Flow.csv -jar iptable-generator-1.0-SNAPSHOT-jar-with-dependencies.jar"),". This will give a file with iptables correctly configured for each machine."),(0,r.kt)("p",null,"Here is an example of ",(0,r.kt)("em",{parentName:"p"},"CompoIp.csv"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"composant;ip\nrs-config;192.168.0.1\nrs-registry;192.168.0.2\nrs-access-instance;192.168.0.1\nrs-access-project;192.168.0.2\nrs-admin-instance;192.168.0.1\nrs-admin-project;192.168.0.1\nrs-authentication;192.168.0.2\nrs-catalog;192.168.0.2\nrs-config;192.168.0.1\nrs-dam;192.168.0.1\nrs-dataprovider;192.168.0.1\nrs-frontend;192.168.0.2\nrs-gateway;192.168.0.2\nrs-ingest;192.168.0.1\nrs-order;192.168.0.2\nrs-registry;192.168.0.2\nrs-storage;192.168.0.1\nElasticsearch;192.168.0.3\nRabbitMQ;192.168.0.3\nPostgreSQL;192.168.0.3\nhttpd;192.168.0.4\n")),(0,r.kt)("p",null,"With this example you'll obtain 4 files:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REGARDS_iptables_192.168.0.1.txt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REGARDS_iptables_192.168.0.2.txt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REGARDS_iptables_192.168.0.3.txt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REGARDS_iptables_192.168.0.4.txt"))),(0,r.kt)("p",null,"Here is an example of the obtained file ",(0,r.kt)("inlineCode",{parentName:"p"},"REGARDS_iptables_192.168.0.1.txt")," :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# Rules for component rs-dataprovider\n-A INPUT -p tcp -s 192.168.0.1 --dport 9045 -j ACCEPT\n# Rules for component rs-ingest\n-A INPUT -p tcp -s 192.168.0.2 --dport 9044 -j ACCEPT\n-A INPUT -p tcp -s 192.168.0.1 --dport 9044 -j ACCEPT\n# Rules for component rs-config\n-A INPUT -p tcp -s 192.168.0.2 --dport 9031 -j ACCEPT\n-A INPUT -p tcp -s 192.168.0.1 --dport 9031 -j ACCEPT\n# Rules for component rs-dam\n-A INPUT -p tcp -s 192.168.0.1 --dport 9035 -j ACCEPT\n# Rules for component rs-admin-project\n-A INPUT -p tcp -s 192.168.0.1 --dport 9033 -j ACCEPT\n-A INPUT -p tcp -s 192.168.0.2 --dport 9033 -j ACCEPT\n# Rules for component rs-storage\n-A INPUT -p tcp -s 192.168.0.1 --dport 9042 -j ACCEPT\n-A INPUT -p tcp -s 192.168.0.2 --dport 9042 -j ACCEPT\n# Rules for component rs-access-instance\n-A INPUT -p tcp -s 192.168.0.1 --dport 9040 -j ACCEPT\n# Rules for component rs-admin-instance\n-A INPUT -p tcp -s 192.168.0.1 --dport 9037 -j ACCEPT\n-A INPUT -p tcp -s 192.168.0.2 --dport 9037 -j ACCEPT\n")),(0,r.kt)("h2",{id:"systemctl"},"Systemctl"),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"If you want to interface REGARDS and systemctl, you will need to define the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/regards.service")," with the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Copyright 2017-2019 CNES - CENTRE NATIONAL d'ETUDES SPATIALES\n#\n# This file is part of REGARDS.\n#\n# REGARDS is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# REGARDS is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with REGARDS. If not, see <http://www.gnu.org/licenses/>.\n\n[Unit]\nDescription=REGARDS all installed service\nAfter=\nBefore=\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n\nExecStart=/opt/regards/REGARDS/sbin/microservice_regards.sh start\nExecStop=/opt/regards/REGARDS/sbin/microservice_regards.sh stop\n\n# Give a reasonable amount of time for the server to start up/shut down\nTimeoutSec=300\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"If you want to define a more specific behavior on one microservice, you can create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/regards-<microservice_type>.service"),", with ",(0,r.kt)("inlineCode",{parentName:"p"},"<microservice_type>")," being one of the REGARDS component (config,registry,gateway,admin-instanc,admin,authenticatio,storag,inges,da,catalo,orde,dataprovide,access-instanc,access-project,frontend)"),(0,r.kt)("p",null,"Here is an ",(0,r.kt)("inlineCode",{parentName:"p"},"regards-order.service")," example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Copyright 2017-2019 CNES - CENTRE NATIONAL d'ETUDES SPATIALES\n#\n# This file is part of REGARDS.\n#\n# REGARDS is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# REGARDS is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with REGARDS. If not, see <http://www.gnu.org/licenses/>.\n\n[Unit]\nDescription=REGARDS all installed service\nAfter=\nBefore=\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n\nExecStart=/opt/regards/REGARDS/sbin/microservice_regards.sh -t order start\nExecStop=/opt/regards/REGARDS/sbin/microservice_regards.sh -t order stop\n\n# Give a reasonable amount of time for the server to start up/shut down\nTimeoutSec=300\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"Now the installation is over, you can controll all yours microservices threw Systemctl :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"systemctl <start|stop> regards.service"),", to start/stop all microservices installed on the machine"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"systemctl restart regards-<microservice_type>.service"),", to restart one of the microservice\n-...")),(0,r.kt)("h3",{id:"auto-restart-services-on-boot"},"Auto restart services on boot"),(0,r.kt)("p",null,"Don't forget to restart services on (re)boot:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable httpd.service\nsystemctl enable elasticsearch.service\nsystemctl enable rabbitmq-server.service\nsystemctl enable postgresql-9.6.service\nsystemctl enable regards.service\n")))}p.isMDXComponent=!0}}]);