"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[61473],{15247:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});var i=n(74848),s=n(28453);const c={id:"backend-framework-dev-microservice",title:"Develop a new microservice",sidebar_label:"How to create a microservice",sidebar_position:4,slug:"/development/backend/framework/dev-microservice/"},o=void 0,t={id:"development/framework/backend-framework-dev-microservice",title:"Develop a new microservice",description:"REGARDS Microservices are REST services exposed by a Jetty web server contained in a Spring boot application and composed of modules. Each microservice is a Maven project aggregating Maven modules. There is two modules by default: one responsible for running the microservice and one responsible for business. In case a microservice needs to be composed by more than one business module, a module archetype is available.",source:"@site/docs/development/framework/dev-microservice.md",sourceDirName:"development/framework",slug:"/development/backend/framework/dev-microservice/",permalink:"/docs/next/development/backend/framework/dev-microservice/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/framework/dev-microservice.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"backend-framework-dev-microservice",title:"Develop a new microservice",sidebar_label:"How to create a microservice",sidebar_position:4,slug:"/development/backend/framework/dev-microservice/"},sidebar:"dev",previous:{title:"Swagger starter",permalink:"/docs/next/development/backend/framework/starters/swagger/"},next:{title:"How to create a plugin",permalink:"/docs/next/development/backend/framework/dev-plugin/"}},a={},l=[{value:"Requirements for development",id:"requirements-for-development",level:2},{value:"Common features",id:"common-features",level:2},{value:"Create your first microservice",id:"create-your-first-microservice",level:2},{value:"Create your first module",id:"create-your-first-module",level:2},{value:"Configure microservice to run locally with a remote REGARDS server instance",id:"configure-microservice-to-run-locally-with-a-remote-regards-server-instance",level:2},{value:"Test the microservice",id:"test-the-microservice",level:2},{value:"Centralize your new microservice configuration",id:"centralize-your-new-microservice-configuration",level:2},{value:"References",id:"references",level:2}];function d(e){const r={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.p,{children:"REGARDS Microservices are REST services exposed by a Jetty web server contained in a Spring boot application and composed of modules. Each microservice is a Maven project aggregating Maven modules. There is two modules by default: one responsible for running the microservice and one responsible for business. In case a microservice needs to be composed by more than one business module, a module archetype is available."}),"\n",(0,i.jsx)(r.h2,{id:"requirements-for-development",children:"Requirements for development"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Git client"}),"\n",(0,i.jsx)(r.li,{children:"Maven v3.8.4+"}),"\n",(0,i.jsx)(r.li,{children:"JDK Eclipse Temurin v17.0.3+"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"common-features",children:"Common features"}),"\n",(0,i.jsx)(r.p,{children:"Each microservice offers the features :"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"REST Resources authorization access by user ROLES"}),"\n",(0,i.jsx)(r.li,{children:"Access to the Cloud Eureka Registry client to communicate with others microservices"}),"\n",(0,i.jsx)(r.li,{children:"Access to the Cloud Config Server to centralize configurations properties"}),"\n",(0,i.jsxs)(r.li,{children:["Swagger Interface : ",(0,i.jsx)(r.code,{children:"http://address:port/swagger-ui.html"})]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"create-your-first-microservice",children:"Create your first microservice"}),"\n",(0,i.jsx)(r.p,{children:"To create a new microservice you have to create a new maven project with the microservice-archetype. To do so :"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Clone the git regards-backend repository"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"git clone https://github.com/RegardsOss/regards-backend.git\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Compile and install the maven project"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"cd regards-backend\nmvn clean install -DskipTests\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Generate the new microservice in another folder than regards-backend thanks to the maven project archetype:"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"mkdir ../myMicroservice\ncd ../myMicroservice\nmvn archetype:generate -DarchetypeCatalog=local\n"})}),"\n",(0,i.jsx)(r.p,{children:"You have many archetype proposed to you, under the format"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-txt",children:"number: [local|remote] -> archetype_group_id:archetype_artifact_id (archetype_description)\n"})}),"\n",(0,i.jsx)(r.p,{children:"find the line"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-txt",children:"X: local -> fr.cnes.regards.microservices:microservice-archetype (microservice-archetype)\n"})}),"\n",(0,i.jsxs)(r.p,{children:["and enter ",(0,i.jsx)(r.code,{children:"X"})]}),"\n",(0,i.jsx)(r.p,{children:"where X is the actual number of the microservice creation archetype. Then enter the requested fields as follow :"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"groupId"})," : fr.cnes.regards.microservices.mymicroservice"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"artifactId"})," : mymicroservice"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"version"})," : press enter to apply default value"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"package"})," : press enter to apply default value"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"microserviceDescription"})," : My microservice description"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"microserviceName"})," : mymicroservice"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"microserviceTitle"})," : My Microservice"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"create-your-first-module",children:"Create your first module"}),"\n",(0,i.jsx)(r.p,{children:"Once you have created the microservice container, you have to create modules."}),"\n",(0,i.jsx)(r.p,{children:"To add a new module to your microservice you have to add a new maven module with the module-archetype. To do so :"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Inside the microservice root folder, execute the following command to generate a module"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"  cd myMicroservice\n  mvn archetype:generate -DarchetypeCatalog=local\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Choose the right archetype (",(0,i.jsx)(r.code,{children:"fr.cnes.regards.modules:module-archetype"}),") and enter requested field as follow :"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"groupId"})," : fr.cnes.regards.modules"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"artifactId"})," : my-module"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"version"})," : press enter to apply default value"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"package"})," : press enter to apply default value"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Add the following dependency to ",(0,i.jsx)(r.code,{children:"bootstrap-myMicroservice/pom.xml"})," file (for instance, with the module artifact id ",(0,i.jsx)(r.code,{children:"myModule"}),") :"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-xml",children:"<dependency>\n  <groupId>fr.cnes.regards.modules</groupId>\n  <artifactId>my-module-rest</artifactId>\n  <version>1.0-SNAPSHOT</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(r.h2,{id:"configure-microservice-to-run-locally-with-a-remote-regards-server-instance",children:"Configure microservice to run locally with a remote REGARDS server instance"}),"\n",(0,i.jsx)(r.p,{children:"In order to help developers test their microservice, local configuration files are available when you generate a microservice through the maven archetype. Those files are :"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"src/main/resources/application-local-properties"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"src/main/resources/bootstrap-local-properties"}),"."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Fill those configuration files with the missing informations."}),"\n",(0,i.jsx)(r.h2,{id:"test-the-microservice",children:"Test the microservice"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"To compile the new microservice :"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"cd myMicroService\nmvn clean install\n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"To run the new microservice :"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"cd myMicroService/bootstrap-myMicroservice\nmvn spring-boot:run -Dspring.profiles.active=local\n16:07:14.417 [main            ]    INFO o.s.b.c.e.j.JettyEmbeddedServletContainer - Jetty started on port(s) 8999 (http/1.1)\n16:07:14.421 [main            ]    INFO o.s.c.n.e.EurekaDiscoveryClientConfiguration - Updating port to 8999\n16:07:14.429 [main            ]    INFO f.c.r.microservices.Application - Started Application in 16.691 seconds (JVM running for 23.349)\n\n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"To authenticate :"})}),"\n",(0,i.jsx)(r.p,{children:"To get an authentication token, the following POST request should be send to the authentication microservice :"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -X POST 'http://host:port/oauth/token?grant_type=password&username=regards-admin@c-s.fr&password=root_admin&scope=project1' \\\n-H 'accept: application/json' \\\n-H 'Cache-Control: no-cache' \\\n-H 'authorization: Basic Y2xpZW50OnNlY3JldA=='\n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"API exemple access :"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:'curl http://localhost:8999/api/greeting/ -H "Authorization: Bearer <user_acces_token>"\ncurl http://localhost:8999/api/me/ -H "Authorization: Bearer <admin_acces_token>"\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Swagger UI access :"})," ",(0,i.jsx)(r.code,{children:"http://localhost:8999/swagger-ui.html"})]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"NOTE"})," : To add new REST resource follow example on file"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"myModule/myModule-rest/src/main/java/fr/cnes/regards/modules/myModule/GreetingsController.java"})}),"\n",(0,i.jsx)(r.h2,{id:"centralize-your-new-microservice-configuration",children:"Centralize your new microservice configuration"}),"\n",(0,i.jsx)(r.p,{children:"To centralize the configuration of your microservice, you can copy your application-local.properties file to the rs-config microservice installation directory :"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"cp myMicroservice/bootstrap-myMycroservice/src/main/resources/application-local.properties rs-config/config/regards/myMicroservice.properties\n"})}),"\n",(0,i.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(r.p,{children:["You can also find a tutorial documentation on how to build REGARDS plugins and microservices ",(0,i.jsx)(r.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(34753).A+"",children:"here"})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},34753:(e,r,n)=>{n.d(r,{A:()=>i});const i=n.p+"assets/files/regards-backend-tutorial-67ece5d5bea022c4ddc0721f69bd6016.odp"},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>t});var i=n(96540);const s={},c=i.createContext(s);function o(e){const r=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(c.Provider,{value:r},e.children)}}}]);