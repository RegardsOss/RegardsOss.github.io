"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[96770],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=d(n),m=a,y=l["".concat(c,".").concat(m)]||l[m]||p[m]||o;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},91607:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const o={id:"advanced-introduction",title:"Introduction",slug:"/setup/swarm/advanced/introduction"},i=void 0,s={unversionedId:"setup/advanced/advanced-introduction",id:"version-1.12.0/setup/advanced/advanced-introduction",title:"Introduction",description:"There is a lot of available configurations that you can customize directly from your inventory, as there are many ways to deploy a REGARDS instance on your servers.",source:"@site/versioned_docs/version-1.12.0/setup/advanced/swarm-advanced-introduction.md",sourceDirName:"setup/advanced",slug:"/setup/swarm/advanced/introduction",permalink:"/docs/1.12.0/setup/swarm/advanced/introduction",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.12.0/setup/advanced/swarm-advanced-introduction.md",tags:[],version:"1.12.0",frontMatter:{id:"advanced-introduction",title:"Introduction",slug:"/setup/swarm/advanced/introduction"},sidebar:"install",previous:{title:"Quick setup",permalink:"/docs/1.12.0/setup/"},next:{title:"Deploy required microservices",permalink:"/docs/1.12.0/setup/swarm/advanced/microservice-setup"}},c={},d=[{value:"Guides",id:"guides",level:3},{value:"Run changes after inventory modification",id:"run-changes-after-inventory-modification",level:3}],u={toc:d},l="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There is a lot of available configurations that you can customize directly from your inventory, as there are many ways to deploy a REGARDS instance on your servers."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"We assume you have successfully deployed REGARDS using the ",(0,a.kt)("a",{parentName:"p",href:"/docs/setup/"},"Quick setup"))),(0,a.kt)("h3",{id:"guides"},"Guides"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/setup/swarm/advanced/microservice-setup"},"Deploy required microservices")," introduces you the REGARDS microservices and the way to enable them depending on your needs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/setup/swarm/advanced/postgres-database/"},"Postgres Database")," shows you how to connect microservices to external databases. ",(0,a.kt)("strong",{parentName:"li"},"Highly recommended")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/setup/swarm/advanced/optimizations/"},"Microservices optimizations")," provides you all the possible inventory configurations to optimize microservices."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/setup/swarm/advanced/ansible-vault/"},"Ansible Vault")," allows you to crypt passwords inside your inventory and commit them on Git safely. ",(0,a.kt)("strong",{parentName:"li"},"Highly recommended")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/setup/swarm/advanced/swarm-mount"},"Mount volumes, configs...")," allows you to describe volumes, configs and secrets files containers have access to. ",(0,a.kt)("strong",{parentName:"li"},"Highly recommended")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/setup/swarm/advanced/swarm-networks"},"Network tuning")," allows you to understand and properly configure network properties."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/setup/swarm/advanced/regards-https"},"Securise using HTTPS")," allows you to expose the REGARDS API and HMI through HTTPS. ",(0,a.kt)("strong",{parentName:"li"},"Highly recommended"))),(0,a.kt)("h3",{id:"run-changes-after-inventory-modification"},"Run changes after inventory modification"),(0,a.kt)("p",null,"Once you have edited your inventory, you must execute the following command to update the stack:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# cd regards-docker-master/\nansible-playbook -i inventories/<inventory name> regards.yml <additional parameters>\n")),(0,a.kt)("p",null,"Whatever modifications you have done, this is the only command you need to know!"))}p.isMDXComponent=!0}}]);