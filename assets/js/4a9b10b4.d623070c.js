"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[56494],{7944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(74848),s=t(28453);const o={title:"How it works",sidebar_label:"How it works",slug:"/development/services/admin-instance/conception/",sidebar_position:2},a=void 0,r={id:"development/services/admin-instance/conception",title:"How it works",description:"Introduction",source:"@site/docs/development/services/admin-instance/conception.md",sourceDirName:"development/services/admin-instance",slug:"/development/services/admin-instance/conception/",permalink:"/docs/development/services/admin-instance/conception/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/admin-instance/conception.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"How it works",sidebar_label:"How it works",slug:"/development/services/admin-instance/conception/",sidebar_position:2},sidebar:"dev",previous:{title:"Overview",permalink:"/docs/development/services/admin-instance/overview"},next:{title:"All endpoints (OpenAPI)",permalink:"/docs/development/backend/services/admin-instance/api-guides/rest/api-swagger"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Module : accessrights-instance",id:"module--accessrights-instance",level:2},{value:"Module : emails-instance",id:"module--emails-instance",level:2},{value:"Module : notification-instance",id:"module--notification-instance",level:2},{value:"Module : project-instance",id:"module--project-instance",level:2}];function l(e){const n={admonition:"admonition",br:"br",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["The microservice ",(0,i.jsx)(n.code,{children:"rs-admin-instance"})," groups together a set of functionalities divided into different modules,\nspecifically used in the Regards instance and attached to the instance database."]}),"\n",(0,i.jsx)(n.h2,{id:"module--accessrights-instance",children:"Module : accessrights-instance"}),"\n",(0,i.jsxs)(n.p,{children:["This module aims to handle access rights for users of Regards. It specifically manages user accounts. One same account\ncan have different project users for each project, so one account can be linked to several projects.",(0,i.jsx)(n.br,{}),"\n","Accounts are transverse to all projects and so are persisted in an instance database."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"To delete a user account, no project user associated with this account must still be associated with a project."})}),"\n",(0,i.jsx)(n.h2,{id:"module--emails-instance",children:"Module : emails-instance"}),"\n",(0,i.jsx)(n.p,{children:"This module centralises the process of sending emails asynchronously to the SMTP server from the Regards application.\nThis module can be used by other Regards microservices via an HTTP client."}),"\n",(0,i.jsx)(n.p,{children:"Initially, the client microservice sends a request to send an email including data such as the\nfrom, to, cc, subject, and text fields. This request is stored in the database and a scheduler processes these requests\nover time in order to email the recipient."}),"\n",(0,i.jsx)(n.p,{children:"If the sending of an asynchronous email fails, it will be repeated with 9 attempts. The time between\nthe attempts is configurable. By default, attempts are made quickly at the beginning, then spaced out more and more.\nA notification will be created to inform the Regards administrator of any errors encountered when sending\nmails. Requests will be deleted from the database when more than 9 attempts are made."}),"\n",(0,i.jsx)(n.h2,{id:"module--notification-instance",children:"Module : notification-instance"}),"\n",(0,i.jsx)(n.p,{children:"This module contains the functionalities linked to UI notifications for the portal of Regards :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"creation of notifications"}),"\n",(0,i.jsx)(n.li,{children:"search for notifications based on search criteria"}),"\n",(0,i.jsx)(n.li,{children:"deleting one or more notifications based on search criteria"}),"\n",(0,i.jsx)(n.li,{children:"update notifications to indicate which have already been read by the user."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This module works in the same way as the notification module in the microservice ",(0,i.jsx)(n.code,{children:"rs-admin-project"}),". However, in\nthe ",(0,i.jsx)(n.code,{children:"rs-admin-instance"})," microservice, all notifications and notification configurations are saved in the Regards\ninstance database."]}),"\n",(0,i.jsx)(n.h2,{id:"module--project-instance",children:"Module : project-instance"}),"\n",(0,i.jsxs)(n.p,{children:["This module is used to manage the functionalities linked to the various tenants/projects created in Regards with their\nconnection to the database.\nEach project/tenant is made up of a list of microservices based on the requirements of the missions to be carried out.\nThese microservices each use a database (one database per microservice) or a database schema (one database with one\nschema per microservice) to store the information required for its operation.",(0,i.jsx)(n.br,{}),"\n","Consequently, this module manages the technical information (driver, username, password, url, etc.) relating to the\nconnection\nto the databases."]}),"\n",(0,i.jsx)(n.p,{children:"At start-up, an initial project is already present in the Regards application."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Before creating a new project, you must first create the corresponding new database in the\nRegards PostgreSQL database."})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);