"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[27611],{66166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var a=n(74848),r=n(28453);const s={id:"backend-framework-starters-jpa-multitenant",title:"JPA multitenant starter",slug:"/development/backend/framework/starters/jpa-multitenant/"},o="1. Configuration",d={id:"development/backend/framework/starters/backend-framework-starters-jpa-multitenant",title:"JPA multitenant starter",description:"Add starter dependency to your POM (version depends on the REGARDS BOM)",source:"@site/versioned_docs/version-1.15/development/backend/framework/starters/jpa-multitenant-starter.md",sourceDirName:"development/backend/framework/starters",slug:"/development/backend/framework/starters/jpa-multitenant/",permalink:"/docs/1.15/development/backend/framework/starters/jpa-multitenant/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.15/development/backend/framework/starters/jpa-multitenant-starter.md",tags:[],version:"1.15",frontMatter:{id:"backend-framework-starters-jpa-multitenant",title:"JPA multitenant starter",slug:"/development/backend/framework/starters/jpa-multitenant/"},sidebar:"dev",previous:{title:"JPA instance starter",permalink:"/docs/1.15/development/backend/framework/starters/jpa-instance/"},next:{title:"Microservice core starter",permalink:"/docs/1.15/development/backend/framework/starters/microservice-core/"}},i={},c=[{value:"3.1. How to manage repository by tenant",id:"31-how-to-manage-repository-by-tenant",level:2},{value:"3.2. How to avoid transaction manager conflict",id:"32-how-to-avoid-transaction-manager-conflict",level:2},{value:"3.3. How to test datasource",id:"33-how-to-test-datasource",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"1-configuration",children:"1. Configuration"})}),"\n",(0,a.jsx)(t.p,{children:"Add starter dependency to your POM (version depends on the REGARDS BOM)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",children:"<dependency>\n  <groupId>fr.cnes.regards.framework</groupId>\n  <artifactId>jpa-multitenant-starter</artifactId>\n</dependency>\n"})}),"\n",(0,a.jsx)(t.p,{children:"Dependency :"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/docs/1.15/development/backend/framework/starters/multitenant/",children:"Multitenant starter"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/docs/1.15/development/backend/framework/starters/amqp/",children:"AMQP starter"})}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-properties",children:"regards.jpa.multitenant.enabled=true # Disable JPA multitenant support\nregards.jpa.multitenant.embedded=false # Activate embedded mode with HSQLDB\nregards.jpa.multitenant.embeddedPath= # Path for embedded databases files if enabled\nregards.jpa.multitenant.dialect=org.hibernate.dialect.PostgreSQLDialect # Not mandatory if embedded mode is activated\nregards.jpa.multitenant.tenants[<x>].tenant=\nregards.jpa.multitenant.tenants[<x>].url= # Not mandatory if embedded mode is activated (e.g. jdbc:postgresql://localhost:5432/test1)\nregards.jpa.multitenant.tenants[<x>].userName= # Not mandatory if embedded mode is activated\nregards.jpa.multitenant.tenants[<x>].password= # Not mandatory if embedded mode is activated\nregards.jpa.multitenant.tenants[<x>].driverClassName=org.postgresql.Driver # Not mandatory if embedded mode is activated\n\n<x> : Integer value for tenant index starting with 0.\n"})}),"\n",(0,a.jsx)(t.h1,{id:"2-autoconfiguration",children:"2. Autoconfiguration"}),"\n",(0,a.jsx)(t.p,{children:"Starter :"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"manages all tenant connections for the current microservice,"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Following endpoints are supplied to monitor datasources :"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"/regards/{tenant}/datasource/test"})," to test tenant datasource,"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"/regards/{tenant}/datasource/status"})," to check in production datasource status (pooled connections)."]}),"\n"]}),"\n",(0,a.jsx)(t.h1,{id:"3-how-to",children:"3. How to"}),"\n",(0,a.jsx)(t.h2,{id:"31-how-to-manage-repository-by-tenant",children:"3.1. How to manage repository by tenant"}),"\n",(0,a.jsx)(t.p,{children:"JPA repositories have no specifities in your source code. Starter purpose is only to route request to the right datasource."}),"\n",(0,a.jsxs)(t.p,{children:["To do so, multitenant router use ",(0,a.jsx)(t.code,{children:"IRuntimeTenantResolver"})," from ",(0,a.jsx)(t.a,{href:"/docs/1.15/development/backend/framework/starters/multitenant/",children:"Multitenant starter"})," transparently."]}),"\n",(0,a.jsx)(t.h2,{id:"32-how-to-avoid-transaction-manager-conflict",children:"3.2. How to avoid transaction manager conflict"}),"\n",(0,a.jsxs)(t.p,{children:["You can annotated your service or test with the following meta annotation to manage transaction if multiple managers exist else you can use ",(0,a.jsx)(t.code,{children:"RegardsTransactional"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:"@MultitenantTransactional\n"})}),"\n",(0,a.jsx)(t.h2,{id:"33-how-to-test-datasource",children:"3.3. How to test datasource"}),"\n",(0,a.jsx)(t.p,{children:"TODO explain test module"})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var a=n(96540);const r={},s=a.createContext(r);function o(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);