"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[86486],{16301:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>a});var t=s(74848),n=s(28453);const d={title:"Subscribe to responses",sidebar_label:"Subscribe to responses",slug:"/development/services/worker-manager/api-guides/amqp/subscribe-to-responses",sidebar_position:2},i=void 0,o={id:"development/services/worker-manager/api-guides/amqp/amqp-subscribe-responses",title:"Subscribe to responses",description:"Introduction",source:"@site/versioned_docs/version-2.0.0/development/services/worker-manager/api-guides/amqp/amqp-subscribe-responses.md",sourceDirName:"development/services/worker-manager/api-guides/amqp",slug:"/development/services/worker-manager/api-guides/amqp/subscribe-to-responses",permalink:"/docs/development/services/worker-manager/api-guides/amqp/subscribe-to-responses",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-2.0.0/development/services/worker-manager/api-guides/amqp/amqp-subscribe-responses.md",tags:[],version:"2.0.0",sidebarPosition:2,frontMatter:{title:"Subscribe to responses",sidebar_label:"Subscribe to responses",slug:"/development/services/worker-manager/api-guides/amqp/subscribe-to-responses",sidebar_position:2},sidebar:"dev",previous:{title:"Publish a request",permalink:"/docs/development/services/worker-manager/api-guides/amqp/publish-request"},next:{title:"Workers - Send heart beat",permalink:"/docs/development/services/worker-manager/api-guides/amqp/publish-heartbeat"}},c={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Regards AMQP api",id:"regards-amqp-api",level:2},{value:"Exchange",id:"exchange",level:2},{value:"Queue",id:"queue",level:2},{value:"Message format",id:"message-format",level:2},{value:"Properties",id:"properties",level:3},{value:"Headers",id:"headers",level:3},{value:"Body",id:"body",level:3}];function l(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(r.p,{children:["This section describes how to subscribe to submission events responses sent by the ",(0,t.jsx)(r.code,{children:"rs-worker-manager"})," microservice as\ndescribed in the ",(0,t.jsx)(r.a,{href:"/docs/development/services/worker-manager/api-guides/amqp/publish-request",children:"publish guide"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["Requests and responses are linked with a correlation identifier : ",(0,t.jsx)(r.strong,{children:"requestId"})," that is provided in submission\nrequests and added in the service responses."]}),"\n",(0,t.jsx)(r.h2,{id:"regards-amqp-api",children:"Regards AMQP api"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.a,{href:"/docs/development/concepts/amqp-api/",children:"Regards AMQP API concept"})," describes how AMQP interfaces must be handled to\nsubmit events or to subscribe to events."]}),"\n",(0,t.jsx)(r.h2,{id:"exchange",children:"Exchange"}),"\n",(0,t.jsx)(r.p,{children:"Responses from REGARDS are sent to exchange :"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Exchange (type fanout)"}),(0,t.jsx)(r.th,{children:"Virtual host"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"regards.broadcast.fr.cnes.regards.modules.workermanager.amqp.events.out.ResponseEvent"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"regards.multitenant.manager"})})]})})]}),"\n",(0,t.jsx)(r.h2,{id:"queue",children:"Queue"}),"\n",(0,t.jsxs)(r.p,{children:["Every consumer of this\nexchange ",(0,t.jsx)(r.a,{href:"/docs/development/concepts/amqp-api/#subscribe-to-regards-published-events",children:"must create its own queue bound to this exchange"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"message-format",children:"Message format"}),"\n",(0,t.jsx)(r.h3,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Parameter"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"app_id"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Standard RabbitMQ property to track message origin."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"priority"}),(0,t.jsx)(r.td,{children:"Integer"}),(0,t.jsx)(r.td,{children:"Standard RabbitMQ property to sort messages by priority order."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"content_encoding"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Standard RabbitMQ property for the encoding type of the message"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"content_type"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Standard RabbitMQ property for the MIME Type of the sent message"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"delivery_mode"}),(0,t.jsx)(r.td,{children:"Integer"}),(0,t.jsx)(r.td,{children:"Standard RabbitMQ property for the delivery mode (persistent or not)"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"headers",children:"Headers"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Parameter"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.tenant"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Tenant name depends on the REGARDS instance project configuration."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.request.id"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Request identifier."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.request.owner"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Name of the request provider"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.request.session"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Name of the session"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.request.content_type"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Content type of the request (content type accepted by the worker)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.converter"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Converter type for body (GSON or JACKSON)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.type"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Event type"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"regards.worker_id"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Worker type"})]})]})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",metastring:'title="Example of the properties and headers of a request event message"',children:'{\n  "priority": 1,\n  "delivery_mode": 2,\n  "content_encoding": "UTF-8",\n  "content_type": "application/json",\n  "headers": [\n    {\n      "regards.tenant": "tenant"\n      "regards.request.id": "requestId"\n      "regards.request.owner": "owner"\n      "regards.request.session": "session"\n      "regards.request.content_type": "contentType"\n      "regards.converter": "converter"\n      "regards.type": "fr.cnes.regards.modules.workermanager.amqp.events.out.ResponseEvent"\n      "regards.worker_id": "workerType"\n    }\n  }\n'})}),"\n",(0,t.jsx)(r.h3,{id:"body",children:"Body"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'{\n  "state": "...",\n  "messages": [\n    "xxx",\n    "yyy"\n  ],\n  "requestId": "...",\n  "content": "...",\n  "type": "...",\n  "requestOwner": "..."\n}\n'})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Parameter"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"state"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Response status (SKIPPED, GRANTED, DELAYED, INVALID_CONTENT, ERROR, SUCCESS)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"messages"}),(0,t.jsx)(r.td,{children:"List of String"}),(0,t.jsx)(r.td,{children:"Messages provided by the worker"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"requestId"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Request identifier"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"content"}),(0,t.jsx)(r.td,{children:"byte"}),(0,t.jsx)(r.td,{children:"Content provided by the worker"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"type"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"requestOwner"}),(0,t.jsx)(r.td,{children:"String"}),(0,t.jsx)(r.td,{children:"Request owner"})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>o});var t=s(96540);const n={},d=t.createContext(n);function i(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);