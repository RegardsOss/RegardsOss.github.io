"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[21909],{15680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>f});var i=t(96540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=i.createContext({}),s=function(e){var r=i.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=s(e.components);return i.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},g=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),g=n,f=p["".concat(l,".").concat(g)]||p[g]||d[g]||o;return t?i.createElement(f,a(a({ref:r},u),{},{components:t})):i.createElement(f,a({ref:r},u))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,a=new Array(o);a[0]=g;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[p]="string"==typeof e?e:n,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},34701:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var i=t(58168),n=(t(96540),t(15680));const o={id:"backend-notifier-overview",title:"Notifier microservice",sidebar_label:"Overview",slug:"/development/backend/services/notifier/overview/"},a=void 0,c={unversionedId:"development/backend/regards/notifier/backend-notifier-overview",id:"development/backend/regards/notifier/backend-notifier-overview",title:"Notifier microservice",description:"Notifier responsibilities:",source:"@site/docs/development/backend/regards/notifier/notifier.md",sourceDirName:"development/backend/regards/notifier",slug:"/development/backend/services/notifier/overview/",permalink:"/docs/next/development/backend/services/notifier/overview/",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/backend/regards/notifier/notifier.md",tags:[],version:"current",frontMatter:{id:"backend-notifier-overview",title:"Notifier microservice",sidebar_label:"Overview",slug:"/development/backend/services/notifier/overview/"},sidebar:"dev",previous:{title:"REST API",permalink:"/docs/next/development/backend/services/lta-manager/api-swagger"},next:{title:"Architecture",permalink:"/docs/next/development/backend/services/notifier/architecture/"}},l={},s=[{value:"Plugins configuration",id:"plugins-configuration",level:2},{value:"API Guides",id:"api-guides",level:3},{value:"REST API",id:"rest-api",level:3},{value:"Architecture",id:"architecture",level:3}],u={toc:s},p="wrapper";function d(e){let{components:r,...t}=e;return(0,n.yg)(p,(0,i.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"Notifier")," responsibilities:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Receive JSON notification,"),(0,n.yg)("li",{parentName:"ul"},"Dispatch them to various recipients according to matching rules.")),(0,n.yg)("h2",{id:"plugins-configuration"},"Plugins configuration"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/next/development/backend/services/notifier/plugins/intro"},"Notifier plugins overview")," shows you how to configure Notifier. ",(0,n.yg)("strong",{parentName:"li"},"Highly recommended")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/next/development/backend/services/notifier/plugins/rule-matcher"},"Rule matchers guide")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/next/development/backend/services/notifier/plugins/recipient-sender"},"Recipient senders guide"))),(0,n.yg)("h3",{id:"api-guides"},"API Guides"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/next/development/backend/services/notifier/guides/amqp/publish-notifier"},"Publish a notification request")," shows you how to create a ",(0,n.yg)("em",{parentName:"li"},"Notification\nrequest")," and sent it to Notifier")),(0,n.yg)("h3",{id:"rest-api"},"REST API"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"The ",(0,n.yg)("a",{parentName:"li",href:"/docs/next/development/backend/services/notifier/guides/rest/api"},"microservice REST API")," auto generated using OpenAPI."),(0,n.yg)("li",{parentName:"ul"},"The ",(0,n.yg)("a",{parentName:"li",href:"/docs/next/development/backend/notifier/guides/rest/import-plugin-configuration"},"import plugin configuration REST API")," to configure notifier\nplugins.")),(0,n.yg)("h3",{id:"architecture"},"Architecture"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"To learn more about how the microservice is designed"),", refer to the following\ndocumentation ",(0,n.yg)("a",{parentName:"p",href:"/docs/next/development/backend/services/notifier/architecture/"},"notifier architecture"),"."))}d.isMDXComponent=!0}}]);