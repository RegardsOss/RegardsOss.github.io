(window.webpackJsonp=window.webpackJsonp||[]).push([[1770],{1842:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return d})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return o}));var n=a(3),r=a(7),b=(a(0),a(2704)),i={id:"swarm-setup",title:"Advanced setup",slug:"/setup/swarm/advanced-setup/"},d={unversionedId:"setup/swarm-setup",id:"setup/swarm-setup",isDocsHomePage:!1,title:"Advanced setup",description:"Deployment",source:"@site/docs/setup/swarm-advanced-setup.md",slug:"/setup/swarm/advanced-setup/",permalink:"/docs/setup/swarm/advanced-setup/",editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/setup/swarm-advanced-setup.md",version:"current",sidebar:"install",previous:{title:"Ansible tasks",permalink:"/docs/setup/ansible-tasks/"}},l=[{value:"Deployment",id:"deployment",children:[{value:"Introduction",id:"introduction",children:[]},{value:"Users &amp; groups",id:"users--groups",children:[]},{value:"Inventories configuration properties",id:"inventories-configuration-properties",children:[]},{value:"Add RabbitMQ shovel",id:"add-rabbitmq-shovel",children:[]}]}],c={toc:l};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"deployment"},"Deployment"),Object(b.b)("h3",{id:"introduction"},"Introduction"),Object(b.b)("p",null,"This page covers some of the possibilities offered by our inventory, specially the file ",Object(b.b)("inlineCode",{parentName:"p"},"regards-playbook/inventories/regards-cnes/group_vars/all/main.yml"),"."),Object(b.b)("h3",{id:"users--groups"},"Users & groups"),Object(b.b)("p",null,"Let's see how users created by the demo inventory are used:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"User"),Object(b.b)("th",{parentName:"tr",align:"left"},"Group"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"),Object(b.b)("th",{parentName:"tr",align:"left"},"Tips"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"dockermapuid")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"dockermapgid")),Object(b.b)("td",{parentName:"tr",align:"left"},"Used by the docker daemon"),Object(b.b)("td",{parentName:"tr",align:"left"},"This group is internal to the server")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"}),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"gregards_admin")),Object(b.b)("td",{parentName:"tr",align:"left"},"Regroup all users that are allowed to monitor the stack"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative, ",Object(b.b)("inlineCode",{parentName:"td"},"johndoe")," can also replace this one")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"docker-regards-data")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"gregards_data")),Object(b.b)("td",{parentName:"tr",align:"left"},"IPA User/Group owning all files created by REGARDS, ",Object(b.b)("strong",{parentName:"td"},"must be able to access network disk ",Object(b.b)("inlineCode",{parentName:"strong"},"group_workdir_network"))),Object(b.b)("td",{parentName:"tr",align:"left"},"Your user should be inside that group")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"johndoe")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"johndoe"),", ",Object(b.b)("inlineCode",{parentName:"td"},"dockermapgid"),", ",Object(b.b)("inlineCode",{parentName:"td"},"gregards_admin"),", ",Object(b.b)("inlineCode",{parentName:"td"},"gregards_data")),Object(b.b)("td",{parentName:"tr",align:"left"},"Your personnal user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Your user has access to Docker, to the stack and data")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"mariecurie")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"mariecurie"),", ",Object(b.b)("inlineCode",{parentName:"td"},"gregards_data")),Object(b.b)("td",{parentName:"tr",align:"left"},"Some user"),Object(b.b)("td",{parentName:"tr",align:"left"},"She has access to data, not the stack itself")))),Object(b.b)("p",null,"To setup these users and groups, you must follow these requirements:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"User or group"),Object(b.b)("th",{parentName:"tr",align:"left"},"Value requirement"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"dockermapuid")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"name_space_uid"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"dockermapgid")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"name_space_gid"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"johndoe"),",",Object(b.b)("inlineCode",{parentName:"td"},"mariecurie")),Object(b.b)("td",{parentName:"tr",align:"left"},"Any value inferior to ",Object(b.b)("inlineCode",{parentName:"td"},"name_space_uid"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"gregards_admin")),Object(b.b)("td",{parentName:"tr",align:"left"},"Any value inferior to ",Object(b.b)("inlineCode",{parentName:"td"},"name_space_gid"),". That user can be no login.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"docker-regards-data")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_uid + name_space_uid"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"gregards_data")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_gid + name_space_gid"))))),Object(b.b)("h3",{id:"inventories-configuration-properties"},"Inventories configuration properties"),Object(b.b)("p",null,"Global properties :"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Path"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"),Object(b.b)("th",{parentName:"tr",align:"left"},"Constraints"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_workdir_network")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Network disk shared accross every nodes"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_workdir_network_allow_root")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Bool")),Object(b.b)("td",{parentName:"tr",align:"left"},"Do we allow root inside the network volume?"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_workdir_local")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Local folder where regards is installed on every node"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_stack_name")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Unique stack name (for swarm)"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. ",Object(b.b)("inlineCode",{parentName:"td"},"[a-z-]+"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_setype")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"SELinux type"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_seuser")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"SELinux user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_root_user")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"User owning the REGARDS folder tree, Docker must have read/write access"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_root_group")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Group owning the REGARDS folder tree"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_enable_setup_regards_users")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Bool")),Object(b.b)("td",{parentName:"tr",align:"left"},"Do we need to create ",Object(b.b)("inlineCode",{parentName:"td"},"root_group"),", ",Object(b.b)("inlineCode",{parentName:"td"},"run_group")," and ",Object(b.b)("inlineCode",{parentName:"td"},"run_user")," locally ?"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default to true.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_user")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"All files created by containers will use this user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_group")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"All files created by containers will use this group"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_uid")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Run user id. (See ",Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_user"),")"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_gid")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Run group id. (See ",Object(b.b)("inlineCode",{parentName:"td"},"group_container_run_group"),")"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_network_name")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Docker network name. Automatically created by Ansible"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_network_ip_network")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Docker network ip"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. If a basic IPV4 looks like ",Object(b.b)("inlineCode",{parentName:"td"},"A.B.C.D"),", you must provide ",Object(b.b)("inlineCode",{parentName:"td"},"A.B.C."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_registry")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Docker registry holding REGARDS images"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required")))),Object(b.b)("p",null,"Microservices properties :"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Path"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"),Object(b.b)("th",{parentName:"tr",align:"left"},"Constraints"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_tag")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Used to store docker image tag version"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Only used in this file.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_plugins")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array")),Object(b.b)("td",{parentName:"tr",align:"left"},"Used to store docker plugins to execute."),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be empty.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_plugins[].image")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Docker image name of the plugin that stores plugins you want to install on REGARDS"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_plugins[].tag")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Docker image tag"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"List of microservices that will be deployed"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Some of these keys are facultative, but config, registry, gateway, admin_instance, admin & front should not be removed")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.tag")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Docker image tag that will be deployed"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Open the public HTTP port of the service (bypass reverse proxy + gateway)"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.jdwp")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Open a public port to debug a microservice with your IDE"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.<anybackendmicroservice>.jmx")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Open the JMX port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.front")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots the frontend, which is also the reverse proxy to the gateway"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.front.tag")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Docker image tag that will be deployed"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.front.port")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Open the HTTP port of the NGINX to let users access to the front"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.front.protocol")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Protocol used to access to the front"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.front.host")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Host used to access to the front"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")))),Object(b.b)("p",null,"If you don't have mutualised COTS, don't worry. You can deploy yours and use mutualised ones later."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Path"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"),Object(b.b)("th",{parentName:"tr",align:"left"},"Constraints"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"List COTS that will be deployed"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be empty.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots an ElasticSearch"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch.client")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, opens the client port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots an ElasticSearch to store logs"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs.client")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, opens the client port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.kibana")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots a Kibana linked to ",Object(b.b)("inlineCode",{parentName:"td"},"elasticsearch")),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.kibana.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.kibana_logs")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots a Kibana linked to ",Object(b.b)("inlineCode",{parentName:"td"},"elasticsearch_logs")),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.kibana_logs.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.fluent")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots Fluentd"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.maildev")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots a local SMTP server Mailchimp"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.maildev.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, opens the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.postgres")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots Postgres"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.postgres.client")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, open the TCP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.phppgadmin")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots a PGAdmin"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.phppgadmin.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, open the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots a RabbitMQ"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.client")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, open the TCP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, open the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, adds or updates a RabbitMQ user in addition to the REGARDS admin (see ",Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp.user"),")"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users.name")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Username of the RabbitMQ user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users.password")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Password of the RabbitMQ user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_users.tags")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Tags of the RabbitMQ user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be empty, or a comma separated string with one of these values: ",Object(b.b)("inlineCode",{parentName:"td"},"management"),", ",Object(b.b)("inlineCode",{parentName:"td"},"policymaker"),", ",Object(b.b)("inlineCode",{parentName:"td"},"monitoring"),", ",Object(b.b)("inlineCode",{parentName:"td"},"administrator"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, adds a RabbitMQ user permission"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.user")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Username of this RabbitMQ user permission"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.vhost")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"VirtualHost of the RabbitMQ user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be ",Object(b.b)("inlineCode",{parentName:"td"},"/"),", ",Object(b.b)("inlineCode",{parentName:"td"},"regards.multitenant.manager")," or ",Object(b.b)("inlineCode",{parentName:"td"},"regards.instance.manager"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.configure")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Configuration authorisation of the RabbitMQ user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be empty, ",Object(b.b)("inlineCode",{parentName:"td"},".*")," or any other valid value")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.write")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Write authorisation of the RabbitMQ user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be empty, ",Object(b.b)("inlineCode",{parentName:"td"},".*")," or any other valid value")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.user_permissions.read")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Read authorisation of the RabbitMQ user"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be empty, ",Object(b.b)("inlineCode",{parentName:"td"},".*")," or any other valid value")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.rabbitmq.additional_parameters")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array")),Object(b.b)("td",{parentName:"tr",align:"left"},"The ",Object(b.b)("inlineCode",{parentName:"td"},"parameters")," field of the ",Object(b.b)("inlineCode",{parentName:"td"},"definitions.json")," file, used for example to configure shovel"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. ",Object(b.b)("inlineCode",{parentName:"td"},"Download broker definitions")," on your RabbitMQ to see valid format")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.doc")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, boots the REGARDS documentation"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.doc.tag")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Documentation docker image tag that will be deployed"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.doc.http")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"When defined, open the HTTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots_configuration")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"List COTS specific configuration"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required. Can be empty")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.postgres.nbTenant")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Use to deduce the number of connections Postgres should allow"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required when ",Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.postgres")," is defined")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.elasticsearch.cluster_name")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Elasticsearch cluster name"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required when ",Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch")," is defined")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.elasticsearch_logs.cluster_name")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Logging elasticsearch cluster name"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required when ",Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots.elasticsearch_logs")," is defined")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_cots_configuration.use_ungranular_workspace_on_workdir_network")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Bool")),Object(b.b)("td",{parentName:"tr",align:"left"},"When true, it means you don't have rights to elevate (sudo) on group_workdir_network folders"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default to false")))),Object(b.b)("p",null,"The last but not least, the configuration of microservices :"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Path"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"),Object(b.b)("th",{parentName:"tr",align:"left"},"Constraints"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_config_mservices")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"Microservices configuration"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.init_project")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Name of the default project"),Object(b.b)("td",{parentName:"tr",align:"left"},"Required.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.instance_admin")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"Instance admin account definition"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.instance_admin.user")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Name of the instance admin"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"regards-admin@c-s.fr"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.instance_admin.password")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Password of the instance admin"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"root_admin"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.jwt_secret")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"JWT secret"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Recommended for production.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.access_token_validity")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Access token validity period in seconds"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: 1 hour")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.cipher_iv")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Cipher IV"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Recommended for production.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.mail")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"Mail configuration used by microservices"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.host")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"SMTP Host"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"rs-maildev"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.port")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"SMTP port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"1025"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.username")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"SMTP username"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.password")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"SMTP password"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.mail.noreply")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"No reply adress"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"regards@noreply.fr"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"AMQP configuration"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp.user")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"AMQP username"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"guest"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.amqp.password")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"AMQP password"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"guest"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres configuration"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.user")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres instance username"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.password")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres instance password"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.host")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres instance host"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.port")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres instance port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.instance.db")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres instance db"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.user")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres init project username"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.password")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres init project password"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Default: ",Object(b.b)("inlineCode",{parentName:"td"},"azertyuiop123456789"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.host")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres init project host"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.port")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Int")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres init project port"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.postgres.init_project.db")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Postgres init project db"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Object")),Object(b.b)("td",{parentName:"tr",align:"left"},"Proxy configuration"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy.url")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Proxy URL"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative, false, or a valid URL")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy.username")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Proxy username"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"group_docker_mservices.proxy.password")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"String")),Object(b.b)("td",{parentName:"tr",align:"left"},"Proxy password"),Object(b.b)("td",{parentName:"tr",align:"left"},"Facultative. Empty by default")))),Object(b.b)("h3",{id:"add-rabbitmq-shovel"},"Add RabbitMQ shovel"),Object(b.b)("p",null,"Here is an exemple for RabbitMQ shovel, here it receives some products from another system into the FEM (additional_parameters) and allows that system to receive setup another shovel using ",Object(b.b)("inlineCode",{parentName:"p"},"myuser")," (additional_users and user_permissions):  "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre"},"group_docker_cots:\n  [...]\n  rabbitmq:\n    [...]\n    additional_users:\n      - name: myuser\n        password: myuserpw\n        tags: ''\n    user_permissions:\n      - user: chronos\n        vhost: regards.multitenant.manager\n        configure: ''\n        write: ''\n        read: .*\n    additional_parameters:\n      - component: shovel\n        name: Chronos events to Geode\n        vhost: regards.multitenant.manager\n        value:\n          ack-mode: on-confirm\n          dest-add-forward-headers: false\n          dest-protocol: amqp091\n          dest-exchange: regards.broadcast.fr.cnes.regards.modules.featureprovider.domain.FeatureExtractionRequestEvent\n          dest-uri: amqp://guest:guest@localhost/regards.multitenant.manager\n          src-delete-after: never\n          src-protocol: amqp091\n          src-queue: postprocess.external.messages.geode\n          src-uri: amqp://geode:geodepw@chronos.cnes.fr:5672\n")))}o.isMDXComponent=!0},2704:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),o=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},p=function(e){var t=o(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=o(a),O=n,j=p["".concat(i,".").concat(O)]||p[O]||m[O]||b;return a?r.a.createElement(j,d(d({ref:t},c),{},{components:a})):r.a.createElement(j,d({ref:t},c))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,i=new Array(b);i[0]=O;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:n,i[1]=d;for(var c=2;c<b;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);