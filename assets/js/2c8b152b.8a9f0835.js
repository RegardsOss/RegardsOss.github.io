"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[55958],{28760:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=t(74848),o=t(28453);const r={id:"frontend-packages-business-components-microservice-plugin",title:"Microservice plugin configurator",sidebar_label:"Microservice plugin configurator",slug:"/development/frontend/packages/business-components/microservice-plugin-configurator/"},s=void 0,c={id:"development/frontend/components/business/frontend-packages-business-components-microservice-plugin",title:"Microservice plugin configurator",description:"Description",source:"@site/versioned_docs/version-1.13.0/development/frontend/components/business/microservice-plugin-configurator.md",sourceDirName:"development/frontend/components/business",slug:"/development/frontend/packages/business-components/microservice-plugin-configurator/",permalink:"/docs/1.13.0/development/frontend/packages/business-components/microservice-plugin-configurator/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.13.0/development/frontend/components/business/microservice-plugin-configurator.md",tags:[],version:"1.13.0",frontMatter:{id:"frontend-packages-business-components-microservice-plugin",title:"Microservice plugin configurator",sidebar_label:"Microservice plugin configurator",slug:"/development/frontend/packages/business-components/microservice-plugin-configurator/"},sidebar:"dev",previous:{title:"Overview - Business components",permalink:"/docs/1.13.0/development/frontend/packages/business-components/"},next:{title:"Overview - Lazy modules",permalink:"/docs/1.13.0/development/frontend/packages/lazy-modules/"}},a={},l=[{value:"Description",id:"description",level:3},{value:"PluginFormContainer",id:"pluginformcontainer",level:3},{value:"PluginListContainer",id:"pluginlistcontainer",level:3}];function p(e){const n={br:"br",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["This business component is common standard tool to render a configurator form for any plugin of any microservice.",(0,i.jsx)(n.br,{}),"\n","This component uses the standard plugin API of any microservice to retrieve plugins meta informations needed for configuration."]}),"\n",(0,i.jsx)(n.h3,{id:"pluginformcontainer",children:"PluginFormContainer"}),"\n",(0,i.jsx)(n.p,{children:"Component to display a plugin form editor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { PluginFormContainer } from '@regardsoss/microservice-plugin-configurator'\nimport { DataManagementShapes } from '@regardsoss/shape'\n\nexport class ExampleContainer extends React.component {\n\n\tstatic propTypes = {}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<PluginFormContainer\n\t\t\t\tmicroserviceName='rs-catalog' // Microservice of the plugin to configure\n\t\t\t\tpluginId='' // Plugin unique identifier to configure\n\t\t\t\tpluginConfigurationId='' // Only for edition of an existing plugin configuration\n\t\t\t\tformMode='create||edit||copy'\n\t\t\t\tbackUrl='' // Return route (back button on editor bottom)\n\t\t\t/>\n\t\t)\n\t}\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pluginlistcontainer",children:"PluginListContainer"}),"\n",(0,i.jsx)(n.p,{children:"Component to display a select field containing all possible plugin implemtations of a given plugin type."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { PluginFormContainer } from '@regardsoss/microservice-plugin-configurator'\nimport { DataManagementShapes } from '@regardsoss/shape'\n\nexport class ExampleContainer extends React.component {\n\n\tstatic propTypes = {}\n\t\n\tonPluginSelection = (pluginDefinition) => {\n\t\tconsole.info('selected plugin',pluginDefinition.id)\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<PluginListContainer\n\t\t\t\ttitle='' // Title of the list\n\t\t\t\tselectLabel='' // Hint text of the select field\n\t\t\t\tmicroserviceName='rs-catalog' // Microservice of the plugin type\n\t\t\t\tpluginType='' // Plugin type\n\t\t\t\tselectedPluginId='' // Default selected plugin identifier\n\t\t\t\thandleSelect={this.onPluginSelection} // Function callback when a plugin implemtentation is selected.\n\t\t\t\terrorText='' // error message to display on top of the list or null if no error.\n\t\t\t/>\n\t\t)\n\t}\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);