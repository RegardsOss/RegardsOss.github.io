"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[68565],{58093:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=r(74848),n=r(28453);const i={title:"Publish a request event",sidebar_label:"Publish a request",slug:"/development/services/worker-manager/api-guides/amqp/publish-request",sidebar_position:1},d=void 0,o={id:"development/services/worker-manager/api-guides/amqp/amqp-publish-request",title:"Publish a request event",description:"Introduction",source:"@site/docs/development/services/worker-manager/api-guides/amqp/amqp-publish-request.md",sourceDirName:"development/services/worker-manager/api-guides/amqp",slug:"/development/services/worker-manager/api-guides/amqp/publish-request",permalink:"/docs/development/services/worker-manager/api-guides/amqp/publish-request",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/worker-manager/api-guides/amqp/amqp-publish-request.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Publish a request event",sidebar_label:"Publish a request",slug:"/development/services/worker-manager/api-guides/amqp/publish-request",sidebar_position:1},sidebar:"dev",previous:{title:"How it works",permalink:"/docs/development/services/worker-manager/conception/"},next:{title:"Subscribe to responses",permalink:"/docs/development/services/worker-manager/api-guides/amqp/subscribe-to-responses"}},a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"AMQP API",id:"amqp-api",level:2},{value:"How to",id:"how-to",level:3},{value:"Exchange",id:"exchange",level:3},{value:"Request content",id:"request-content",level:3},{value:"Properties",id:"properties",level:4},{value:"Headers",id:"headers",level:4},{value:"Body",id:"body",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(t.p,{children:["This section describes how to publish a new request event to the ",(0,s.jsx)(t.code,{children:"rs-worker-manager"})," microservice with an AMQP message\nin order\nto communicate with some workers."]}),"\n",(0,s.jsx)(t.h2,{id:"amqp-api",children:"AMQP API"}),"\n",(0,s.jsx)(t.h3,{id:"how-to",children:"How to"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"/docs/development/concepts/amqp-api/",children:"Regards AMQP API concept"})," describes how AMQP interfaces must be handled to\nsubmit events or to subscribe to events."]}),"\n",(0,s.jsx)(t.h3,{id:"exchange",children:"Exchange"}),"\n",(0,s.jsx)(t.p,{children:"Requests must be published to the REGARDS RabbitMQ exchange:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Exchange (type fanout)"}),(0,s.jsx)(t.th,{children:"Virtual host"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"regards.broadcast.fr.cnes.regards.modules.workermanager.amqp.events.in.RequestEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"regards.multitenant.manager"})})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"request-content",children:"Request content"}),"\n",(0,s.jsx)(t.h4,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"app_id"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Standard RabbitMQ property for the application identifier"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"priority"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Standard RabbitMQ property to sort messages by priority order."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"content_encoding"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Standard RabbitMQ property for the encoding type of the message"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"content_type"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Standard RabbitMQ property for the MIME Type of the message sent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"delivery_mode"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Standard RabbitMQ property for the delivery mode (persistent or not)"})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"headers",children:"Headers"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Optional"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"regards.tenant"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(t.td,{children:"Tenant name depends on the REGARDS instance project configuration."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"regards.request.id"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(t.td,{children:"Request identifier."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"regards.request.owner"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(t.td,{children:"Name of the request provider"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"regards.request.session"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(t.td,{children:"Name of the session"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"regards.request.content_type"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"No"}),(0,s.jsx)(t.td,{children:"Content type of the request (content type accepted by the worker)"})]})]})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:'title="Example of the properties and headers of a request event message"',children:'{\n  "priority": 1,\n  "delivery_mode": 2,\n  "content_encoding": "UTF-8",\n  "content_type": "application/json",\n  "headers": [\n    {\n      "regards.tenant": "REGARDS",\n      "regards.request.id": "requestId"\n      "regards.request.owner": "owner"\n      "regards.request.session": "session"\n      "regards.request.content_type": "contentType"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"body",children:"Body"}),"\n",(0,s.jsx)(t.p,{children:"The content of a request for treatment depends on the worker to whom the request is made. To determine the format of the\nmessage content, please refer to the documentation for the worker in question."})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>o});var s=r(96540);const n={},i=s.createContext(n);function d(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);