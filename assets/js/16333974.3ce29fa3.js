"use strict";(self.webpackChunkRegardsOss_github_io=self.webpackChunkRegardsOss_github_io||[]).push([[36015],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),f=o,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||a;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},34834:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],l={id:"release-notes-v1.0.0",title:"Version 1.0.0",slug:"/v1.0.0/"},s=void 0,c={unversionedId:"notes/release-notes-v1.0.0",id:"notes/release-notes-v1.0.0",isDocsHomePage:!1,title:"Version 1.0.0",description:"Released on: July, 2020",source:"@site/release_notes/notes/V1.0.0.md",sourceDirName:"notes",slug:"/v1.0.0/",permalink:"/release-notes/v1.0.0/",tags:[],version:"current",frontMatter:{id:"release-notes-v1.0.0",title:"Version 1.0.0",slug:"/v1.0.0/"},sidebar:"release_notes",previous:{title:"Version 1.1.0",permalink:"/release-notes/v1.1.0/"},next:{title:"Version 0.4.1",permalink:"/release-notes/v0.4.1/"}},u=[],p={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Released on: ",(0,a.kt)("strong",{parentName:"p"},"July, 2020"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.gnu.org/licenses/gpl-3.0"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/License-GPLv3-blue.svg",alt:"License: GPL v3"}))),(0,a.kt)("p",null,"Features:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add new operator role in the system with limited access to administration fonctionalities, created to manage data catalog."),(0,a.kt)("li",{parentName:"ul"},"Add configurable access rights on documents"),(0,a.kt)("li",{parentName:"ul"},"Add complete frontend config export from admin HMI"),(0,a.kt)("li",{parentName:"ul"},'"Remake" of the storage microservice. Improvements :',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Allow to reference files that are already stored (when user doesn't want files to be restored)"),(0,a.kt)("li",{parentName:"ul"},"Store small size files in archives to avoid inode issues"),(0,a.kt)("li",{parentName:"ul"},"Copy files from one storage system to another."),(0,a.kt)("li",{parentName:"ul"},'Remove complex system of "allocation strategy" plugins. Storage locations are now defined in the provided SIP.'))),(0,a.kt)("li",{parentName:"ul"},'"Remake" of the ingestion microservice',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Removed storage functionnalities"),(0,a.kt)("li",{parentName:"ul"},"Improve performances and error recovery"),(0,a.kt)("li",{parentName:"ul"},"Remove configuration from the Ingest Chain, now all this configuration is provided by dataprovider (or any other SIP provider)"))),(0,a.kt)("li",{parentName:"ul"},"Fix geospacial geometry sanitization on dateline"),(0,a.kt)("li",{parentName:"ul"},"Multiple HMI improvements on the user catalog and the admin HMI")))}m.isMDXComponent=!0}}]);