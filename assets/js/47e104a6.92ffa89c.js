"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[49983],{43531:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var t=s(74848),a=s(28453);const r={id:"ansible-vault",title:"Ansible Vault",slug:"/setup/swarm/advanced/ansible-vault"},o=void 0,i={id:"setup/advanced/ansible-vault",title:"Ansible Vault",description:"Your inventory may contain some passwords that you do not want to share under source control.",source:"@site/versioned_docs/version-1.14/setup/advanced/ansible-vault.md",sourceDirName:"setup/advanced",slug:"/setup/swarm/advanced/ansible-vault",permalink:"/docs/1.14/setup/swarm/advanced/ansible-vault",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.14/setup/advanced/ansible-vault.md",tags:[],version:"1.14",frontMatter:{id:"ansible-vault",title:"Ansible Vault",slug:"/setup/swarm/advanced/ansible-vault"},sidebar:"install",previous:{title:"Microservices optimizations",permalink:"/docs/1.14/setup/swarm/advanced/optimizations/"},next:{title:"Mount volumes, configs...",permalink:"/docs/1.14/setup/swarm/advanced/swarm-mount"}},l={},c=[{value:"Encrypt inventory value",id:"encrypt-inventory-value",level:2},{value:"Encrypt file",id:"encrypt-file",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Your inventory may contain some passwords that you do not want to share under source control.",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html",children:"Ansible Vault"})," allows you to crypt variable values and files content inside your inventory.",(0,t.jsx)(n.br,{}),"\n","After that, you will need to add ",(0,t.jsx)(n.code,{children:" --ask-vault-pass"})," when running ",(0,t.jsx)(n.code,{children:"ansible-playbook"})," to let Ansible decrypt crypted values on the fly."]}),"\n",(0,t.jsx)(n.h2,{id:"encrypt-inventory-value",children:"Encrypt inventory value"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ansible-vault encrypt_string --ask-vault-pass '<the password to crypt>'\n"})}),"\n",(0,t.jsx)(n.p,{children:"Ansible will asks you two times your Vault password. Type your Vault password and get your encrypted value :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"New Vault password: \nConfirm New Vault password:\n!vault |\n          $ANSIBLE_VAULT;1.1;AES256\n          6336633533303433346562653239613162613835643230....\n          66333964366631333331653166633634366563343562376562336435626330303663\nEncryption successful\n"})}),"\n",(0,t.jsx)(n.p,{children:"Save the value into your inventory. Let's say that was the Postgres instance password we crypted:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"group_config_mservices:\n  [...]\n  postgres:\n    instance:\n      host: database-inst.cnes.fr\n      port: 5432\n      user: <some user>\n      password: !vault |\n          $ANSIBLE_VAULT;1.1;AES256\n          39353136383065313730383734653439663330313663653761353434663935653033373833333830\n          3936356462383664616563633732623934643838383065300a646462616265316232623336376336\n          34373432613662633436626233616262653037643065616564336130393762653037343032396532\n          3464393534663433660a313530376634393864366233633561326338356463366532396566636361\n          65313136633339333161666238366239653639383431336634373236323932313036\n      db: <instance database name>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Well done! You can now place encrypted content (but never commit your Vault password) under source control and share it more safely."}),"\n",(0,t.jsx)(n.p,{children:"If you need to, you can check the value is correctly accessible on the fly using vault password:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'ansible --ask-vault-pass -m ansible.builtin.debug all -a var="group_config_mservices" -i inventories/<inventory name>/\n'})}),"\n",(0,t.jsx)(n.h2,{id:"encrypt-file",children:"Encrypt file"}),"\n",(0,t.jsx)(n.p,{children:"You can also encrypt the content of a file."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ansible-vault create --ask-vault-pass <file.to.encryt>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This command asks you for the vault password, then opens the vi program to let you write the content.",(0,t.jsx)(n.br,{}),"\n","Don't forget to press ",(0,t.jsx)(n.code,{children:"i"})," before writing inside the file, then save the content by pressing ",(0,t.jsx)(n.code,{children:"Escape"}),", then input ",(0,t.jsx)(n.code,{children:":wq"})," and finally press ",(0,t.jsx)(n.code,{children:"Enter"})]}),"\n",(0,t.jsxs)(n.p,{children:["The file ",(0,t.jsx)(n.code,{children:"<file.to.encryt>"})," must not exist before running this command."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var t=s(96540);const a={},r=t.createContext(a);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);