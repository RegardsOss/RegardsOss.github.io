"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[76594],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=l(r),m=a,g=c["".concat(p,".").concat(m)]||c[m]||u[m]||s;return r?n.createElement(g,o(o({ref:t},d),{},{components:r})):n.createElement(g,o({ref:t},d))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},46877:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const s={id:"backend-amqp-get-product-progress",title:"Get product progress AMQP",sidebar_label:"Get product progress AMQP",slug:"/development/backend/services/lta-manager/guides/get-product-progress-amqp"},o=void 0,i={unversionedId:"development/backend/regards/lta-manager/api-guides/backend-amqp-get-product-progress",id:"development/backend/regards/lta-manager/api-guides/backend-amqp-get-product-progress",title:"Get product progress AMQP",description:"Exchange",source:"@site/docs/development/backend/regards/lta-manager/api-guides/amqp-get-product-progress.md",sourceDirName:"development/backend/regards/lta-manager/api-guides",slug:"/development/backend/services/lta-manager/guides/get-product-progress-amqp",permalink:"/docs/development/backend/services/lta-manager/guides/get-product-progress-amqp",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/backend/regards/lta-manager/api-guides/amqp-get-product-progress.md",tags:[],version:"current",frontMatter:{id:"backend-amqp-get-product-progress",title:"Get product progress AMQP",sidebar_label:"Get product progress AMQP",slug:"/development/backend/services/lta-manager/guides/get-product-progress-amqp"},sidebar:"dev",previous:{title:"Submit product AMQP",permalink:"/docs/development/backend/services/lta-manager/guides/submit-product-amqp"},next:{title:"Create product REST",permalink:"/docs/development/backend/services/lta-manager/guides/create-product-rest"}},p={},l=[{value:"Exchange",id:"exchange",level:3},{value:"AMQP Headers",id:"amqp-headers",level:3},{value:"Granted response",id:"granted-response",level:3},{value:"Success response",id:"success-response",level:3},{value:"Invalid request responses",id:"invalid-request-responses",level:3},{value:"Internal error responses",id:"internal-error-responses",level:3}],d={toc:l},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"exchange"},"Exchange"),(0,a.kt)("p",null,"Exchange where submission requests responses are sent:",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"regards.broadcast.fr.cnes.regards.modules.ltamanager.amqp.output.SubmissionResponseDtoEvent"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("em",{parentName:"p"},"To listen to Submission requests responses, the REGARDS administrator must create for you a dedicated queue bound to this exchange and allow your RabbitMQ user to access to that queue.")),(0,a.kt)("h3",{id:"amqp-headers"},"AMQP Headers"),(0,a.kt)("p",null,"Headers are the same for all kind of responses."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "app_id": "REGARDS",\n  "timestamp": 1681461977,\n  "correlation_id": "xxx",\n  "priority": 1,\n  "delivery_mode": 2,\n  "content_encoding": "UTF-8",\n  "content_type": "application/json",\n  "headers": {\n    "regards.tenant": "tenant"\n  }\n}\n')),(0,a.kt)("h3",{id:"granted-response"},"Granted response"),(0,a.kt)("p",null,"REGARDS will publish a granted notification on the response exchange when the request is validated."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "correlationId": "xxx",\n    "productId": "xxx",\n    "responseStatus": "GRANTED",\n}\n')),(0,a.kt)("h3",{id:"success-response"},"Success response"),(0,a.kt)("p",null,"REGARDS will publish a success notification on the response exchange when the request is terminated in success."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "correlationId": "xxx",\n    "productId": "xxx",\n    "responseStatus": "SUCCESS",\n    "expires": "",\n    "session": "xxx",\n    "message": ""\n}\n')),(0,a.kt)("h3",{id:"invalid-request-responses"},"Invalid request responses"),(0,a.kt)("p",null,"REGARDS will publish a denied notification on the response exchange when the request is not valid."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "correlationId": "xxx",\n    "productId": "xxx",\n    "responseStatus": "DENIED",\n    "expires": "",\n    "session": "xxx",\n    "message": ""\n}\n')),(0,a.kt)("p",null,"A request can be invalid, if :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Request is not well formed"),(0,a.kt)("li",{parentName:"ul"},"Provided datatype is unknown or not configured.")),(0,a.kt)("admonition",{title:"How to handle it?",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Look at your request, fix it and submit a new one.")),(0,a.kt)("h3",{id:"internal-error-responses"},"Internal error responses"),(0,a.kt)("p",null,"After request has been granted by REGARDS, internal errors may occur.  In such case, an error response will be published on the response exchange."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "correlationId": "xxx",\n    "productId": "xxx",\n    "responseStatus": "ERROR",\n    "expires": "",\n    "session": "xxx",\n    "message": "Cause of the internal error"\n}\n')),(0,a.kt)("admonition",{title:"How to handle it?",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Retry later with new request or contact REGARDS administrators.")))}u.isMDXComponent=!0}}]);