"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[72975],{67147:(e,t,d)=>{d.r(t),d.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=d(74848),a=d(28453);const s={id:"dam-api-guides-amqp-create-or-update-model",title:"Create or update a model",sidebar_label:"Create or update a model",slug:"/development/backend/services/dam/api-guides/amqp/am-api-guides-amqp-create-or-update-model"},o=void 0,i={id:"development/services/dam/api-guides/rest/dam-api-guides-amqp-create-or-update-model",title:"Create or update a model",description:"Introduction",source:"@site/docs/development/services/dam/api-guides/rest/create-or-update-model.md",sourceDirName:"development/services/dam/api-guides/rest",slug:"/development/backend/services/dam/api-guides/amqp/am-api-guides-amqp-create-or-update-model",permalink:"/docs/next/development/backend/services/dam/api-guides/amqp/am-api-guides-amqp-create-or-update-model",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/dam/api-guides/rest/create-or-update-model.md",tags:[],version:"current",frontMatter:{id:"dam-api-guides-amqp-create-or-update-model",title:"Create or update a model",sidebar_label:"Create or update a model",slug:"/development/backend/services/dam/api-guides/amqp/am-api-guides-amqp-create-or-update-model"},sidebar:"dev",previous:{title:"Create a dataset",permalink:"/docs/next/development/backend/services/dam/api-guides/amqp/am-api-guides-amqp-create-dataset"},next:{title:"All endpoints (OpenAPI)",permalink:"/docs/next/development/services/dam/api-guides/rest/api-swagger"}},r={},l=[{value:"Introduction",id:"introduction",level:2},{value:"REST API",id:"rest-api",level:2},{value:"How to",id:"how-to",level:3},{value:"Endpoint",id:"endpoint",level:3},{value:"Request content",id:"request-content",level:3},{value:"Example",id:"example",level:3},{value:"Response",id:"response",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(t.p,{children:"This endpoint allows you to create a new model or update an existing one."}),"\n",(0,n.jsxs)(t.p,{children:["To update an existing one, the XML model file provided must use the same ",(0,n.jsx)(t.strong,{children:"model->name"})," value."]}),"\n",(0,n.jsxs)(t.p,{children:["To create your XML model file see ",(0,n.jsx)(t.a,{href:"/docs/next/development/appendices/create-model/",children:"model description"})]}),"\n",(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsxs)(t.p,{children:["In case of update, check for ",(0,n.jsx)(t.a,{href:"/docs/next/user-guide/data-organization/models/",children:"model update restrictions"})]})}),"\n",(0,n.jsx)(t.h2,{id:"rest-api",children:"REST API"}),"\n",(0,n.jsx)(t.h3,{id:"how-to",children:"How to"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"/docs/next/development/concepts/rest-api/",children:"Regards REST API concept"})," describe how REST interfaces must be handled to\nsubmit requests."]}),"\n",(0,n.jsx)(t.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Endpoint"}),(0,n.jsx)(t.th,{children:"Verb"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"/models/import"}),(0,n.jsx)(t.td,{children:"POST"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"request-content",children:"Request content"}),"\n",(0,n.jsx)(t.p,{children:'To create or update an existing model you have to provide the XML file with the request as a "multipart/form-data" content.'}),"\n",(0,n.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -X POST https://regards.com/api/v1/rs-dam/models/import \\\n  -H "Accept: application/json" \\\n  -H "Authorization: Bearer <token>" \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "file=@/path/to/your/file.xml"\n'})}),"\n",(0,n.jsx)(t.h3,{id:"response",children:"Response"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Code: 201"})," Created : Model successfully created or updated."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Code: 403"})," Forbidden : You don't have permission to create or update a model."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Code: 400"})," Bad request : Your data model file is not valid. Check file model format ",(0,n.jsx)(t.a,{href:"/docs/next/development/appendices/create-model/",children:"here"})]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,d)=>{d.d(t,{R:()=>o,x:()=>i});var n=d(96540);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);