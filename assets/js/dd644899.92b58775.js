"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[31791],{67416:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var t=r(74848),a=r(28453);const i={id:"backend-fem-feature-factory-plugins",title:"Feature Factory Plugin",sidebar_label:"Feature Factory",slug:"/development/backend/services/fem/plugins/feature-factory/"},o=void 0,s={id:"development/backend/regards/fem/plugins/backend-fem-feature-factory-plugins",title:"Feature Factory Plugin",description:"Available implementations",source:"@site/versioned_docs/version-1.13.0/development/backend/regards/fem/plugins/feature-factory-plugins.md",sourceDirName:"development/backend/regards/fem/plugins",slug:"/development/backend/services/fem/plugins/feature-factory/",permalink:"/docs/1.13.0/development/backend/services/fem/plugins/feature-factory/",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.13.0/development/backend/regards/fem/plugins/feature-factory-plugins.md",tags:[],version:"1.13.0",frontMatter:{id:"backend-fem-feature-factory-plugins",title:"Feature Factory Plugin",sidebar_label:"Feature Factory",slug:"/development/backend/services/fem/plugins/feature-factory/"},sidebar:"dev",previous:{title:"Feature Manager AMQP",permalink:"/docs/1.13.0/development/backend/services/fem/api/amqp/"},next:{title:"Overview",permalink:"/docs/1.13.0/development/backend/services/notifier/overview/"}},l={},u=[{value:"Available implementations",id:"available-implementations",level:2},{value:"How to implement a new feature factory plugin",id:"how-to-implement-a-new-feature-factory-plugin",level:2},{value:"Interface to implement",id:"interface-to-implement",level:3},{value:"Implementation",id:"implementation",level:3},{value:"How your parameters will be received",id:"how-your-parameters-will-be-received",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"available-implementations",children:"Available implementations"}),"\n",(0,t.jsx)(n.p,{children:"Currently, there is no distributed implementation of the Feature Factory Plugin. The generation of features depends entirely on your project and has to be validated against your own model."}),"\n",(0,t.jsx)(n.h2,{id:"how-to-implement-a-new-feature-factory-plugin",children:"How to implement a new feature factory plugin"}),"\n",(0,t.jsx)(n.h3,{id:"interface-to-implement",children:"Interface to implement"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@PluginInterface(description = "Generate a feature from a reference request")\npublic interface IFeatureFactoryPlugin {\n\n    /**\n     * Generate a {@link Feature} from {@link FeatureExtractionRequest} parameters.\n     * @param parameters free extraction parameters\n     * @return generated {@link Feature}\n     */\n    Feature generateFeature(JsonObject parameters) throws ModuleException;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(n.p,{children:"The implementation of this plugin depends on your specific needs. Therefore, a feature can be generated in many different ways based on generic parameters."}),"\n",(0,t.jsx)(n.p,{children:"Here is a dummy example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import com.google.gson.JsonObject;\nimport fr.cnes.regards.framework.module.rest.exception.ModuleException;\nimport fr.cnes.regards.framework.modules.plugins.annotations.Plugin;\nimport fr.cnes.regards.framework.modules.plugins.annotations.PluginInit;\nimport fr.cnes.regards.framework.modules.plugins.annotations.PluginParameter;\nimport fr.cnes.regards.framework.urn.EntityType;\nimport fr.cnes.regards.modules.feature.dto.Feature;\nimport fr.cnes.regards.modules.featureprovider.domain.plugin.IFeatureFactoryPlugin;\n\n@Plugin(author = "REGARDS Team",\n        description = "Extract a dummy feature from the url of data file to reference",\n        id = DummyFeatureFactoryPlugin.PLUGIN_ID, version = "1.0.0", contact = "regards@c-s.fr", license = "GPLv3",\n        owner = "CNES", url = "https://regardsoss.github.io/")\npublic class DummyFeatureFactoryPlugin implements IFeatureFactoryPlugin {\n\n    public static final String PLUGIN_ID = "DummyExtract";\n\n    @Override\n    public Feature generateFeature(JsonObject parameters) throws ModuleException {\n        String url = parameters.get("url");\n        return Feature.build("Some Id" + url, "documentation", null, null, EntityType.DATA, "someModelNamedExample");\n    }\n\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["For more information on how to implement plugins, refer to ",(0,t.jsx)(n.a,{href:"/docs/1.13.0/development/backend/framework/modules/plugins/",children:"Plugin documentation"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"how-your-parameters-will-be-received",children:"How your parameters will be received"}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.a,{href:"/docs/1.13.0/development/backend/services/fem/api/amqp/#feature-creation-request-by-file-reference",children:"requesting an extraction"}),", the field ",(0,t.jsx)(n.code,{children:"parameters"})," of the request contains the parameters given to this plugin when the method ",(0,t.jsx)(n.code,{children:"IFeatureFactoryPlugin#generateFeature"})," is called"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(96540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);