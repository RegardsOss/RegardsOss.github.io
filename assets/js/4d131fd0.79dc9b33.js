"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[15478],{15680:(e,r,t)=>{t.d(r,{xA:()=>m,yg:()=>g});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},m=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=l(t),d=o,g=p["".concat(s,".").concat(d)]||p[d]||u[d]||a;return t?n.createElement(g,c(c({ref:r},m),{},{components:t})):n.createElement(g,c({ref:r},m))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=d;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[p]="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=t[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},72064:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=t(58168),o=(t(96540),t(15680));const a={layout:"classic-docs",title:"REGARDS common microservice","short-title":"Common",categories:["development"]},c="Available APIs",i={unversionedId:"development/backend/regards/common/common",id:"version-1.11.0/development/backend/regards/common/common",title:"REGARDS common microservice",description:"Plugins API",source:"@site/versioned_docs/version-1.11.0/development/backend/regards/common/common.md",sourceDirName:"development/backend/regards/common",slug:"/development/backend/regards/common/",permalink:"/docs/1.11.0/development/backend/regards/common/",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.11.0/development/backend/regards/common/common.md",tags:[],version:"1.11.0",frontMatter:{layout:"classic-docs",title:"REGARDS common microservice","short-title":"Common",categories:["development"]}},s={},l=[{value:"Plugins API",id:"plugins-api",level:2}],m={toc:l},p="wrapper";function u(e){let{components:r,...t}=e;return(0,o.yg)(p,(0,n.A)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"available-apis"},"Available APIs"),(0,o.yg)("h2",{id:"plugins-api"},"Plugins API"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"[Common]")))}u.isMDXComponent=!0}}]);