"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[78989],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var s=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,s,a=function(e,t){if(null==e)return{};var r,s,a={},n=Object.keys(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=s.createContext({}),d=function(e){var t=s.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=d(e.components);return s.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},c=s.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=d(r),c=a,y=p["".concat(i,".").concat(c)]||p[c]||m[c]||n;return r?s.createElement(y,l(l({ref:t},u),{},{components:r})):s.createElement(y,l({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=c;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var d=2;d<n;d++)l[d]=r[d];return s.createElement.apply(null,l)}return s.createElement.apply(null,r)}c.displayName="MDXCreateElement"},27654:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=r(87462),a=(r(67294),r(3905));const n={id:"ansible-tasks",title:"Ansible tasks",sidebar_label:"Tasks",slug:"/setup/ansible-tasks/"},l=void 0,o={unversionedId:"setup/ansible-tasks",id:"version-1.15/setup/ansible-tasks",title:"Ansible tasks",description:"Ansible tasks",source:"@site/versioned_docs/version-1.15/setup/ansible-tasks.md",sourceDirName:"setup",slug:"/setup/ansible-tasks/",permalink:"/docs/setup/ansible-tasks/",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/versioned_docs/version-1.15/setup/ansible-tasks.md",tags:[],version:"1.15",frontMatter:{id:"ansible-tasks",title:"Ansible tasks",sidebar_label:"Tasks",slug:"/setup/ansible-tasks/"},sidebar:"install",previous:{title:"CoTS Versions",permalink:"/docs/setup/swarm/cots-version/"},next:{title:"Inventory configuration",permalink:"/docs/setup/swarm/advanced-setup/"}},i={},d=[{value:"Ansible tasks",id:"ansible-tasks",level:2},{value:"Docker SWARM",id:"docker-swarm",level:2},{value:"Setup SWARM",id:"setup-swarm",level:3},{value:"setup-vm.yml",id:"setup-vmyml",level:4},{value:"Stop SWARM",id:"stop-swarm",level:3},{value:"delete-swarm.yml",id:"delete-swarmyml",level:4},{value:"REGARDS",id:"regards",level:2},{value:"Setup REGARDS",id:"setup-regards",level:3},{value:"regards.yml",id:"regardsyml",level:4},{value:"regards-config.yml",id:"regards-configyml",level:4},{value:"regards-plugins.yml",id:"regards-pluginsyml",level:4},{value:"regards-stack.yml",id:"regards-stackyml",level:4},{value:"Stop REGARDS",id:"stop-regards",level:3},{value:"regards-shutdown.yml",id:"regards-shutdownyml",level:4},{value:"Erase REGARDS",id:"erase-regards",level:3},{value:"regards-delete.yml",id:"regards-deleteyml",level:4}],u={toc:d},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,s.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"ansible-tasks"},"Ansible tasks"),(0,a.kt)("admonition",{title:"Sudoer specific parameter",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If users are not in sudoers you can add ",(0,a.kt)("inlineCode",{parentName:"p"},"--ask-become-pass")," option to an ",(0,a.kt)("inlineCode",{parentName:"p"},"ansible-playbook")," command to become superuser when required. You should not run any of these tasks using root user.")),(0,a.kt)("admonition",{title:"What's an inventory ?",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Your inventory is a folder containing a ",(0,a.kt)("inlineCode",{parentName:"p"},"hosts")," file that refers to nodes you want to run the install on, and a folder ",(0,a.kt)("inlineCode",{parentName:"p"},"group_vars")," containing all the specific configuration of your setup.")),(0,a.kt)("h2",{id:"docker-swarm"},"Docker SWARM"),(0,a.kt)("h3",{id:"setup-swarm"},"Setup SWARM"),(0,a.kt)("h4",{id:"setup-vmyml"},"setup-vm.yml"),(0,a.kt)("p",null,"This ansible task install & configure docker swarm environement on each nodes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> setup-vm.yml\n")),(0,a.kt)("h3",{id:"stop-swarm"},"Stop SWARM"),(0,a.kt)("h4",{id:"delete-swarmyml"},"delete-swarm.yml"),(0,a.kt)("p",null,"This ansible task disconnect all nodes from the docker swarm. You need to execute this task ",(0,a.kt)("strong",{parentName:"p"},"first")," if you want to execute ",(0,a.kt)("inlineCode",{parentName:"p"},"setup-vm.yml")," again."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> delete-swarm.yml\n")),(0,a.kt)("h2",{id:"regards"},"REGARDS"),(0,a.kt)("h3",{id:"setup-regards"},"Setup REGARDS"),(0,a.kt)("p",null,"These tasks install REGARDS fully or partially."),(0,a.kt)("h4",{id:"regardsyml"},"regards.yml"),(0,a.kt)("p",null,"This ansible task install & configure & run REGARDS on each nodes. You can run this task as many times you want."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards.yml\n")),(0,a.kt)("h4",{id:"regards-configyml"},"regards-config.yml"),(0,a.kt)("p",null,"This ansible task update REGARDS deployed stack that refers to the provided inventory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-config.yml\n")),(0,a.kt)("h4",{id:"regards-pluginsyml"},"regards-plugins.yml"),(0,a.kt)("p",null,"This ansible task update REGARDS plugins on all servers. You need to reboot the microservice to let these changes be live."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-plugins.yml\n")),(0,a.kt)("h4",{id:"regards-stackyml"},"regards-stack.yml"),(0,a.kt)("p",null,"This ansible task only updates the SWARM files that boots REGARDS. Very effective way to updates a port or remove a microservice."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-stack.yml\n")),(0,a.kt)("h3",{id:"stop-regards"},"Stop REGARDS"),(0,a.kt)("h4",{id:"regards-shutdownyml"},"regards-shutdown.yml"),(0,a.kt)("p",null,"This ansible task shutdown REGARDS that refers to the provided inventory without removing any file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-shutdown.yml\n")),(0,a.kt)("h3",{id:"erase-regards"},"Erase REGARDS"),(0,a.kt)("h4",{id:"regards-deleteyml"},"regards-delete.yml"),(0,a.kt)("p",null,"This ansible task delete REGARDS deployed stack that refers to the provided inventory. This task does not remove data from external COTS."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-delete.yml\n")))}m.isMDXComponent=!0}}]);