"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[88290],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,v=m["".concat(o,".").concat(c)]||m[c]||p[c]||s;return n?a.createElement(v,l(l({ref:t},u),{},{components:n})):a.createElement(v,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<s;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76402:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return p}});var a=n(83117),r=n(80102),s=(n(67294),n(3905)),l=["components"],i={id:"ansible-tasks",title:"Ansible tasks",sidebar_label:"Tasks",slug:"/setup/ansible-tasks/"},o=void 0,d={unversionedId:"setup/ansible-tasks",id:"setup/ansible-tasks",title:"Ansible tasks",description:"Ansible tasks",source:"@site/docs/setup/ansible-tasks.md",sourceDirName:"setup",slug:"/setup/ansible-tasks/",permalink:"/docs/setup/ansible-tasks/",draft:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/setup/ansible-tasks.md",tags:[],version:"current",frontMatter:{id:"ansible-tasks",title:"Ansible tasks",sidebar_label:"Tasks",slug:"/setup/ansible-tasks/"},sidebar:"install",previous:{title:"Common issues",permalink:"/docs/setup/swarm/common-issues"},next:{title:"Inventory configuration",permalink:"/docs/setup/swarm/advanced-setup/"}},u={},p=[{value:"Ansible tasks",id:"ansible-tasks",level:2},{value:"Docker SWARM",id:"docker-swarm",level:2},{value:"Setup SWARM",id:"setup-swarm",level:3},{value:"setup-vm.yml",id:"setup-vmyml",level:4},{value:"Stop SWARM",id:"stop-swarm",level:3},{value:"delete-swarm.yml",id:"delete-swarmyml",level:4},{value:"REGARDS",id:"regards",level:2},{value:"Setup REGARDS",id:"setup-regards",level:3},{value:"regards.yml",id:"regardsyml",level:4},{value:"regards-config.yml",id:"regards-configyml",level:4},{value:"regards-plugins.yml",id:"regards-pluginsyml",level:4},{value:"regards-stack.yml",id:"regards-stackyml",level:4},{value:"Stop REGARDS",id:"stop-regards",level:3},{value:"regards-shutdown.yml",id:"regards-shutdownyml",level:4},{value:"Erase REGARDS",id:"erase-regards",level:3},{value:"regards-delete.yml",id:"regards-deleteyml",level:4}],m={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"ansible-tasks"},"Ansible tasks"),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Sudoer specific parameter")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If users are not in sudoers you can add ",(0,s.kt)("inlineCode",{parentName:"p"},"--ask-become-pass")," option to an ",(0,s.kt)("inlineCode",{parentName:"p"},"ansible-playbook")," command to become superuser when required. You should not run any of these tasks using root user."))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"What's an inventory ?")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Your inventory is a folder containing a ",(0,s.kt)("inlineCode",{parentName:"p"},"hosts")," file that refers to nodes you want to run the install on, and a folder ",(0,s.kt)("inlineCode",{parentName:"p"},"group_vars")," containing all the specific configuration of your setup."))),(0,s.kt)("h2",{id:"docker-swarm"},"Docker SWARM"),(0,s.kt)("h3",{id:"setup-swarm"},"Setup SWARM"),(0,s.kt)("h4",{id:"setup-vmyml"},"setup-vm.yml"),(0,s.kt)("p",null,"This ansible task install & configure docker swarm environement on each nodes."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> setup-vm.yml\n")),(0,s.kt)("h3",{id:"stop-swarm"},"Stop SWARM"),(0,s.kt)("h4",{id:"delete-swarmyml"},"delete-swarm.yml"),(0,s.kt)("p",null,"This ansible task disconnect all nodes from the docker swarm. You need to execute this task ",(0,s.kt)("strong",{parentName:"p"},"first")," if you want to execute ",(0,s.kt)("inlineCode",{parentName:"p"},"setup-vm.yml")," again."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> delete-swarm.yml\n")),(0,s.kt)("h2",{id:"regards"},"REGARDS"),(0,s.kt)("h3",{id:"setup-regards"},"Setup REGARDS"),(0,s.kt)("p",null,"These tasks install REGARDS fully or partially."),(0,s.kt)("h4",{id:"regardsyml"},"regards.yml"),(0,s.kt)("p",null,"This ansible task install & configure & run REGARDS on each nodes. You can run this task as many times you want."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards.yml\n")),(0,s.kt)("h4",{id:"regards-configyml"},"regards-config.yml"),(0,s.kt)("p",null,"This ansible task update REGARDS deployed stack that refers to the provided inventory."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-config.yml\n")),(0,s.kt)("h4",{id:"regards-pluginsyml"},"regards-plugins.yml"),(0,s.kt)("p",null,"This ansible task update REGARDS plugins on all servers. You need to reboot the microservice to let these changes be live."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-plugins.yml\n")),(0,s.kt)("h4",{id:"regards-stackyml"},"regards-stack.yml"),(0,s.kt)("p",null,"This ansible task only updates the SWARM files that boots REGARDS. Very effective way to updates a port or remove a microservice."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-stack.yml\n")),(0,s.kt)("h3",{id:"stop-regards"},"Stop REGARDS"),(0,s.kt)("h4",{id:"regards-shutdownyml"},"regards-shutdown.yml"),(0,s.kt)("p",null,"This ansible task shutdown REGARDS that refers to the provided inventory without removing any file."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-shutdown.yml\n")),(0,s.kt)("h3",{id:"erase-regards"},"Erase REGARDS"),(0,s.kt)("h4",{id:"regards-deleteyml"},"regards-delete.yml"),(0,s.kt)("p",null,"This ansible task delete REGARDS deployed stack that refers to the provided inventory. This task does not remove data from external COTS."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"ansible-playbook -i inventories/<your inventory> regards-delete.yml\n")))}c.isMDXComponent=!0}}]);