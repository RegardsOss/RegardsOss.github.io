"use strict";(self.webpackChunkregardsoss_github_io=self.webpackChunkregardsoss_github_io||[]).push([[26138],{37993:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var n=r(74848),i=r(28453);const s={title:"Configuration Importation/Exportation",sidebar_label:"Importation/Exportation",slug:"/development/backend/services/delivery/configuration/import-export",sidebar_position:1},o=void 0,a={id:"development/services/delivery/configuration/delivery-import-export",title:"Configuration Importation/Exportation",description:"Microservices settings regroup a set of settings that are specific by tenant",source:"@site/docs/development/services/delivery/configuration/delivery-import-export.md",sourceDirName:"development/services/delivery/configuration",slug:"/development/backend/services/delivery/configuration/import-export",permalink:"/docs/development/backend/services/delivery/configuration/import-export",draft:!1,unlisted:!1,editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/development/services/delivery/configuration/delivery-import-export.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Configuration Importation/Exportation",sidebar_label:"Importation/Exportation",slug:"/development/backend/services/delivery/configuration/import-export",sidebar_position:1},sidebar:"dev",previous:{title:"All endpoints (OpenAPI)",permalink:"/docs/development/backend/services/delivery/api-guides/rest/api-swagger"},next:{title:"Static configuration",permalink:"/docs/development/backend/services/delivery/configuration/static-configuration"}},d={},l=[{value:"Import/Export API",id:"importexport-api",level:2},{value:"Configurable parameters",id:"configurable-parameters",level:2},{value:"Example",id:"example",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Microservices settings regroup a set of settings that are specific by ",(0,n.jsx)(t.a,{href:"/docs/development/concepts/multitenant/",children:"tenant"}),"\nand stored in the microservice database."]}),"\n",(0,n.jsx)(t.h2,{id:"importexport-api",children:"Import/Export API"}),"\n",(0,n.jsxs)(t.p,{children:["To configure some microservice settings for a specific tenant, you need to follow the ",(0,n.jsx)(t.a,{href:"/docs/development/services/common/common-import-export-configuration",children:"generic Import/Export service\nconfiguration guide"}),", it will help you understand the expected JSON\nfile payload that you can send to the\n",(0,n.jsx)(t.a,{href:"/docs/development/backend/services/delivery/api-guides/rest/api-swagger#tag/module-manager-controller/operation/importConfiguration",children:"import configuration endpoint"}),"."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Configuration type"}),(0,n.jsx)(t.th,{children:"Available"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Import configuration in json format"}),(0,n.jsx)(t.td,{children:"True"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Export configuration in json format"}),(0,n.jsx)(t.td,{children:"True"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Reset configuration before import"}),(0,n.jsx)(t.td,{children:"False"}),(0,n.jsx)(t.td,{children:"Not implemented yet"})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["This configuration can also be imported or exported\nthrough ",(0,n.jsx)(t.a,{href:"/docs/user-guide/project-configuration/microservices/",children:"administrator UI"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"configurable-parameters",children:"Configurable parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Default value"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"request_ttl"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{children:"12"}),(0,n.jsx)(t.td,{children:"Request time to live in hours. Passed this delay, delivery requests will be deleted."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"s3_server"}),(0,n.jsx)(t.td,{children:"Object"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'{"scheme":"https","host":"rs-s3-minio","port":9000,"region":"fr-regards-1","key":"default-key","secret":"default-secret"'})}),(0,n.jsx)(t.td,{children:"Configuration to access S3 server. It has to be overridden to provide your own S3 configuration."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"build_bucket"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"default-build-bucket"}),(0,n.jsx)(t.td,{children:"Temporary bucket on which available files will be transferred before building final zips.  (Not used for now)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"delivery_bucket"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"default-delivery-bucket"}),(0,n.jsx)(t.td,{children:"Bucket on which the ZIP archives will be dropped once orders have been completed. It has to be overridden to provide your own delivery bucket."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"order_size_limit_bytes"}),(0,n.jsx)(t.td,{children:"Long"}),(0,n.jsx)(t.td,{children:"5368709120 (5Go)"}),(0,n.jsxs)(t.td,{children:["Maximum size in octets allowed for a delivery order. This value should not be greater than a suborder size in ",(0,n.jsx)(t.code,{children:"rs-order"})," microservice (FIXME TODO link) as delivery does not allow order with multiple suborders."]})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:"title='rs-delivery configuration file example'",children:'{\n  "microservice": "rs-delivery",\n  "modules": [\n    {\n      "module": {\n        "id": "delivery",\n        "name": "Delivery module",\n        "description": "File delivery system for order microservice.",\n        "version": "{version number}",\n        "author": "REGARDS",\n        "legalOwner": "CNES",\n        "documentation": "https://github.com/RegardsOss"\n      },\n      "resetBeforeImport": true,\n      "configuration": [\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "request_ttl",\n            "description": "Maximum retention time of a delivery request in hours.",\n            "value": "12",\n            "defaultValue": "12",\n            "className": "java.lang.Integer",\n            "containsSensitiveParameters": false\n          }\n        },\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "s3_server",\n            "description": "S3 server to place orders.",\n            "value": "{\\"scheme\\":\\"https\\",\\"host\\":\\"rs-minio\\",\\"port\\":9000,\\"region\\":\\"fr-regards-1\\",\\"key\\":\\"default-key\\",\\"secret\\":\\"*******\\"}",\n            "defaultValue": "{\\"scheme\\":\\"https\\",\\"host\\":\\"rs-minio\\",\\"port\\":9000,\\"region\\":\\"fr-regards-1\\",\\"key\\":\\"default-key\\",\\"secret\\":\\"default-secret\\"}",\n            "className": "fr.cnes.regards.modules.delivery.domain.settings.S3DeliveryServer",\n            "containsSensitiveParameters": true\n          }\n        },\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "delivery_bucket",\n            "description": "Bucket on which the ZIP archives will be dropped once orders have been completed.",\n            "value": "default-delivery-bucket",\n            "defaultValue": "default-delivery-bucket",\n            "className": "java.lang.String",\n            "containsSensitiveParameters": false\n          }\n        },\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "order_size_limit_bytes",\n            "description": "Maximum size in octets allowed for a delivery order. This value should not be greater than a suborder size in order microservice as delivery does not allow order with multiple suborders.",\n            "value": "5368709120",\n            "defaultValue": "5368709120",\n            "className": "java.lang.Long",\n            "containsSensitiveParameters": false\n          }\n        },\n        {\n          "key": "fr.cnes.regards.framework.modules.tenant.settings.domain.DynamicTenantSetting",\n          "value": {\n            "name": "build_bucket",\n            "description": "Temporary bucket on which available files will be transferred before building final zips.",\n            "value": "default-build-bucket",\n            "defaultValue": "default-build-bucket",\n            "className": "java.lang.String",\n            "containsSensitiveParameters": false\n          }\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(96540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);