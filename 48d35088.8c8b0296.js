(window.webpackJsonp=window.webpackJsonp||[]).push([[724],{2701:function(e,t,r){"use strict";r.d(t,"a",(function(){return m})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},m=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,b=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return r?a.a.createElement(b,c(c({ref:t},s),{},{components:r})):a.a.createElement(b,c({ref:t},s))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},796:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(2701)),i={id:"roadmap-v1.0.0",title:"REGARDS V1.0.0",slug:"/roadmap/v1.0.0"},c={unversionedId:"roadmap/notes/roadmap-v1.0.0",id:"roadmap/notes/roadmap-v1.0.0",isDocsHomePage:!1,title:"REGARDS V1.0.0",description:"Released on : July, 2020",source:"@site/docs/roadmap/notes/V1.0.0.md",slug:"/roadmap/v1.0.0",permalink:"/docs/next/roadmap/v1.0.0",editUrl:"https://github.com/RegardsOss/RegardsOss.github.io/edit/master/docs/roadmap/notes/V1.0.0.md",version:"current",sidebar:"roadmap",previous:{title:"REGARDS V1.1.0",permalink:"/docs/next/roadmap/v1.1.0"},next:{title:"REGARDS 0.4.1",permalink:"/docs/next/roadmap/v0.4.1"}},l=[],s={toc:l};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Released on : ",Object(o.b)("strong",{parentName:"p"},"July, 2020"),Object(o.b)("br",{parentName:"p"}),"\n",Object(o.b)("a",{parentName:"p",href:"https://www.gnu.org/licenses/gpl-3.0"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/badge/License-GPLv3-blue.svg",alt:"License: GPL v3"})),"\n",Object(o.b)("strong",{parentName:"p"},"Operational version")),Object(o.b)("p",null,"Changelog:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Add new operator role in the system with limited access to administration fonctionalities, created to manage data catalog."),Object(o.b)("li",{parentName:"ul"},"Add configurable access rights on documents"),Object(o.b)("li",{parentName:"ul"},"Add complete frontend config export from admin HMI"),Object(o.b)("li",{parentName:"ul"},'"Remake" of the storage microservice. Improvements :',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Allow to reference files that are already stored (when user doesn't want files to be restored)"),Object(o.b)("li",{parentName:"ul"},"Store small size files in archives to avoid inode issues"),Object(o.b)("li",{parentName:"ul"},"Copy files from one storage system to another."),Object(o.b)("li",{parentName:"ul"},'Remove complex system of "allocation strategy" plugins. Storage locations are now defined in the provided SIP.'))),Object(o.b)("li",{parentName:"ul"},'"Remake" of the ingestion microservice',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Removed storage functionnalities"),Object(o.b)("li",{parentName:"ul"},"Improve performances and error recovery"),Object(o.b)("li",{parentName:"ul"},"Remove configuration from the Ingest Chain, now all this configuration is provided by dataprovider (or any other SIP provider)"))),Object(o.b)("li",{parentName:"ul"},"Fix geospacial geometry sanitization on dateline"),Object(o.b)("li",{parentName:"ul"},"Multiple HMI improvements on the user catalog and the admin HMI")))}p.isMDXComponent=!0}}]);