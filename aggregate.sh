#!/bin/bash -e
######################################################################################
# REGARDS shell script to aggregate api documentation generated by integration tests #
######################################################################################
if [ $# -ne 3 ]; then
  echo "usage: $0 <microserviceName> <moduleName> <testClassName>"
  exit 1
fi
microserviceName=$1
moduleName=$2
testClassName=$3

placeToLook=../${microserviceName}/${moduleName}/${moduleName}-rest/target/generated-snippets/${testClassName}/
# aggregate requests
echo "Looking for http-request.md files into ${placeToLook} ..."
findresults=$(find ${placeToLook} -type f -name http-request.md -print )
for result in ${findresults}
do
   testName=$(echo ${result} | awk -F "/" '{print $8}')
   folder=./REGARDS-docs/api/${microserviceName}/requests/${testClassName}/
   mkdir -p ${folder}
   file=${folder}/${testName}.md
   cp ${result} ${file}
   # lets replace urlParams placeholder by its jekyll template
   urlParamTemplate='{% for urlParam in test.urlParams %}\n  `{{urlParam.name}}: {{urlParam.description}}`  \n  {% else %}\n  None.  \n  {% endfor %}'
   sed -i -e "s/urlParams/${urlParamTemplate}/g" ${file}
   # lets replace queryParams placeholder by its jekyll template
   queryParamTemplate='{% for queryParam in test.queryParams %}\n  `{{queryParam.name}}: {{queryParam.description}}`  \n  {% else %}\n  None.  \n  {% endfor %}'
   sed -i -e "s/queryParams/${queryParamTemplate}/g" ${file}
   # lets clean up empty "Data Params" sections
   emptyDataParams="\*\*Required:\*\*\n\n\`\`\`json\n  \n\`\`\`"
   # use a label for \n, add previous and next line to sed scope and do not apply on last line
   sed -i -e ':a' -e 'N' -e '$!ba' -e "s/$emptyDataParams/None.\n/g" ${file}
done
#aggregate responses
echo "Looking for http-response.md files into ${placeToLook} ..."
findresults=$(find ${placeToLook} -type f -name http-response.md -print )
for result in ${findresults}
do
   testName=$(echo ${result} | awk -F "/" '{print $8}')
   mkdir -p ./REGARDS-docs/api/${microserviceName}/responses/${testClassName}/
   cp ${result} ./REGARDS-docs/api/${microserviceName}/responses/${testClassName}/${testName}.md
done