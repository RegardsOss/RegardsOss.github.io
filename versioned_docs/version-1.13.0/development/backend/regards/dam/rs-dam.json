{
  "components": {
    "schemas": {
      "AbstractEntityObject": {
        "properties": {
          "creationDate": {
            "format": "date-time",
            "type": "string"
          },
          "docId": {
            "type": "string"
          },
          "feature": {
            "type": "object"
          },
          "files": {
            "$ref": "#/components/schemas/MultimapDataTypeDataFile"
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ipId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "lastUpdate": {
            "format": "date-time",
            "type": "string"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          },
          "mutableCopyOfPropertiesPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "normalizedGeometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/IPropertyObject"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "type": "array",
            "uniqueItems": true
          },
          "providerId": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "type": "array",
            "uniqueItems": true
          },
          "type": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "virtualId": {
            "type": "string"
          },
          "wgs84": {
            "$ref": "#/components/schemas/IGeometry"
          }
        },
        "required": [
          "feature",
          "model"
        ],
        "type": "object"
      },
      "AbstractRestriction": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "type": {
            "enum": [
              "NO_RESTRICTION",
              "PATTERN",
              "ENUMERATION",
              "DATE_ISO8601",
              "INTEGER_RANGE",
              "LONG_RANGE",
              "DOUBLE_RANGE",
              "URL",
              "GEOMETRY",
              "JSON_SCHEMA"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "AccessGroup": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 32,
            "minLength": 3,
            "pattern": "[a-zA-Z_][0-9a-zA-Z_]*",
            "type": "string"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "AccessRight": {
        "properties": {
          "accessGroup": {
            "$ref": "#/components/schemas/AccessGroup"
          },
          "accessLevel": {
            "enum": [
              "NO_ACCESS",
              "RESTRICTED_ACCESS",
              "CUSTOM_ACCESS",
              "FULL_ACCESS"
            ],
            "type": "string"
          },
          "constrained": {
            "$ref": "#/components/schemas/Dataset"
          },
          "dataAccessLevel": {
            "enum": [
              "NO_ACCESS",
              "INHERITED_ACCESS",
              "CUSTOM_ACCESS"
            ],
            "type": "string"
          },
          "dataAccessPlugin": {
            "$ref": "#/components/schemas/PluginConfiguration"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "qualityFilter": {
            "$ref": "#/components/schemas/QualityFilter"
          }
        },
        "required": [
          "accessGroup",
          "accessLevel",
          "dataAccessLevel",
          "dataset",
          "qualityFilter"
        ],
        "type": "object"
      },
      "AttributeModel": {
        "properties": {
          "alterable": {
            "type": "boolean"
          },
          "arraysize": {
            "format": "int32",
            "type": "integer"
          },
          "booleanAttribute": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "dynamic": {
            "type": "boolean"
          },
          "esMapping": {
            "type": "string"
          },
          "fragment": {
            "$ref": "#/components/schemas/Fragment"
          },
          "fullJsonPath": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "group": {
            "maxLength": 32,
            "minLength": 1,
            "pattern": "[a-zA-Z_][0-9a-zA-Z_]*",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "indexed": {
            "type": "boolean"
          },
          "internal": {
            "type": "boolean"
          },
          "jsonPath": {
            "type": "string"
          },
          "jsonPropertyPath": {
            "type": "string"
          },
          "label": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 32,
            "minLength": 1,
            "pattern": "[a-zA-Z_][0-9a-zA-Z_]*",
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "precision": {
            "format": "int32",
            "type": "integer"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/AttributeProperty"
            },
            "type": "array"
          },
          "restriction": {
            "$ref": "#/components/schemas/AbstractRestriction"
          },
          "restrictionType": {
            "enum": [
              "NO_RESTRICTION",
              "PATTERN",
              "ENUMERATION",
              "DATE_ISO8601",
              "INTEGER_RANGE",
              "LONG_RANGE",
              "DOUBLE_RANGE",
              "URL",
              "GEOMETRY",
              "JSON_SCHEMA"
            ],
            "type": "string"
          },
          "textAttribute": {
            "type": "boolean"
          },
          "type": {
            "enum": [
              "STRING",
              "JSON",
              "INTEGER",
              "DOUBLE",
              "DATE_ISO8601",
              "URL",
              "BOOLEAN",
              "STRING_ARRAY",
              "INTEGER_ARRAY",
              "DOUBLE_ARRAY",
              "DATE_ARRAY",
              "INTEGER_INTERVAL",
              "DOUBLE_INTERVAL",
              "DATE_INTERVAL",
              "LONG",
              "LONG_INTERVAL",
              "LONG_ARRAY",
              "OBJECT"
            ],
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "virtual": {
            "type": "boolean"
          }
        },
        "required": [
          "label",
          "name",
          "type"
        ],
        "type": "object"
      },
      "AttributeProperty": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "key": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      },
      "Collection": {
        "properties": {
          "creationDate": {
            "format": "date-time",
            "type": "string"
          },
          "docId": {
            "type": "string"
          },
          "feature": {
            "$ref": "#/components/schemas/CollectionFeature"
          },
          "files": {
            "$ref": "#/components/schemas/MultimapDataTypeDataFile"
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ipId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "lastUpdate": {
            "format": "date-time",
            "type": "string"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          },
          "mutableCopyOfPropertiesPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "normalizedGeometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/IPropertyObject"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "type": "array",
            "uniqueItems": true
          },
          "providerId": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "type": "array",
            "uniqueItems": true
          },
          "type": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "virtualId": {
            "type": "string"
          },
          "wgs84": {
            "$ref": "#/components/schemas/IGeometry"
          }
        },
        "required": [
          "feature",
          "model"
        ],
        "type": "object"
      },
      "CollectionFeature": {
        "properties": {
          "bbox": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "crs": {
            "type": "string"
          },
          "entityType": {
            "enum": [
              "COLLECTION",
              "DATA",
              "DATASET"
            ],
            "type": "string"
          },
          "files": {
            "$ref": "#/components/schemas/MultimapDataTypeDataFile"
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "model": {
            "type": "string"
          },
          "normalizedGeometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "providerId": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "type": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "virtualId": {
            "type": "string"
          }
        },
        "required": [
          "entityType",
          "label",
          "model",
          "providerId",
          "type"
        ],
        "type": "object"
      },
      "Column": {
        "properties": {
          "javaSqlType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sqlType": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CrawlingCursor": {
        "properties": {
          "currentLastEntityDate": {
            "format": "date-time",
            "type": "string"
          },
          "hasNext": {
            "type": "boolean",
            "writeOnly": true
          },
          "lastEntityDate": {
            "format": "date-time",
            "type": "string"
          },
          "position": {
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "previousLastEntityDate": {
            "format": "date-time",
            "type": "string"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DataFileReference": {
        "properties": {
          "filename": {
            "type": "string"
          },
          "imageHeight": {
            "format": "double",
            "type": "number"
          },
          "imageWidth": {
            "format": "double",
            "type": "number"
          },
          "mimeType": {
            "$ref": "#/components/schemas/MimeType"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "filename",
          "mimeType",
          "uri"
        ],
        "type": "object"
      },
      "DataObjectGroup": {
        "properties": {
          "dataObjectAccess": {
            "type": "boolean"
          },
          "dataObjectAccessFilterPluginBusinessId": {
            "type": "string"
          },
          "datasetAccess": {
            "type": "boolean"
          },
          "groupName": {
            "type": "string"
          },
          "metaDataObjectAccessFilterPluginBusinessId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataSourceDTO": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "associatedDatasets": {
            "format": "int64",
            "type": "integer"
          },
          "businessId": {
            "pattern": "[0-9a-zA-Z_-]*",
            "type": "string"
          },
          "iconUrl": {
            "format": "url",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "interfaceNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "isActive": {
            "type": "boolean",
            "writeOnly": true
          },
          "label": {
            "type": "string"
          },
          "metaData": {
            "$ref": "#/components/schemas/PluginMetaData"
          },
          "metaDataAndPluginId": {
            "$ref": "#/components/schemas/PluginMetaData"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/IPluginParam"
            },
            "type": "array",
            "uniqueItems": true
          },
          "pluginClassName": {
            "type": "string"
          },
          "pluginId": {
            "type": "string"
          },
          "priorityOrder": {
            "format": "int32",
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "priorityOrder"
        ],
        "type": "object"
      },
      "Dataset": {
        "properties": {
          "creationDate": {
            "format": "date-time",
            "type": "string"
          },
          "dataModel": {
            "type": "string"
          },
          "docId": {
            "type": "string"
          },
          "feature": {
            "$ref": "#/components/schemas/DatasetFeature"
          },
          "files": {
            "$ref": "#/components/schemas/MultimapDataTypeDataFile"
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ipId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "lastUpdate": {
            "format": "date-time",
            "type": "string"
          },
          "licence": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/DatasetMetadata"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          },
          "mutableCopyOfPropertiesPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "normalizedGeometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "openSearchSubsettingClause": {
            "type": "string"
          },
          "plgConfDataSource": {
            "$ref": "#/components/schemas/PluginConfiguration"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/IPropertyObject"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "type": "array",
            "uniqueItems": true
          },
          "providerId": {
            "type": "string"
          },
          "subsettingClause": {
            "$ref": "#/components/schemas/ICriterion"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "type": "array",
            "uniqueItems": true
          },
          "type": {
            "type": "string"
          },
          "userSubsettingClause": {
            "$ref": "#/components/schemas/ICriterion"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "virtualId": {
            "type": "string"
          },
          "wgs84": {
            "$ref": "#/components/schemas/IGeometry"
          }
        },
        "required": [
          "feature",
          "model"
        ],
        "type": "object"
      },
      "DatasetDataAttributesRequestBody": {
        "properties": {
          "datasetIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "modelNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "DatasetFeature": {
        "properties": {
          "bbox": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "crs": {
            "type": "string"
          },
          "entityType": {
            "enum": [
              "COLLECTION",
              "DATA",
              "DATASET"
            ],
            "type": "string"
          },
          "files": {
            "$ref": "#/components/schemas/MultimapDataTypeDataFile"
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "licence": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "normalizedGeometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "providerId": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "type": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "virtualId": {
            "type": "string"
          }
        },
        "required": [
          "entityType",
          "label",
          "model",
          "providerId",
          "type"
        ],
        "type": "object"
      },
      "DatasetMetadata": {
        "properties": {
          "dataObjectsGroups": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DataObjectGroup"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DatasetWithAccessRight": {
        "properties": {
          "accessRight": {
            "$ref": "#/components/schemas/AccessRight"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "type": "object"
      },
      "DatasourceIngestion": {
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/CrawlingCursor"
          },
          "id": {
            "type": "string"
          },
          "inErrorObjectsCount": {
            "format": "int32",
            "type": "integer"
          },
          "label": {
            "type": "string"
          },
          "lastIngestDate": {
            "format": "date-time",
            "type": "string"
          },
          "nextPlannedIngestDate": {
            "format": "date-time",
            "type": "string"
          },
          "savedObjectsCount": {
            "format": "int32",
            "type": "integer"
          },
          "stackTrace": {
            "type": "string"
          },
          "status": {
            "enum": [
              "NEW",
              "STARTED",
              "FINISHED",
              "FINISHED_WITH_WARNINGS",
              "ERROR",
              "NOT_FINISHED",
              "INACTIVE"
            ],
            "type": "string"
          },
          "statusDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DynamicTenantSettingDto": {
        "properties": {
          "defaultValue": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "DynamicTenantSettingDtoObject": {
        "properties": {
          "defaultValue": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "EntityModelAbstractEntityObject": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AbstractEntityObject"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelAccessGroup": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AccessGroup"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelAccessRight": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AccessRight"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelAttributeModel": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AttributeModel"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelCollection": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Collection"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelDataSourceDTO": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DataSourceDTO"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelDataset": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Dataset"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelDatasetWithAccessRight": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DatasetWithAccessRight"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelDatasourceIngestion": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DatasourceIngestion"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelDynamicTenantSettingDtoObject": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DynamicTenantSettingDtoObject"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelFragment": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Fragment"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelMapStringMaintenanceInfo": {
        "properties": {
          "content": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MaintenanceInfo"
            },
            "type": "object"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelModel": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Model"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelModelAttrAssoc": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ModelAttrAssoc"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelPluginConfiguration": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PluginConfiguration"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelPluginMetaData": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PluginMetaData"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelString": {
        "properties": {
          "content": {
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelTypeMetadataResourceConfMapping": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/TypeMetadataResourceConfMapping"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelVoid": {
        "properties": {
          "content": {
            "type": "object"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Fragment": {
        "description": "Fragment to add to the model",
        "properties": {
          "defaultFragment": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 32,
            "minLength": 1,
            "pattern": "[a-zA-Z_][0-9a-zA-Z_]*",
            "type": "string"
          },
          "version": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "virtual": {
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "GenericResponseBody": {
        "properties": {
          "message": {
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ICriterion": {
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "IGeometry": {
        "properties": {
          "crs": {
            "type": "string",
            "writeOnly": true
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "IPluginParam": {
        "properties": {
          "dynamic": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "enum": [
              "STRING",
              "BYTE",
              "SHORT",
              "INTEGER",
              "LONG",
              "FLOAT",
              "DOUBLE",
              "BOOLEAN",
              "MAP",
              "COLLECTION",
              "POJO",
              "PLUGIN"
            ],
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "IPropertyObject": {
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "enum": [
              "STRING",
              "JSON",
              "INTEGER",
              "DOUBLE",
              "DATE_ISO8601",
              "URL",
              "BOOLEAN",
              "STRING_ARRAY",
              "INTEGER_ARRAY",
              "DOUBLE_ARRAY",
              "DATE_ARRAY",
              "INTEGER_INTERVAL",
              "DOUBLE_INTERVAL",
              "DATE_INTERVAL",
              "LONG",
              "LONG_INTERVAL",
              "LONG_ARRAY",
              "OBJECT"
            ],
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ImageType": {
        "properties": {
          "height": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "Link": {
        "properties": {
          "deprecation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "media": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MaintenanceInfo": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "lastUpdate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MimeType": {
        "properties": {
          "charset": {
            "type": "string"
          },
          "concrete": {
            "type": "boolean"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "subtype": {
            "type": "string"
          },
          "subtypeSuffix": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "wildcardSubtype": {
            "type": "boolean"
          },
          "wildcardType": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Model": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 32,
            "minLength": 1,
            "pattern": "[a-zA-Z_][0-9a-zA-Z_]*",
            "type": "string"
          },
          "type": {
            "enum": [
              "COLLECTION",
              "DATA",
              "DATASET"
            ],
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ModelAttrAssoc": {
        "description": "Model attribute association to save",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/AttributeModel"
          },
          "computationConf": {
            "$ref": "#/components/schemas/PluginConfiguration"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "mode": {
            "enum": [
              "GIVEN",
              "COMPUTED"
            ],
            "type": "string"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          },
          "pos": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "attribute"
        ],
        "type": "object"
      },
      "ModuleImportReport": {
        "properties": {
          "importErrors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "moduleInformation": {
            "$ref": "#/components/schemas/ModuleInformation"
          },
          "onlyErrors": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ModuleInformation": {
        "properties": {
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "documentation": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "legalOwner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "author",
          "id",
          "name",
          "version"
        ],
        "type": "object"
      },
      "ModuleReadinessReportObject": {
        "properties": {
          "ready": {
            "type": "boolean"
          },
          "reasons": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "specifications": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ModuleRestartReport": {
        "properties": {
          "messages": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "moduleInformation": {
            "$ref": "#/components/schemas/ModuleInformation"
          }
        },
        "type": "object"
      },
      "MultimapDataTypeDataFile": {
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "OpenSearchDescription": {
        "properties": {
          "adultContent": {
            "default": "false",
            "type": "string",
            "xml": {
              "name": "AdultContent"
            }
          },
          "attribution": {
            "type": "string",
            "xml": {
              "name": "Attribution"
            }
          },
          "contact": {
            "type": "string",
            "xml": {
              "name": "Contact"
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "name": "Description"
            }
          },
          "developer": {
            "type": "string",
            "xml": {
              "name": "Developer"
            }
          },
          "image": {
            "$ref": "#/components/schemas/ImageType"
          },
          "inputEncoding": {
            "default": "UTF-8",
            "type": "string",
            "xml": {
              "name": "InputEncoding"
            }
          },
          "language": {
            "default": "*",
            "type": "string",
            "xml": {
              "name": "Language"
            }
          },
          "longName": {
            "type": "string",
            "xml": {
              "name": "LongName"
            }
          },
          "otherAttributes": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "outputEncoding": {
            "default": "UTF-8",
            "type": "string",
            "xml": {
              "name": "OutputEncoding"
            }
          },
          "query": {
            "items": {
              "$ref": "#/components/schemas/QueryType"
            },
            "type": "array",
            "xml": {
              "name": "Query"
            }
          },
          "shortName": {
            "type": "string",
            "xml": {
              "name": "ShortName"
            }
          },
          "syndicationRight": {
            "default": "open",
            "type": "string",
            "xml": {
              "name": "SyndicationRight"
            }
          },
          "tags": {
            "type": "string",
            "xml": {
              "name": "Tags"
            }
          },
          "url": {
            "items": {
              "$ref": "#/components/schemas/UrlType"
            },
            "type": "array",
            "xml": {
              "name": "Url"
            }
          }
        },
        "required": [
          "description",
          "shortName",
          "url"
        ],
        "type": "object",
        "xml": {
          "name": "OpenSearchDescription"
        }
      },
      "OpenSearchParameter": {
        "properties": {
          "maxExclusive": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "maxInclusive": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "maximum": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "minExclusive": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "minInclusive": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "minimum": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "option": {
            "items": {
              "$ref": "#/components/schemas/OpenSearchParameterOption"
            },
            "type": "array",
            "xml": {
              "name": "Option"
            }
          },
          "options": {
            "items": {
              "$ref": "#/components/schemas/OpenSearchParameterOption"
            },
            "type": "array",
            "xml": {
              "name": "Options"
            }
          },
          "pattern": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "step": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "title": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "OpenSearchParameterOption": {
        "properties": {
          "label": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "PageMetadata": {
        "properties": {
          "number": {
            "format": "int64",
            "type": "integer"
          },
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Pageable": {
        "properties": {
          "page": {
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "sort": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelAccessGroup": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelAccessGroup"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelAccessRight": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelAccessRight"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelAttributeModel": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelAttributeModel"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelCollection": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelCollection"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelDataset": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelDataset"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelDatasetWithAccessRight": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelDatasetWithAccessRight"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PluginConfiguration": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "businessId": {
            "pattern": "[0-9a-zA-Z_-]*",
            "type": "string"
          },
          "iconUrl": {
            "format": "url",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "interfaceNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "isActive": {
            "type": "boolean",
            "writeOnly": true
          },
          "label": {
            "type": "string"
          },
          "metaData": {
            "$ref": "#/components/schemas/PluginMetaData"
          },
          "metaDataAndPluginId": {
            "$ref": "#/components/schemas/PluginMetaData"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/IPluginParam"
            },
            "type": "array",
            "uniqueItems": true
          },
          "pluginClassName": {
            "type": "string"
          },
          "pluginId": {
            "type": "string"
          },
          "priorityOrder": {
            "format": "int32",
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "priorityOrder"
        ],
        "type": "object"
      },
      "PluginMetaData": {
        "properties": {
          "author": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "interfaceNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "licence": {
            "type": "string",
            "writeOnly": true
          },
          "license": {
            "type": "string"
          },
          "markdown": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/PluginParamDescriptor"
            },
            "type": "array"
          },
          "pluginClassName": {
            "type": "string"
          },
          "pluginId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userMarkdown": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PluginParamDescriptor": {
        "properties": {
          "defaultValue": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "keyLabel": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "markdown": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "parameterizedSubTypes": {
            "items": {
              "enum": [
                "STRING",
                "BYTE",
                "SHORT",
                "INTEGER",
                "LONG",
                "FLOAT",
                "DOUBLE",
                "BOOLEAN",
                "MAP",
                "COLLECTION",
                "POJO",
                "PLUGIN"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "pluginType": {
            "type": "string"
          },
          "sensible": {
            "type": "boolean"
          },
          "sensitive": {
            "type": "boolean",
            "writeOnly": true
          },
          "type": {
            "enum": [
              "STRING",
              "BYTE",
              "SHORT",
              "INTEGER",
              "LONG",
              "FLOAT",
              "DOUBLE",
              "BOOLEAN",
              "MAP",
              "COLLECTION",
              "POJO",
              "PLUGIN"
            ],
            "type": "string"
          },
          "unconfigurable": {
            "type": "boolean"
          },
          "userMarkdown": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "QualityFilter": {
        "properties": {
          "maxScore": {
            "format": "int32",
            "maximum": 10,
            "minimum": 0,
            "type": "integer"
          },
          "minScore": {
            "format": "int32",
            "maximum": 10,
            "minimum": 0,
            "type": "integer"
          },
          "qualityLevel": {
            "enum": [
              "ACCEPTED",
              "ACCEPTED_WITH_WARNINGS",
              "REJECTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Query": {
        "properties": {
          "query": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryType": {
        "properties": {
          "count": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "inputEncoding": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "language": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "otherAttributes": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "outputEncoding": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "role": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "searchTerms": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "startIndex": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "startPage": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "title": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "totalResults": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "ResourceAccess": {
        "type": "object"
      },
      "ResourceMapping": {
        "properties": {
          "autorizedRoles": {
            "items": {
              "$ref": "#/components/schemas/RoleAuthority"
            },
            "type": "array"
          },
          "controllerSimpleName": {
            "type": "string"
          },
          "fullPath": {
            "type": "string"
          },
          "method": {
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "OPTIONS",
              "TRACE"
            ],
            "type": "string"
          },
          "resourceAccess": {
            "$ref": "#/components/schemas/ResourceAccess"
          },
          "resourceMappingId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleAuthority": {
        "properties": {
          "authority": {
            "type": "string"
          },
          "authorizedIpAdresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "roleName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Table": {
        "properties": {
          "catalog": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pkey": {
            "type": "string"
          },
          "schema": {
            "type": "string"
          },
          "tableDefinition": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TypeMetadataResourceConfMapping": {
        "properties": {
          "attrType": {
            "enum": [
              "STRING",
              "JSON",
              "INTEGER",
              "DOUBLE",
              "DATE_ISO8601",
              "URL",
              "BOOLEAN",
              "STRING_ARRAY",
              "INTEGER_ARRAY",
              "DOUBLE_ARRAY",
              "DATE_ARRAY",
              "INTEGER_INTERVAL",
              "DOUBLE_INTERVAL",
              "DATE_INTERVAL",
              "LONG",
              "LONG_INTERVAL",
              "LONG_ARRAY",
              "OBJECT"
            ],
            "type": "string"
          },
          "pluginConfigurations": {
            "items": {
              "$ref": "#/components/schemas/EntityModelPluginConfiguration"
            },
            "type": "array"
          },
          "pluginMetaDatas": {
            "items": {
              "$ref": "#/components/schemas/EntityModelPluginMetaData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UrlType": {
        "properties": {
          "indexOffset": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "otherAttributes": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "pageOffset": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "parameter": {
            "items": {
              "$ref": "#/components/schemas/OpenSearchParameter"
            },
            "type": "array",
            "xml": {
              "name": "Parameter",
              "namespace": "http://a9.com/-/spec/opensearch/extensions/parameters/1.0/"
            }
          },
          "rel": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "template": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "Validity": {
        "properties": {
          "validity": {
            "type": "boolean"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "REGARDS_OAUTH2": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "https://regardsoss.github.io/api/v1/rs-authentication/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "description": "Data management API",
    "license": {
      "name": "GPL-3.0"
    },
    "title": "MICROSERVICE DAM",
    "version": "1.13.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/accessgroups": {
      "get": {
        "description": "Return a page of groups of user",
        "operationId": "retrieveAccessGroupsList",
        "parameters": [
          {
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelAccessGroup"
                }
              }
            },
            "description": "All groups of user were retrieved."
          }
        },
        "summary": "Get groups of user",
        "tags": [
          "access-group-controller"
        ]
      },
      "post": {
        "operationId": "createAccessGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAccessGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-group-controller"
        ]
      }
    },
    "/accessgroups/{name}": {
      "delete": {
        "operationId": "deleteAccessGroup",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "access-group-controller"
        ]
      },
      "get": {
        "operationId": "retrieveAccessGroup",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAccessGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-group-controller"
        ]
      },
      "put": {
        "operationId": "updateAccessGroup",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAccessGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-group-controller"
        ]
      }
    },
    "/accessrights": {
      "get": {
        "operationId": "retrieveAccessRightsList",
        "parameters": [
          {
            "in": "query",
            "name": "accessgroup",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dataset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelAccessRight"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-right-controller"
        ]
      },
      "post": {
        "operationId": "createAccessRight",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRight"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAccessRight"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-right-controller"
        ]
      }
    },
    "/accessrights/accessright": {
      "get": {
        "operationId": "retrieveAccessRight_1",
        "parameters": [
          {
            "in": "query",
            "name": "accessgroup",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dataset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRight"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-right-controller"
        ]
      }
    },
    "/accessrights/isAccessible": {
      "get": {
        "operationId": "isUserAutorisedToAccessDataset",
        "parameters": [
          {
            "in": "query",
            "name": "dataset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-right-controller"
        ]
      }
    },
    "/accessrights/{accessright_id}": {
      "delete": {
        "operationId": "deleteAccessRight",
        "parameters": [
          {
            "in": "path",
            "name": "accessright_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "access-right-controller"
        ]
      },
      "get": {
        "operationId": "retrieveAccessRight",
        "parameters": [
          {
            "in": "path",
            "name": "accessright_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAccessRight"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-right-controller"
        ]
      },
      "put": {
        "operationId": "updateAccessRight",
        "parameters": [
          {
            "in": "path",
            "name": "accessright_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRight"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAccessRight"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-right-controller"
        ]
      }
    },
    "/collections": {
      "get": {
        "description": "Return a page of collections",
        "operationId": "retrieveCollections",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelCollection"
                }
              }
            },
            "description": "All collections were retrieved."
          }
        },
        "summary": "Get collections",
        "tags": [
          "collection-controller"
        ]
      },
      "post": {
        "operationId": "createCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "collection-controller"
        ]
      }
    },
    "/collections/{collection_id}": {
      "delete": {
        "operationId": "deleteCollection",
        "parameters": [
          {
            "in": "path",
            "name": "collection_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "collection-controller"
        ]
      },
      "get": {
        "operationId": "retrieveCollection",
        "parameters": [
          {
            "in": "path",
            "name": "collection_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "collection-controller"
        ]
      },
      "put": {
        "operationId": "updateCollection",
        "parameters": [
          {
            "in": "path",
            "name": "collection_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "collection-controller"
        ]
      }
    },
    "/collections/{collection_id}/associate": {
      "put": {
        "operationId": "associate_1",
        "parameters": [
          {
            "in": "path",
            "name": "collection_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "collection-controller"
        ]
      }
    },
    "/collections/{collection_id}/dissociate": {
      "put": {
        "operationId": "dissociate_1",
        "parameters": [
          {
            "in": "path",
            "name": "collection_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "collection-controller"
        ]
      }
    },
    "/connections": {
      "get": {
        "operationId": "getAllDBConnections",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      },
      "post": {
        "operationId": "createDBConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      }
    },
    "/connections/{plgBusinessId}": {
      "delete": {
        "operationId": "deleteDBConnection",
        "parameters": [
          {
            "in": "path",
            "name": "plgBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      },
      "get": {
        "operationId": "getDBConnection",
        "parameters": [
          {
            "in": "path",
            "name": "plgBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      },
      "post": {
        "operationId": "testDBConnection",
        "parameters": [
          {
            "in": "path",
            "name": "plgBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseBody"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      },
      "put": {
        "operationId": "updateDBConnection",
        "parameters": [
          {
            "in": "path",
            "name": "plgBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      }
    },
    "/connections/{plgBusinessId}/tables": {
      "get": {
        "operationId": "getTables",
        "parameters": [
          {
            "in": "path",
            "name": "plgBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Table"
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      }
    },
    "/connections/{plgBusinessId}/tables/{tableName}/columns": {
      "get": {
        "operationId": "getColumns",
        "parameters": [
          {
            "in": "path",
            "name": "plgBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Column"
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "db-connection-controller"
        ]
      }
    },
    "/crawler/datasourceIngestions": {
      "get": {
        "description": "Return a list of crawler datasources",
        "operationId": "getAllDatasourceIngestion",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelDatasourceIngestion"
                  },
                  "type": "array"
                }
              }
            },
            "description": "All crawler datasources were retrieved."
          }
        },
        "summary": "Get crawler datasources",
        "tags": [
          "crawler-controller"
        ]
      }
    },
    "/crawler/datasourceIngestions/{ingestion_id}": {
      "delete": {
        "operationId": "deleteDatasourceIngestion",
        "parameters": [
          {
            "in": "path",
            "name": "ingestion_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "crawler-controller"
        ]
      },
      "put": {
        "operationId": "scheduleNowDatasourceIngestion",
        "parameters": [
          {
            "in": "path",
            "name": "ingestion_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "crawler-controller"
        ]
      }
    },
    "/datasets": {
      "get": {
        "description": "Return a page of datasets always sorted by their label",
        "operationId": "retrieveDatasets",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelDataset"
                }
              }
            },
            "description": "All datasets were retrieved."
          }
        },
        "summary": "Get datasets",
        "tags": [
          "dataset-controller"
        ]
      },
      "post": {
        "operationId": "createDataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dataset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDataset"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/access-rights/group/{accessGroupName}": {
      "get": {
        "operationId": "retrieveDatasets_1",
        "parameters": [
          {
            "in": "path",
            "name": "accessGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "datasetLabel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageRequest",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelDatasetWithAccessRight"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-with-access-right-controller"
        ]
      }
    },
    "/datasets/attributes": {
      "post": {
        "operationId": "retrieveAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetDataAttributesRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelAttributeModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/data/attributes": {
      "post": {
        "operationId": "retrieveDataAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetDataAttributesRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelAttributeModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/ipId/{dataset_ipId}": {
      "get": {
        "operationId": "retrieveDataset_1",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_ipId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/isValidSubsetting": {
      "post": {
        "operationId": "validateSubSettingClause",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/{datasetUrn}/assocs": {
      "get": {
        "operationId": "getModelAttrAssocsForDataInDataset",
        "parameters": [
          {
            "in": "query",
            "name": "datasetUrn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModelAttrAssoc"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/{dataset_id}": {
      "delete": {
        "operationId": "deleteDataset",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      },
      "get": {
        "operationId": "retrieveDataset",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDataset"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      },
      "put": {
        "operationId": "updateDataset",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dataset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDataset"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/{dataset_id}/associate": {
      "put": {
        "operationId": "associate",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasets/{dataset_id}/dissociate": {
      "put": {
        "operationId": "dissociate",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dataset-controller"
        ]
      }
    },
    "/datasources": {
      "get": {
        "description": "Return a list of plugin configurations of type IDataSourcePlugin",
        "operationId": "getAllDataSources",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelDataSourceDTO"
                  },
                  "type": "array"
                }
              }
            },
            "description": "All plugin configurations of type IDataSourcePlugin were retrieved."
          }
        },
        "summary": "Get IDataSourcePlugin plugin configurations",
        "tags": [
          "data-source-controller"
        ]
      },
      "post": {
        "operationId": "createDataSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDataSourceDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "data-source-controller"
        ]
      }
    },
    "/datasources/{businessId}": {
      "delete": {
        "operationId": "deleteDataSource",
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "data-source-controller"
        ]
      },
      "get": {
        "operationId": "getDataSource",
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDataSourceDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "data-source-controller"
        ]
      },
      "put": {
        "operationId": "updateDataSource",
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDataSourceDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "data-source-controller"
        ]
      }
    },
    "/entities/{urn}/files/{checksum}": {
      "delete": {
        "operationId": "removeFile",
        "parameters": [
          {
            "in": "path",
            "name": "urn",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "checksum",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAbstractEntityObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attachment-controller"
        ]
      },
      "get": {
        "operationId": "getFile",
        "parameters": [
          {
            "in": "path",
            "name": "urn",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "checksum",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "origin",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "isContentInline",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "attachment-controller"
        ]
      }
    },
    "/entities/{urn}/files/{dataType}": {
      "post": {
        "operationId": "attachFiles",
        "parameters": [
          {
            "in": "path",
            "name": "urn",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dataType",
            "required": true,
            "schema": {
              "enum": [
                "RAWDATA",
                "QUICKLOOK_SD",
                "QUICKLOOK_MD",
                "QUICKLOOK_HD",
                "DOCUMENT",
                "THUMBNAIL",
                "OTHER",
                "AIP",
                "DESCRIPTION"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "file": {
                    "items": {
                      "format": "binary",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "refs": {
                    "items": {
                      "$ref": "#/components/schemas/DataFileReference"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAbstractEntityObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attachment-controller"
        ]
      }
    },
    "/index": {
      "delete": {
        "operationId": "recreateIndex",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "index-controller"
        ]
      }
    },
    "/index/index/update/collections": {
      "post": {
        "operationId": "updateCollections",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "index-controller"
        ]
      }
    },
    "/index/index/update/datasets": {
      "post": {
        "operationId": "updateDatasets",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "index-controller"
        ]
      }
    },
    "/maintenance": {
      "get": {
        "operationId": "retrieveTenantsInMaintenance",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelMapStringMaintenanceInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "maintenance-controller"
        ]
      }
    },
    "/maintenance/{tenant}/disable": {
      "put": {
        "operationId": "unSetMaintenance",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "maintenance-controller"
        ]
      }
    },
    "/maintenance/{tenant}/enable": {
      "put": {
        "operationId": "setMaintenance",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "maintenance-controller"
        ]
      }
    },
    "/microservice/configuration": {
      "get": {
        "operationId": "exportConfiguration",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      },
      "post": {
        "operationId": "importConfiguration",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModuleImportReport"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/configuration/enabled": {
      "get": {
        "operationId": "isConfigurationEnabled",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/ready": {
      "get": {
        "operationId": "isReady",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleReadinessReportObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/ready/enabled": {
      "get": {
        "operationId": "isReadyEnabled",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/restart": {
      "get": {
        "operationId": "restart",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModuleRestartReport"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/restart/enabled": {
      "get": {
        "operationId": "isRestartEnabled",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/models": {
      "get": {
        "description": "Return a model list",
        "operationId": "getModels",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "COLLECTION",
                "DATA",
                "DATASET"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "All models were retrieved."
          }
        },
        "summary": "Get models",
        "tags": [
          "model-controller"
        ]
      },
      "post": {
        "operationId": "createModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "model-controller"
        ]
      }
    },
    "/models/assocs": {
      "get": {
        "description": "Endpoint enabling retrieval of all links between models and attribute for a given type of entity",
        "operationId": "getModelAttrAssocsFor",
        "parameters": [
          {
            "description": "Filter using entity type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "COLLECTION",
                "DATA",
                "DATASET"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModelAttrAssoc"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Models and attrs links by type",
        "tags": [
          "model-attr-assoc-controller"
        ]
      }
    },
    "/models/assocs/computation/types": {
      "get": {
        "description": "Endpoint enabling retrieval, for every attribute type, compatible plugin configurations and plugin metadata",
        "operationId": "getMappingForComputedAttribute",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelTypeMetadataResourceConfMapping"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Available plugin conf by attr type",
        "tags": [
          "model-attr-assoc-controller"
        ]
      }
    },
    "/models/attributes": {
      "get": {
        "description": "Return a list of attribute models",
        "operationId": "getAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "STRING",
                "JSON",
                "INTEGER",
                "DOUBLE",
                "DATE_ISO8601",
                "URL",
                "BOOLEAN",
                "STRING_ARRAY",
                "INTEGER_ARRAY",
                "DOUBLE_ARRAY",
                "DATE_ARRAY",
                "INTEGER_INTERVAL",
                "DOUBLE_INTERVAL",
                "DATE_INTERVAL",
                "LONG",
                "LONG_INTERVAL",
                "LONG_ARRAY",
                "OBJECT"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fragmentName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "modelNames",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "noLink",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelAttributeModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "All attribute models were retrieved."
          }
        },
        "summary": "Get attribute models",
        "tags": [
          "attribute-model-controller"
        ]
      },
      "post": {
        "operationId": "addAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAttributeModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attribute-model-controller"
        ]
      }
    },
    "/models/attributes/modeltype/{modelType}": {
      "get": {
        "operationId": "getModelsAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "modelType",
            "required": true,
            "schema": {
              "enum": [
                "COLLECTION",
                "DATA",
                "DATASET"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelAttributeModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attribute-model-controller"
        ]
      }
    },
    "/models/attributes/restrictions": {
      "get": {
        "operationId": "getRestrictions",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "STRING",
                "JSON",
                "INTEGER",
                "DOUBLE",
                "DATE_ISO8601",
                "URL",
                "BOOLEAN",
                "STRING_ARRAY",
                "INTEGER_ARRAY",
                "DOUBLE_ARRAY",
                "DATE_ARRAY",
                "INTEGER_INTERVAL",
                "DOUBLE_INTERVAL",
                "DATE_INTERVAL",
                "LONG",
                "LONG_INTERVAL",
                "LONG_ARRAY",
                "OBJECT"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attribute-model-controller"
        ]
      }
    },
    "/models/attributes/types": {
      "get": {
        "operationId": "getPropertyTypes",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attribute-model-controller"
        ]
      }
    },
    "/models/attributes/{attributeId}": {
      "delete": {
        "operationId": "deleteAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "attributeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "attribute-model-controller"
        ]
      },
      "get": {
        "operationId": "getAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "attributeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAttributeModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attribute-model-controller"
        ]
      },
      "put": {
        "operationId": "updateAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "attributeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAttributeModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "attribute-model-controller"
        ]
      }
    },
    "/models/fragments": {
      "get": {
        "description": "Return a list of fragments",
        "operationId": "getFragments",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelFragment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "All fragments were retrieved."
          }
        },
        "summary": "Get fragments",
        "tags": [
          "fragment-controller"
        ]
      },
      "post": {
        "operationId": "addFragment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fragment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelFragment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "fragment-controller"
        ]
      }
    },
    "/models/fragments/import": {
      "post": {
        "operationId": "importFragment",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelFragment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "fragment-controller"
        ]
      }
    },
    "/models/fragments/{fragmentId}": {
      "delete": {
        "operationId": "deleteFragment",
        "parameters": [
          {
            "in": "path",
            "name": "fragmentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "fragment-controller"
        ]
      },
      "get": {
        "operationId": "getFragment",
        "parameters": [
          {
            "in": "path",
            "name": "fragmentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelFragment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "fragment-controller"
        ]
      },
      "put": {
        "operationId": "updateFragment",
        "parameters": [
          {
            "in": "path",
            "name": "fragmentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fragment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelFragment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "fragment-controller"
        ]
      }
    },
    "/models/fragments/{fragmentId}/export": {
      "get": {
        "operationId": "exportFragment",
        "parameters": [
          {
            "in": "path",
            "name": "fragmentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "fragment-controller"
        ]
      }
    },
    "/models/import": {
      "post": {
        "operationId": "importModel",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "model-controller"
        ]
      }
    },
    "/models/{modelName}": {
      "delete": {
        "operationId": "deleteModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "model-controller"
        ]
      },
      "get": {
        "operationId": "getModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "model-controller"
        ]
      },
      "put": {
        "operationId": "updateModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "model-controller"
        ]
      }
    },
    "/models/{modelName}/attributes": {
      "get": {
        "description": "Return all model attribute associations matching provided criteria.",
        "operationId": "getModelAttrAssocs",
        "parameters": [
          {
            "description": "Filter using model name",
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelModelAttrAssoc"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of model attribute associations."
          }
        },
        "summary": "Get model attr assocs",
        "tags": [
          "model-attr-assoc-controller"
        ]
      },
      "post": {
        "description": "Bind an attribute to a model.",
        "operationId": "bindAttributeToModel",
        "parameters": [
          {
            "description": "Filter using model name",
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelAttrAssoc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModelAttrAssoc"
                }
              }
            },
            "description": "The new attribute model association."
          }
        },
        "summary": "Bind attr to model",
        "tags": [
          "model-attr-assoc-controller"
        ]
      }
    },
    "/models/{modelName}/attributes/fragments": {
      "post": {
        "description": "Bind fragment attributes to a model.",
        "operationId": "bindNSAttributeToModel",
        "parameters": [
          {
            "description": "Model receiving the fragment",
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fragment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelModelAttrAssoc"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of model attribute associations created by the bind between the model and the fragment."
          }
        },
        "summary": "Bind fragment",
        "tags": [
          "model-attr-assoc-controller"
        ]
      }
    },
    "/models/{modelName}/attributes/fragments/{fragmentId}": {
      "delete": {
        "description": "Unbind fragment attributes from a model.",
        "operationId": "unbindNSAttributeFromModel",
        "parameters": [
          {
            "description": "Filter using model name",
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fragment id to unbind",
            "in": "path",
            "name": "fragmentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fragment is not binded to the model."
          }
        },
        "summary": "Unbind fragment",
        "tags": [
          "model-attr-assoc-controller"
        ]
      }
    },
    "/models/{modelName}/attributes/{attributeId}": {
      "delete": {
        "description": "Unbind an attribute from a model.",
        "operationId": "unbindAttributeFromModel",
        "parameters": [
          {
            "description": "Model that loose one attribute",
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Attribute id to unbind",
            "in": "path",
            "name": "attributeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The model attribute association has been removed."
          }
        },
        "summary": "Unbind attribute",
        "tags": [
          "model-attr-assoc-controller"
        ]
      },
      "get": {
        "description": "Return a model attribute association matching criteria.",
        "operationId": "getModelAttrAssoc",
        "parameters": [
          {
            "description": "Filter using model name",
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter using attribute id",
            "in": "path",
            "name": "attributeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModelAttrAssoc"
                }
              }
            },
            "description": "A model attribute association."
          }
        },
        "summary": "Get model attr assoc",
        "tags": [
          "model-attr-assoc-controller"
        ]
      },
      "put": {
        "description": "Update a model attribute association matching provided model name and attribute id.",
        "operationId": "updateModelAttrAssoc",
        "parameters": [
          {
            "description": "Filter using model name",
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter using attribute id",
            "in": "path",
            "name": "attributeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelAttrAssoc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModelAttrAssoc"
                }
              }
            },
            "description": "The updated model attribute association."
          }
        },
        "summary": "Update model attr assoc",
        "tags": [
          "model-attr-assoc-controller"
        ]
      }
    },
    "/models/{modelName}/duplicate": {
      "post": {
        "operationId": "duplicateModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModel"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "model-controller"
        ]
      }
    },
    "/models/{modelName}/export": {
      "get": {
        "operationId": "exportModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "model-controller"
        ]
      }
    },
    "/opensearch/descriptor": {
      "get": {
        "operationId": "retrieveDescriptor",
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OpenSearchDescription"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "opensearch-controller"
        ]
      }
    },
    "/plugins": {
      "get": {
        "operationId": "getPlugins",
        "parameters": [
          {
            "in": "query",
            "name": "pluginType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelPluginMetaData"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/plugins/cache": {
      "delete": {
        "operationId": "emptyCache",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/plugins/configs": {
      "get": {
        "description": "Return a list of plugin configurations for a specific type",
        "operationId": "getPluginConfigurationsByType",
        "parameters": [
          {
            "in": "query",
            "name": "pluginType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                  },
                  "type": "array"
                }
              }
            },
            "description": "All plugin configurations for a specific type were retrieved."
          }
        },
        "summary": "Get plugin configurations",
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/plugins/configs/{configBusinessId}": {
      "get": {
        "operationId": "getPluginConfigurationDirectAccess",
        "parameters": [
          {
            "in": "path",
            "name": "configBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/plugins/{pluginId}": {
      "get": {
        "operationId": "getPluginMetaDataById",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginMetaData"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/plugins/{pluginId}/config": {
      "get": {
        "operationId": "getPluginConfigurations",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      },
      "post": {
        "operationId": "savePluginConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/plugins/{pluginId}/config/{configBusinessId}": {
      "delete": {
        "operationId": "deletePluginConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "configBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      },
      "get": {
        "operationId": "getPluginConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "configBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      },
      "put": {
        "operationId": "updatePluginConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "configBusinessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/plugintypes": {
      "get": {
        "operationId": "getPluginTypes",
        "parameters": [
          {
            "in": "query",
            "name": "available",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelString"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "plugin-controller"
        ]
      }
    },
    "/regards/{tenant}/datasource/status": {
      "get": {
        "operationId": "getDataSourceStatus",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseBody"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "jpa-multitenant-controller"
        ]
      }
    },
    "/regards/{tenant}/datasource/test": {
      "get": {
        "operationId": "testTenantConnection",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseBody"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "jpa-multitenant-controller"
        ]
      }
    },
    "/security/resources": {
      "get": {
        "operationId": "getAllResources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ResourceMapping"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "security-resources-controller"
        ]
      }
    },
    "/settings": {
      "get": {
        "operationId": "retrieveAll",
        "parameters": [
          {
            "in": "query",
            "name": "names",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDtoObject"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dynamic-tenant-setting-controller"
        ]
      }
    },
    "/settings/{name}": {
      "delete": {
        "operationId": "reset",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDtoObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dynamic-tenant-setting-controller"
        ]
      },
      "put": {
        "operationId": "update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicTenantSettingDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDtoObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "dynamic-tenant-setting-controller"
        ]
      }
    },
    "/shutdown/immediate": {
      "post": {
        "operationId": "immediateShutdown",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "manager-controller"
        ]
      }
    }
  },
  "security": [
    {
      "REGARDS_OAUTH2": []
    }
  ],
  "servers": [
    {
      "description": "Generated server url",
      "url": "https://regardsoss.github.io/api/v1/rs-dam"
    }
  ]
}
