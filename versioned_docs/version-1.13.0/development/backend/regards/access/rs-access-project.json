{
  "components": {
    "schemas": {
      "AccessRequestDto": {
        "properties": {
          "accessGroups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "maxQuota": {
            "format": "int64",
            "type": "integer"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/MetaData"
            },
            "type": "array"
          },
          "origin": {
            "type": "string"
          },
          "originUrl": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "requestLink": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "ConfigurationDTO": {
        "properties": {
          "configuration": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatesRangeRestriction": {
        "description": "Filter on last connection date",
        "properties": {
          "after": {
            "description": "Keep entities having date greater than",
            "format": "date-time",
            "type": "string"
          },
          "before": {
            "description": "Keep entities having date less than",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DownloadQuotaLimitsDto": {
        "properties": {
          "email": {
            "type": "string"
          },
          "maxQuota": {
            "format": "int64",
            "type": "integer"
          },
          "rateLimit": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DynamicTenantSettingDto": {
        "properties": {
          "defaultValue": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "DynamicTenantSettingDtoObject": {
        "properties": {
          "defaultValue": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "EntityModelConfigurationDTO": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ConfigurationDTO"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelDynamicTenantSettingDtoObject": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DynamicTenantSettingDtoObject"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelLinkUIPluginsDatasets": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/LinkUIPluginsDatasets"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelMapStringMaintenanceInfo": {
        "properties": {
          "content": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MaintenanceInfo"
            },
            "type": "object"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelModule": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Module"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelPluginServiceDto": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PluginServiceDto"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelProjectUserReadDto": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ProjectUserReadDto"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelResourcesAccess": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ResourcesAccess"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelTheme": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Theme"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelToponymDTO": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ToponymDTO"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelUILayout": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/UILayout"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelUIPluginConfiguration": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/UIPluginConfiguration"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelUIPluginDefinition": {
        "properties": {
          "content": {
            "$ref": "#/components/schemas/UIPluginDefinition"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EntityModelVoid": {
        "properties": {
          "content": {
            "type": "object"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GenericResponseBody": {
        "properties": {
          "message": {
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "IGeometry": {
        "properties": {
          "crs": {
            "type": "string",
            "writeOnly": true
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "JsonArray": {
        "properties": {
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asBoolean": {
            "type": "boolean"
          },
          "asByte": {
            "format": "byte",
            "type": "string"
          },
          "asCharacter": {
            "deprecated": true,
            "type": "string"
          },
          "asDouble": {
            "format": "double",
            "type": "number"
          },
          "asFloat": {
            "format": "float",
            "type": "number"
          },
          "asInt": {
            "format": "int32",
            "type": "integer"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asLong": {
            "format": "int64",
            "type": "integer"
          },
          "asNumber": {
            "type": "number"
          },
          "asShort": {
            "format": "int32",
            "type": "integer"
          },
          "asString": {
            "type": "string"
          },
          "empty": {
            "type": "boolean"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "JsonNull": {
        "properties": {
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asBoolean": {
            "type": "boolean"
          },
          "asByte": {
            "format": "byte",
            "type": "string"
          },
          "asCharacter": {
            "deprecated": true,
            "type": "string"
          },
          "asDouble": {
            "format": "double",
            "type": "number"
          },
          "asFloat": {
            "format": "float",
            "type": "number"
          },
          "asInt": {
            "format": "int32",
            "type": "integer"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asLong": {
            "format": "int64",
            "type": "integer"
          },
          "asNumber": {
            "type": "number"
          },
          "asShort": {
            "format": "int32",
            "type": "integer"
          },
          "asString": {
            "type": "string"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "JsonObject": {
        "properties": {
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asBoolean": {
            "type": "boolean"
          },
          "asByte": {
            "format": "byte",
            "type": "string"
          },
          "asCharacter": {
            "deprecated": true,
            "type": "string"
          },
          "asDouble": {
            "format": "double",
            "type": "number"
          },
          "asFloat": {
            "format": "float",
            "type": "number"
          },
          "asInt": {
            "format": "int32",
            "type": "integer"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asLong": {
            "format": "int64",
            "type": "integer"
          },
          "asNumber": {
            "type": "number"
          },
          "asShort": {
            "format": "int32",
            "type": "integer"
          },
          "asString": {
            "type": "string"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "JsonPrimitive": {
        "properties": {
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asBoolean": {
            "type": "boolean"
          },
          "asByte": {
            "format": "byte",
            "type": "string"
          },
          "asCharacter": {
            "deprecated": true,
            "type": "string"
          },
          "asDouble": {
            "format": "double",
            "type": "number"
          },
          "asFloat": {
            "format": "float",
            "type": "number"
          },
          "asInt": {
            "format": "int32",
            "type": "integer"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asLong": {
            "format": "int64",
            "type": "integer"
          },
          "asNumber": {
            "type": "number"
          },
          "asShort": {
            "format": "int32",
            "type": "integer"
          },
          "asString": {
            "type": "string"
          },
          "boolean": {
            "type": "boolean"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "number": {
            "type": "boolean"
          },
          "string": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Link": {
        "properties": {
          "deprecation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "media": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LinkUIPluginsDatasets": {
        "properties": {
          "datasetId": {
            "type": "string"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/UIPluginConfiguration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MaintenanceInfo": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "lastUpdate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetaData": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "visibility": {
            "enum": [
              "READABLE",
              "WRITEABLE",
              "HIDDEN"
            ],
            "type": "string"
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "Module": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "applicationId": {
            "type": "string"
          },
          "conf": {
            "type": "string"
          },
          "container": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "page": {
            "$ref": "#/components/schemas/UIPage"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "active",
          "applicationId",
          "container",
          "description",
          "type"
        ],
        "type": "object"
      },
      "ModuleImportReport": {
        "properties": {
          "importErrors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "moduleInformation": {
            "$ref": "#/components/schemas/ModuleInformation"
          },
          "onlyErrors": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ModuleInformation": {
        "properties": {
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "documentation": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "legalOwner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "author",
          "id",
          "name",
          "version"
        ],
        "type": "object"
      },
      "ModuleReadinessReportObject": {
        "properties": {
          "ready": {
            "type": "boolean"
          },
          "reasons": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "specifications": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ModuleRestartReport": {
        "properties": {
          "messages": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "moduleInformation": {
            "$ref": "#/components/schemas/ModuleInformation"
          }
        },
        "type": "object"
      },
      "MultiValueMapStringString": {
        "additionalProperties": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "properties": {
          "all": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "writeOnly": true
          },
          "empty": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PageMetadata": {
        "properties": {
          "number": {
            "format": "int64",
            "type": "integer"
          },
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Pageable": {
        "properties": {
          "page": {
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "size": {
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "sort": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelModule": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelModule"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelProjectUserReadDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelProjectUserReadDto"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelTheme": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelTheme"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelUIPluginConfiguration": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelUIPluginConfiguration"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PagedModelEntityModelUIPluginDefinition": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/EntityModelUIPluginDefinition"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "type": "array"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PluginServiceDto": {
        "properties": {
          "applicationModes": {
            "items": {
              "enum": [
                "ONE",
                "MANY"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "configId": {
            "type": "string"
          },
          "entityTypes": {
            "items": {
              "enum": [
                "COLLECTION",
                "DATA",
                "DATASET"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "iconUrl": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "enum": [
              "UI",
              "CATALOG"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectUserCreateDto": {
        "properties": {
          "accessGroups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "maxQuota": {
            "format": "int64",
            "type": "integer"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/MetaData"
            },
            "type": "array"
          },
          "originUrl": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            },
            "type": "array"
          },
          "rateLimit": {
            "format": "int64",
            "type": "integer"
          },
          "requestLink": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectUserReadDto": {
        "properties": {
          "accessGroups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "currentQuota": {
            "format": "int64",
            "type": "integer"
          },
          "currentRate": {
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "lastConnection": {
            "format": "date-time",
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastUpdate": {
            "format": "date-time",
            "type": "string"
          },
          "licenseAccepted": {
            "type": "boolean"
          },
          "maxQuota": {
            "format": "int64",
            "type": "integer"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/MetaData"
            },
            "type": "array"
          },
          "origin": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            },
            "type": "array"
          },
          "rateLimit": {
            "format": "int64",
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "status": {
            "enum": [
              "WAITING_ACCESS",
              "ACCESS_DENIED",
              "ACCESS_GRANTED",
              "ACCESS_INACTIVE",
              "WAITING_ACCOUNT_ACTIVE",
              "WAITING_EMAIL_VERIFICATION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectUserUpdateDto": {
        "properties": {
          "accessGroups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "maxQuota": {
            "format": "int64",
            "type": "integer"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/MetaData"
            },
            "type": "array"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            },
            "type": "array"
          },
          "rateLimit": {
            "format": "int64",
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "type": "object"
      },
      "RecipientDto": {
        "properties": {
          "businessId": {
            "description": "Recipient business identifier",
            "type": "string"
          },
          "description": {
            "description": "Recipient description",
            "type": "string"
          },
          "recipientLabel": {
            "description": "Recipient label",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceAccess": {
        "type": "object"
      },
      "ResourceMapping": {
        "properties": {
          "autorizedRoles": {
            "items": {
              "$ref": "#/components/schemas/RoleAuthority"
            },
            "type": "array"
          },
          "controllerSimpleName": {
            "type": "string"
          },
          "fullPath": {
            "type": "string"
          },
          "method": {
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "OPTIONS",
              "TRACE"
            ],
            "type": "string"
          },
          "resourceAccess": {
            "$ref": "#/components/schemas/ResourceAccess"
          },
          "resourceMappingId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcesAccess": {
        "properties": {
          "controllerSimpleName": {
            "type": "string"
          },
          "defaultRole": {
            "enum": [
              "INSTANCE_ADMIN",
              "PROJECT_ADMIN",
              "EXPLOIT",
              "ADMIN",
              "REGISTERED_USER",
              "PUBLIC"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "microservice": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "verb": {
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "OPTIONS",
              "TRACE"
            ],
            "type": "string"
          }
        },
        "required": [
          "controllerSimpleName",
          "defaultRole",
          "microservice",
          "resource",
          "verb"
        ],
        "type": "object"
      },
      "Role": {
        "properties": {
          "authorizedAddresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "identifiable": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isNative": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "parentRole": {
            "$ref": "#/components/schemas/Role"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "RoleAuthority": {
        "properties": {
          "authority": {
            "type": "string"
          },
          "authorizedIpAdresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "roleName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchProjectUserParameters": {
        "properties": {
          "accessGroups": {
            "$ref": "#/components/schemas/ValuesRestrictionString"
          },
          "creationDate": {
            "$ref": "#/components/schemas/DatesRangeRestriction"
          },
          "email": {
            "description": "Filter on user email",
            "type": "string"
          },
          "firstName": {
            "description": "Filter on user firstName",
            "type": "string"
          },
          "lastConnection": {
            "$ref": "#/components/schemas/DatesRangeRestriction"
          },
          "lastName": {
            "description": "Filter on user lastname",
            "type": "string"
          },
          "origins": {
            "$ref": "#/components/schemas/ValuesRestrictionString"
          },
          "quotaWarningCount": {
            "description": "Filter on quota warning count",
            "format": "int64",
            "type": "integer"
          },
          "roles": {
            "$ref": "#/components/schemas/ValuesRestrictionString"
          },
          "status": {
            "$ref": "#/components/schemas/ValuesRestrictionUserStatus"
          }
        },
        "type": "object"
      },
      "Theme": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "configuration": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "required": [
          "configuration",
          "name"
        ],
        "type": "object"
      },
      "ToponymDTO": {
        "properties": {
          "businessId": {
            "type": "string"
          },
          "copyright": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry"
          },
          "labelEn": {
            "type": "string"
          },
          "labelFr": {
            "type": "string"
          },
          "toponymMetadata": {
            "$ref": "#/components/schemas/ToponymMetadata"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ToponymGeoJsonDTO": {
        "properties": {
          "toponym": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ToponymMetadata": {
        "properties": {
          "author": {
            "type": "string"
          },
          "creationDate": {
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "project": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UILayout": {
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "layout": {
            "type": "string"
          }
        },
        "required": [
          "applicationId",
          "layout"
        ],
        "type": "object"
      },
      "UIPage": {
        "properties": {
          "customIconURL": {
            "type": "string"
          },
          "home": {
            "type": "boolean"
          },
          "iconType": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIPluginConfiguration": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "conf": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "label": {
            "type": "string"
          },
          "linkedToAllEntities": {
            "type": "boolean"
          },
          "pluginDefinition": {
            "$ref": "#/components/schemas/UIPluginDefinition"
          }
        },
        "required": [
          "active",
          "label",
          "linkedToAllEntities",
          "pluginDefinition"
        ],
        "type": "object"
      },
      "UIPluginDefinition": {
        "properties": {
          "applicationModes": {
            "items": {
              "enum": [
                "ONE",
                "MANY"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "entityTypes": {
            "items": {
              "enum": [
                "COLLECTION",
                "DATA",
                "DATASET"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "iconUrl": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "sourcePath": {
            "type": "string"
          },
          "type": {
            "enum": [
              "CRITERIA",
              "SERVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "applicationModes",
          "entityTypes",
          "name",
          "sourcePath",
          "type"
        ],
        "type": "object"
      },
      "UserCurrentQuotas": {
        "properties": {
          "currentQuota": {
            "format": "int64",
            "type": "integer"
          },
          "currentRate": {
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "maxQuota": {
            "format": "int64",
            "type": "integer"
          },
          "rateLimit": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ValuesRestrictionString": {
        "description": "Filter on access groups",
        "properties": {
          "ignoreCase": {
            "description": "Only available for String resitrctions. Allow if true, to search values ignoring case. Default false",
            "type": "boolean"
          },
          "matchMode": {
            "description": "Match mode to use, can be STRICT|STARTS_WITH|CONTAINS|ENDS_WITH (default STRICT)",
            "enum": [
              "STRICT",
              "STARTS_WITH",
              "CONTAINS",
              "ENDS_WITH"
            ],
            "type": "string"
          },
          "mode": {
            "description": "Restriction mode to use",
            "enum": [
              "INCLUDE",
              "EXCLUDE"
            ],
            "type": "string"
          },
          "values": {
            "description": "List of accepted or refused values (according to the mode)",
            "items": {
              "description": "List of accepted or refused values (according to the mode)",
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "mode",
          "values"
        ],
        "type": "object"
      },
      "ValuesRestrictionUserStatus": {
        "description": "Filter on status",
        "properties": {
          "ignoreCase": {
            "description": "Only available for String resitrctions. Allow if true, to search values ignoring case. Default false",
            "type": "boolean"
          },
          "matchMode": {
            "description": "Match mode to use, can be STRICT|STARTS_WITH|CONTAINS|ENDS_WITH (default STRICT)",
            "enum": [
              "STRICT",
              "STARTS_WITH",
              "CONTAINS",
              "ENDS_WITH"
            ],
            "type": "string"
          },
          "mode": {
            "description": "Restriction mode to use",
            "enum": [
              "INCLUDE",
              "EXCLUDE"
            ],
            "type": "string"
          },
          "values": {
            "description": "List of accepted or refused values (according to the mode)",
            "items": {
              "description": "List of accepted or refused values (according to the mode)",
              "enum": [
                "WAITING_ACCESS",
                "ACCESS_DENIED",
                "ACCESS_GRANTED",
                "ACCESS_INACTIVE",
                "WAITING_ACCOUNT_ACTIVE",
                "WAITING_EMAIL_VERIFICATION"
              ],
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "mode",
          "values"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "REGARDS_OAUTH2": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "https://regardsoss.github.io/api/v1/rs-authentication/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "description": "Configuration for project GUI",
    "license": {
      "name": "GPL-3.0"
    },
    "title": "MICROSERVICE ACCESS",
    "version": "1.13.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/accesses": {
      "post": {
        "operationId": "requestAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/accesses/external": {
      "post": {
        "operationId": "requestExternalAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/accesses/settings": {
      "get": {
        "operationId": "retrieveAccessSettings",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDtoObject"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-settings-controller"
        ]
      }
    },
    "/accesses/settings/{name}": {
      "put": {
        "operationId": "updateAccessSettings",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicTenantSettingDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDtoObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-settings-controller"
        ]
      }
    },
    "/accesses/verifyEmail/{token}": {
      "get": {
        "operationId": "verifyEmail",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/accesses/{access_id}": {
      "delete": {
        "operationId": "removeAccessRequest",
        "parameters": [
          {
            "in": "path",
            "name": "access_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/accesses/{access_id}/accept": {
      "put": {
        "operationId": "acceptAccessRequest",
        "parameters": [
          {
            "in": "path",
            "name": "access_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/accesses/{access_id}/active": {
      "put": {
        "operationId": "activeAccess",
        "parameters": [
          {
            "in": "path",
            "name": "access_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/accesses/{access_id}/deny": {
      "put": {
        "operationId": "denyAccessRequest",
        "parameters": [
          {
            "in": "path",
            "name": "access_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/accesses/{access_id}/inactive": {
      "put": {
        "operationId": "inactiveAccess",
        "parameters": [
          {
            "in": "path",
            "name": "access_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "registration-controller"
        ]
      }
    },
    "/applications/{applicationId}/modules": {
      "get": {
        "operationId": "retrieveModules",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelModule"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-controller"
        ]
      },
      "post": {
        "operationId": "saveModule",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Module"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModule"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-controller"
        ]
      }
    },
    "/applications/{applicationId}/modules/{moduleId}": {
      "delete": {
        "operationId": "deleteModule",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "moduleId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-controller"
        ]
      },
      "get": {
        "operationId": "retrieveModule",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "moduleId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModule"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-controller"
        ]
      },
      "put": {
        "operationId": "updateModule",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "moduleId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Module"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelModule"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-controller"
        ]
      }
    },
    "/attribute/cache": {
      "delete": {
        "operationId": "refreshAttributeCache",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "attribute-cache-refresh-controller"
        ]
      }
    },
    "/collections/search": {
      "get": {
        "operationId": "searchCollections",
        "parameters": [
          {
            "in": "query",
            "name": "allParams",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MultiValueMapStringString"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JsonObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-search-controller"
        ]
      }
    },
    "/configuration/{applicationId}": {
      "get": {
        "operationId": "retrieveConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelConfigurationDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-configuration-controller"
        ]
      },
      "post": {
        "operationId": "addConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelConfigurationDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-configuration-controller"
        ]
      },
      "put": {
        "operationId": "updateConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelConfigurationDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-configuration-controller"
        ]
      }
    },
    "/dataobjects/datasets/search": {
      "get": {
        "operationId": "searchDataobjectsReturnDatasets",
        "parameters": [
          {
            "in": "query",
            "name": "allParams",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MultiValueMapStringString"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JsonObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-search-controller"
        ]
      }
    },
    "/dataobjects/search": {
      "get": {
        "operationId": "searchDataobjects",
        "parameters": [
          {
            "in": "query",
            "name": "allParams",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MultiValueMapStringString"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JsonObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-search-controller"
        ]
      }
    },
    "/datasets/search": {
      "get": {
        "operationId": "searchDatasets",
        "parameters": [
          {
            "in": "query",
            "name": "allParams",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MultiValueMapStringString"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JsonObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-search-controller"
        ]
      }
    },
    "/layouts/{applicationId}": {
      "get": {
        "operationId": "retrieveUILayout",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUILayout"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-layout-controller"
        ]
      },
      "put": {
        "operationId": "updateUILayout",
        "parameters": [
          {
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UILayout"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUILayout"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-layout-controller"
        ]
      }
    },
    "/linkuiplugindataset/{datasetId}": {
      "get": {
        "operationId": "retrieveLink",
        "parameters": [
          {
            "in": "path",
            "name": "datasetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLinkUIPluginsDatasets"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "link-ui-plugins-datasets-controller"
        ]
      },
      "put": {
        "operationId": "updateLink",
        "parameters": [
          {
            "in": "path",
            "name": "datasetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkUIPluginsDatasets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLinkUIPluginsDatasets"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "link-ui-plugins-datasets-controller"
        ]
      }
    },
    "/maintenance": {
      "get": {
        "operationId": "retrieveTenantsInMaintenance",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelMapStringMaintenanceInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "maintenance-controller"
        ]
      }
    },
    "/maintenance/{tenant}/disable": {
      "put": {
        "operationId": "unSetMaintenance",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "maintenance-controller"
        ]
      }
    },
    "/maintenance/{tenant}/enable": {
      "put": {
        "operationId": "setMaintenance",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "maintenance-controller"
        ]
      }
    },
    "/microservice/configuration": {
      "get": {
        "operationId": "exportConfiguration",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      },
      "post": {
        "operationId": "importConfiguration",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModuleImportReport"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/configuration/enabled": {
      "get": {
        "operationId": "isConfigurationEnabled",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/ready": {
      "get": {
        "operationId": "isReady",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleReadinessReportObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/ready/enabled": {
      "get": {
        "operationId": "isReadyEnabled",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/restart": {
      "get": {
        "operationId": "restart",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModuleRestartReport"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/microservice/restart/enabled": {
      "get": {
        "operationId": "isRestartEnabled",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "module-manager-controller"
        ]
      }
    },
    "/quota": {
      "get": {
        "operationId": "getQuotaLimits",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadQuotaLimitsDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "storage-download-quota-controller"
        ]
      }
    },
    "/quota/current": {
      "get": {
        "operationId": "getCurrentQuotas",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserCurrentQuotas"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "storage-download-quota-controller"
        ]
      }
    },
    "/quota/{user_email}": {
      "get": {
        "operationId": "getQuotaLimits_1",
        "parameters": [
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadQuotaLimitsDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "storage-download-quota-controller"
        ]
      },
      "put": {
        "operationId": "upsertQuotaLimits",
        "parameters": [
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadQuotaLimitsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadQuotaLimitsDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "storage-download-quota-controller"
        ]
      }
    },
    "/recipients": {
      "get": {
        "description": "List all recipient if missing parameter, or only recipients enabling the direct notification or only them not enabling the direct notification",
        "operationId": "findRecipients",
        "parameters": [
          {
            "description": "Recipient enable or not the direct notification",
            "in": "query",
            "name": "directNotificationEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RecipientDto"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "List of recipients"
          }
        },
        "summary": "List all recipient",
        "tags": [
          "recipient-dto-controller"
        ]
      }
    },
    "/regards/{tenant}/datasource/status": {
      "get": {
        "operationId": "getDataSourceStatus",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseBody"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "jpa-multitenant-controller"
        ]
      }
    },
    "/regards/{tenant}/datasource/test": {
      "get": {
        "operationId": "testTenantConnection",
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseBody"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "jpa-multitenant-controller"
        ]
      }
    },
    "/search": {
      "get": {
        "operationId": "searchAll",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JsonObject"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "access-search-controller"
        ]
      }
    },
    "/security/resources": {
      "get": {
        "operationId": "getAllResources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ResourceMapping"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "security-resources-controller"
        ]
      }
    },
    "/services": {
      "get": {
        "operationId": "retrieveServices",
        "parameters": [
          {
            "in": "query",
            "name": "dataset_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelUIPluginConfiguration"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-service-controller"
        ]
      }
    },
    "/services/aggregated": {
      "get": {
        "operationId": "retrieveServices_1",
        "parameters": [
          {
            "in": "query",
            "name": "datasetIpIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "applicationModes",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "ONE",
                  "MANY"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelPluginServiceDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "services-aggregator-controller"
        ]
      }
    },
    "/shutdown/immediate": {
      "post": {
        "operationId": "immediateShutdown",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "manager-controller"
        ]
      }
    },
    "/themes": {
      "get": {
        "description": "Return a page of HMI themes",
        "operationId": "retrieveThemes",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelTheme"
                }
              }
            },
            "description": "All HMI themes were retrieved."
          }
        },
        "summary": "Get HMI themes",
        "tags": [
          "theme-controller"
        ]
      },
      "post": {
        "operationId": "saveTheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelTheme"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "theme-controller"
        ]
      }
    },
    "/themes/{themeId}": {
      "delete": {
        "operationId": "deleteTheme",
        "parameters": [
          {
            "in": "path",
            "name": "themeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "theme-controller"
        ]
      },
      "get": {
        "operationId": "retrieveTheme",
        "parameters": [
          {
            "in": "path",
            "name": "themeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelTheme"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "theme-controller"
        ]
      },
      "put": {
        "operationId": "updateTheme",
        "parameters": [
          {
            "in": "path",
            "name": "themeId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelTheme"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "theme-controller"
        ]
      }
    },
    "/toponyms": {
      "post": {
        "operationId": "createNotVisibleToponym",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToponymGeoJsonDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelToponymDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "toponyms-controller"
        ]
      }
    },
    "/toponyms/search": {
      "get": {
        "operationId": "search",
        "parameters": [
          {
            "in": "query",
            "name": "partialLabel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "locale",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelToponymDTO"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "toponyms-controller"
        ]
      }
    },
    "/toponyms/{businessId}": {
      "get": {
        "operationId": "get",
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "simplified",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelToponymDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "toponyms-controller"
        ]
      }
    },
    "/uiplugins/configurations": {
      "get": {
        "operationId": "retrievePluginConfigurations",
        "parameters": [
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "isLinkedToAllEntities",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "CRITERIA",
                "SERVICE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelUIPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-configuration-controller"
        ]
      },
      "post": {
        "operationId": "createPluginConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UIPluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUIPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-configuration-controller"
        ]
      }
    },
    "/uiplugins/configurations/{pluginConfId}": {
      "delete": {
        "operationId": "deletePluginConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "pluginConfId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-configuration-controller"
        ]
      },
      "get": {
        "operationId": "retrievePluginConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "pluginConfId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUIPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-configuration-controller"
        ]
      },
      "put": {
        "operationId": "updatePluginConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "pluginConfId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UIPluginConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUIPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-configuration-controller"
        ]
      }
    },
    "/uiplugins/definition": {
      "get": {
        "description": "Return a page of UI Plugin definitions",
        "operationId": "retrievePlugins",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "CRITERIA",
                "SERVICE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelUIPluginDefinition"
                }
              }
            },
            "description": "All IHM plugins were retrieved."
          }
        },
        "summary": "Get UI Plugin definitions",
        "tags": [
          "ui-plugin-definition-controller"
        ]
      },
      "post": {
        "operationId": "savePlugin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UIPluginDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUIPluginDefinition"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-definition-controller"
        ]
      }
    },
    "/uiplugins/definition/{pluginId}": {
      "delete": {
        "operationId": "deletePlugin",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelVoid"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-definition-controller"
        ]
      },
      "get": {
        "operationId": "retrievePlugin",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUIPluginDefinition"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-definition-controller"
        ]
      },
      "put": {
        "operationId": "updatePlugin",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UIPluginDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUIPluginDefinition"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-definition-controller"
        ]
      }
    },
    "/uiplugins/{pluginId}/configurations": {
      "get": {
        "operationId": "retrievePluginConfigurationsByPlugin",
        "parameters": [
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "isLinkedToAllEntities",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelUIPluginConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ui-plugin-configuration-controller"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUserCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/email/{email}/verification/resend": {
      "get": {
        "operationId": "sendVerificationEmail",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/email/{user_email}": {
      "get": {
        "operationId": "retrieveProjectUserByEmail",
        "parameters": [
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/email/{user_email}/admin": {
      "get": {
        "operationId": "isAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/myuser": {
      "get": {
        "operationId": "retrieveCurrentProjectUser",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      },
      "put": {
        "operationId": "updateCurrentProjectUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUserUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/pendingaccesses": {
      "get": {
        "operationId": "retrieveAccessRequestList",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/roles": {
      "get": {
        "operationId": "retrieveRoleProjectUsersList",
        "parameters": [
          {
            "in": "query",
            "name": "role_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/roles/{role_id}": {
      "get": {
        "operationId": "retrieveRoleProjectUserList",
        "parameters": [
          {
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/search": {
      "post": {
        "description": "Return a page of users of the project matching criterias.",
        "operationId": "retrieveProjectUserList",
        "parameters": [
          {
            "description": "Sorting and page configuration",
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProjectUserParameters"
              }
            }
          },
          "description": "Set of search criterias.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUserReadDto"
                }
              }
            },
            "description": "All users of the project were retrieved."
          }
        },
        "summary": "Get users of the project",
        "tags": [
          "project-users-controller"
        ]
      }
    },
    "/users/{user_email}/resources": {
      "delete": {
        "operationId": "removeProjectUserResources",
        "parameters": [
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "user-resource-controller"
        ]
      },
      "get": {
        "operationId": "retrieveProjectUserResources",
        "parameters": [
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "borrowedRoleName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EntityModelResourcesAccess"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "user-resource-controller"
        ]
      },
      "put": {
        "operationId": "updateProjectUserResources",
        "parameters": [
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ResourcesAccess"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "user-resource-controller"
        ]
      }
    },
    "/users/{user_id}": {
      "delete": {
        "operationId": "removeProjectUser",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      },
      "get": {
        "operationId": "retrieveProjectUser",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      },
      "put": {
        "operationId": "updateProjectUser",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUserUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUserReadDto"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "project-users-controller"
        ]
      }
    }
  },
  "security": [
    {
      "REGARDS_OAUTH2": []
    }
  ],
  "servers": [
    {
      "description": "Generated server url",
      "url": "https://regardsoss.github.io/api/v1/rs-access-project"
    }
  ]
}
