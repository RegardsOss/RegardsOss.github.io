
@startuml
'==== SKIN

autonumber
skinparam BoxPadding 50
skinparam style strictuml

'==== DRAMATIS PERSONAE

participant client

box Processing microservice
participant service as "Service\nLayer"
participant engine as "Workload\nEngine"
participant executable as "Process\nExecutable"
participant notifier as "Step\nNotifier"
database database as "Data\nAccess\nLayer"
end box


'==== DIAGRAM

note over client: Accessing all the\navailable processes
client -> service    ++: [HTTP] GET /process/
return                    : List<PProcessDTO>

note over client: Accessing\na single process\nfrom its UUID
client -> service    ++: [HTTP] GET /process/{uuid}
return                    : PProcessDTO

note over client: Creating a batch
client -> service    ++: [HTTP] POST /batch\nbody=PBatchRequest
service -> service  : validation
service -> database    : INSERT INTO PBatch
return                    : PBatchResponse

note over client: Create an execution
client -> service       ++: [AMQP] PExecutionRequestEvent
service -> service        : validation
service -> database       : INSERT INTO PExecution
service -> engine         : Execution\nContext
deactivate service
activate engine
engine -> executable    **: Execution\nContext
deactivate engine
activate executable
executable -> notifier  ++: PStep\nstatus=RUNNING
notifier -> database    --: INSERT INTO PStep\nstatus=RUNNING
executable -> notifier  ++: PStep\nstatus=SUCCESS
destroy executable
notifier -> database      : INSERT INTO PStep\nstatus=SUCCESS
notifier -> database      : INSERT INTO POutputFile
note over notifier: This is a final status.\nWe notify the client.
notifier -> client      --: [AMQP] PExecutionResultEvent

note over client: Downloading output files\nusing the urls
note over client: Notifying that the files\nhave been downloaded
client -> service       ++: [AMQP] DownloadedOutputFilesEvent
service -> database     --: UPDATE POutputFile\ndownloaded=true

note over service: Scheduled cleanup of\ndownloaded files
service -> database       : SELECT POutputFile\nWHERE downloaded
activate service
service -> service        : Delete downloaded files
service -> database       : UPDATE POutputFile\nSET deleted=true
deactivate service

note over service: Scheduled cleanup of\nbatches
service -> database       : DELETE PBatch\nWHERE (all executionss are in final state)
note over database: Delete in cascade\ncorresponding\n- PExecutions,\n- PStep,\n- POutputFile
deactivate service

@enduml
