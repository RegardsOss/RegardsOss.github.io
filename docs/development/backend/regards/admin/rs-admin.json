{
  "openapi": "3.0.1",
  "info": {
    "title": "MICROSERVICE ADMIN",
    "description": "System management and configuration",
    "license": {
      "name": "GPL-3.0"
    },
    "version": "1.8.0"
  },
  "servers": [
    {
      "url": "https://regardsoss.github.io/api/v1/rs-admin",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "REGARDS_OAUTH2": []
    }
  ],
  "paths": {
    "/notifications": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "retrieveNotifications",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "UNREAD"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerINotificationWithoutMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelINotificationWithoutMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "createNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/all/read": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "markAllNotificationAsRead",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/notifications/{notification_id}/unread": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "setNotificationUnRead",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/all/unread": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "markAllNotificationAsUnread",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/notifications/{notification_id}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "retrieveNotification",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "deleteNotification",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/notifications/read/delete": {
      "delete": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "deleteNotification_1",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/notifications/settings": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "retrieveNotificationSettings",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "updateNotificationSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettingsDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/summary": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "summary",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSummary"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{notification_id}/read": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "operationId": "setNotificationRead",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/metadatas": {
      "get": {
        "tags": [
          "project-user-metadata-controller"
        ],
        "operationId": "retrieveProjectUserMetaData",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelMetaData"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "project-user-metadata-controller"
        ],
        "operationId": "updateProjectUserMetaData",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetaData"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelMetaData"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "project-user-metadata-controller"
        ],
        "operationId": "removeProjectUserMetaData",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/roles/{role_name}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "retrieveRole",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelRole"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "role-controller"
        ],
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelRole"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "operationId": "removeRole",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/roles/{role_name}/descendants": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "retrieveRoleDescendants",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/include/{role_name}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "shouldAccessToResourceRequiring",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelRole"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "role-controller"
        ],
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelRole"
                }
              }
            }
          }
        }
      }
    },
    "/roles/borrowables": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "getBorrowableRoles",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelRole"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/resources/{resourceId}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "getRolesAccesingResource",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelRole"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_email}/resources": {
      "get": {
        "tags": [
          "user-resource-controller"
        ],
        "operationId": "retrieveProjectUserResources",
        "parameters": [
          {
            "name": "user_email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "borrowedRoleName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelResourcesAccess"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-resource-controller"
        ],
        "operationId": "updateProjectUserResources",
        "parameters": [
          {
            "name": "user_email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResourcesAccess"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      },
      "delete": {
        "tags": [
          "user-resource-controller"
        ],
        "operationId": "removeProjectUserResources",
        "parameters": [
          {
            "name": "user_email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/resources/{resource_id}": {
      "get": {
        "tags": [
          "resource-controller"
        ],
        "operationId": "getResourceAccess",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelResourcesAccess"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "resource-controller"
        ],
        "operationId": "updateResourceAccess",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesAccess"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelResourcesAccess"
                }
              }
            }
          }
        }
      }
    },
    "/resources": {
      "get": {
        "tags": [
          "resource-controller"
        ],
        "operationId": "getAllResourceAccesses",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerResourcesAccess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelResourcesAccess"
                }
              }
            }
          }
        }
      }
    },
    "/resources/microservices/{microservicename}": {
      "get": {
        "tags": [
          "microservice-resource-controller"
        ],
        "operationId": "getAllResourceAccessesByMicroservice",
        "parameters": [
          {
            "name": "microservicename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerResourcesAccess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelResourcesAccess"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "microservice-resource-controller"
        ],
        "operationId": "registerMicroserviceEndpoints",
        "parameters": [
          {
            "name": "microservicename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResourceMapping"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/resources/microservices/{microservicename}/controllers/{controllername}": {
      "get": {
        "tags": [
          "microservice-resource-controller"
        ],
        "operationId": "retrieveMicroserviceControllerEndpoints",
        "parameters": [
          {
            "name": "microservicename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "controllername",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelResourcesAccess"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/microservices/{microservicename}/controllers": {
      "get": {
        "tags": [
          "microservice-resource-controller"
        ],
        "operationId": "retrieveMicroserviceControllers",
        "parameters": [
          {
            "name": "microservicename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/{role_name}/resources/{resources_access_id}": {
      "delete": {
        "tags": [
          "role-resource-controller"
        ],
        "operationId": "deleteRoleResource",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resources_access_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/roles/{role_name}/resources": {
      "get": {
        "tags": [
          "role-resource-controller"
        ],
        "operationId": "getRoleResources",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelResourcesAccess"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "role-resource-controller"
        ],
        "operationId": "addRoleResource",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesAccess"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelResourcesAccess"
                }
              }
            }
          }
        }
      }
    },
    "/license": {
      "get": {
        "tags": [
          "license-controller"
        ],
        "operationId": "retrieveLicense",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLicenseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "license-controller"
        ],
        "operationId": "acceptLicense",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLicenseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/license/reset": {
      "put": {
        "tags": [
          "license-controller"
        ],
        "operationId": "resetLicense",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "retrieveProjectUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "updateProjectUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUser"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "removeProjectUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/users/roles": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "retrieveRoleProjectUsersList",
        "parameters": [
          {
            "name": "role_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerProjectUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/myuser": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "retrieveCurrentProjectUser",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "updateCurrentProjectUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/email/{email}": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "retrieveProjectUserByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/email/{email}/admin": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "isAdmin",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/users/email/{email}/origin/{origin}": {
      "put": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "updateOrigin",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/users/email/{email}/groups": {
      "post": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "linkAccessGroups",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "retrieveProjectUserList",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "pagedResourcesAssembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerProjectUser"
            }
          },
          {
            "name": "parameters",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProjectUserSearchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUser"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProjectUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/email/{email}/verification/resend": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "sendVerificationEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "getUserCountByAccessGroup",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/roles/{role_id}": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "retrieveRoleProjectUserList",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerProjectUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/pendingaccesses": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "retrieveAccessRequestList",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerProjectUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProjectUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/export": {
      "get": {
        "tags": [
          "project-users-controller"
        ],
        "operationId": "exportAsCSV",
        "parameters": [
          {
            "name": "parameters",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProjectUserSearchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses/external": {
      "post": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "requestExternalAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses": {
      "post": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "requestAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses/{access_id}/accept": {
      "put": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "acceptAccessRequest",
        "parameters": [
          {
            "name": "access_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses/{access_id}/deny": {
      "put": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "denyAccessRequest",
        "parameters": [
          {
            "name": "access_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses/verifyEmail/{token}": {
      "get": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "verifyEmail",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses/{access_id}/inactive": {
      "put": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "inactiveAccess",
        "parameters": [
          {
            "name": "access_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses/{access_id}/active": {
      "put": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "activeAccess",
        "parameters": [
          {
            "name": "access_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/accesses/{access_id}": {
      "delete": {
        "tags": [
          "registration-controller"
        ],
        "operationId": "removeAccessRequest",
        "parameters": [
          {
            "name": "access_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/emails": {
      "get": {
        "tags": [
          "email-controller"
        ],
        "operationId": "retrieveEmails",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "email-controller"
        ],
        "operationId": "sendEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleMailMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/emails/{mail_id}": {
      "get": {
        "tags": [
          "email-controller"
        ],
        "operationId": "retrieveEmail",
        "parameters": [
          {
            "name": "mail_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "email-controller"
        ],
        "operationId": "resendEmail",
        "parameters": [
          {
            "name": "mail_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      },
      "delete": {
        "tags": [
          "email-controller"
        ],
        "operationId": "deleteEmail",
        "parameters": [
          {
            "name": "mail_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/regards/{tenant}/datasource/test": {
      "get": {
        "tags": [
          "jpa-multitenant-controller"
        ],
        "operationId": "testTenantConnection",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/regards/{tenant}/datasource/status": {
      "get": {
        "tags": [
          "jpa-multitenant-controller"
        ],
        "operationId": "getDataSourceStatus",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/maintenance/{tenant}/enable": {
      "put": {
        "tags": [
          "maintenance-controller"
        ],
        "operationId": "setMaintenance",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/maintenance/{tenant}/disable": {
      "put": {
        "tags": [
          "maintenance-controller"
        ],
        "operationId": "unSetMaintenance",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/maintenance": {
      "get": {
        "tags": [
          "maintenance-controller"
        ],
        "operationId": "retrieveTenantsInMaintenance",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelMapStringMaintenanceInfo"
                }
              }
            }
          }
        }
      }
    },
    "/shutdown/immediate": {
      "post": {
        "tags": [
          "manager-controller"
        ],
        "operationId": "immediateShutdown",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/microservice/configuration": {
      "get": {
        "tags": [
          "module-manager-controller"
        ],
        "operationId": "exportConfiguration",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      },
      "post": {
        "tags": [
          "module-manager-controller"
        ],
        "operationId": "importConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleImportReport"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/microservice/configuration/enabled": {
      "get": {
        "tags": [
          "module-manager-controller"
        ],
        "operationId": "isConfigurationEnabled",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/microservice/ready/enabled": {
      "get": {
        "tags": [
          "module-manager-controller"
        ],
        "operationId": "isReadyEnabled",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/microservice/restart/enabled": {
      "get": {
        "tags": [
          "module-manager-controller"
        ],
        "operationId": "isRestartEnabled",
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/microservice/ready": {
      "get": {
        "tags": [
          "module-manager-controller"
        ],
        "operationId": "isReady",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleReadinessReportObject"
                }
              }
            }
          }
        }
      }
    },
    "/microservice/restart": {
      "get": {
        "tags": [
          "module-manager-controller"
        ],
        "operationId": "restart",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleRestartReport"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{id}": {
      "get": {
        "tags": [
          "session-manager-controller"
        ],
        "operationId": "getSessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelSession"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "session-manager-controller"
        ],
        "operationId": "deleteSession",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "session-manager-controller"
        ],
        "operationId": "getSessions",
        "parameters": [
          {
            "name": "sessionName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionState",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerSession"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelSession"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/names": {
      "get": {
        "tags": [
          "session-manager-controller"
        ],
        "operationId": "getSessionNames",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sources/names": {
      "get": {
        "tags": [
          "source-manager-controller"
        ],
        "operationId": "getSourcesNames",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sources": {
      "get": {
        "tags": [
          "source-manager-controller"
        ],
        "operationId": "getSources",
        "parameters": [
          {
            "name": "sourceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceState",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "assembler",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PagedResourcesAssemblerSource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelSource"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{name}": {
      "delete": {
        "tags": [
          "source-manager-controller"
        ],
        "operationId": "deleteSource",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "dynamic-tenant-setting-controller"
        ],
        "operationId": "retrieveAll",
        "parameters": [
          {
            "name": "names",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/settings/{name}": {
      "put": {
        "tags": [
          "dynamic-tenant-setting-controller"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicTenantSettingDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dynamic-tenant-setting-controller"
        ],
        "operationId": "reset",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelDynamicTenantSettingDto"
                }
              }
            }
          }
        }
      }
    },
    "/security/resources": {
      "get": {
        "tags": [
          "security-resources-controller"
        ],
        "operationId": "getAllResources",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceMapping"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pageable": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "paged": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PagedResourcesAssemblerINotificationWithoutMessage": {
        "type": "object",
        "properties": {
          "forceFirstAndLastRels": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      },
      "EntityModelINotificationWithoutMessage": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "string",
            "enum": [
              "INFO",
              "WARNING",
              "ERROR",
              "FATAL"
            ]
          },
          "mimeType": {
            "$ref": "#/components/schemas/MimeType"
          },
          "title": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "READ",
              "UNREAD"
            ]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "media": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "MimeType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "charset": {
            "type": "object",
            "properties": {
              "registered": {
                "type": "boolean"
              }
            }
          },
          "concrete": {
            "type": "boolean"
          },
          "wildcardType": {
            "type": "boolean"
          },
          "wildcardSubtype": {
            "type": "boolean"
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedModelEntityModelINotificationWithoutMessage": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModelINotificationWithoutMessage"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "Notification": {
        "required": [
          "level",
          "message",
          "projectUserRecipients",
          "roleRecipients",
          "sender",
          "status"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "roleRecipients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "projectUserRecipients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sender": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "READ",
              "UNREAD"
            ]
          },
          "level": {
            "type": "string",
            "enum": [
              "INFO",
              "WARNING",
              "ERROR",
              "FATAL"
            ]
          },
          "title": {
            "type": "string"
          },
          "mimeType": {
            "$ref": "#/components/schemas/MimeType"
          },
          "identifiable": {
            "type": "boolean"
          }
        }
      },
      "NotificationSettings": {
        "required": [
          "projectUserEmail"
        ],
        "type": "object",
        "properties": {
          "days": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "CUSTOM"
            ]
          },
          "hours": {
            "maximum": 24,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectUserEmail": {
            "type": "string"
          },
          "identifiable": {
            "type": "boolean"
          }
        }
      },
      "NotificationSettingsDTO": {
        "type": "object",
        "properties": {
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "CUSTOM"
            ]
          },
          "hours": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NotificationDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "projectUserRecipients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roleRecipients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sender": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "level": {
            "type": "string",
            "enum": [
              "INFO",
              "WARNING",
              "ERROR",
              "FATAL"
            ]
          },
          "mimeType": {
            "$ref": "#/components/schemas/MimeType"
          }
        }
      },
      "NotificationSummary": {
        "type": "object",
        "properties": {
          "unreads": {
            "type": "integer",
            "format": "int64"
          },
          "reads": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EntityModelMetaData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "READABLE",
              "WRITEABLE",
              "HIDDEN"
            ]
          },
          "identifiable": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "MetaData": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "READABLE",
              "WRITEABLE",
              "HIDDEN"
            ]
          },
          "identifiable": {
            "type": "boolean"
          }
        }
      },
      "ResourcesAccess": {
        "required": [
          "controllerSimpleName",
          "defaultRole",
          "microservice",
          "resource",
          "verb"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "microservice": {
            "type": "string"
          },
          "controllerSimpleName": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "verb": {
            "type": "string",
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "OPTIONS",
              "TRACE"
            ]
          },
          "defaultRole": {
            "type": "string",
            "enum": [
              "INSTANCE_ADMIN",
              "PROJECT_ADMIN",
              "EXPLOIT",
              "ADMIN",
              "REGISTERED_USER",
              "PUBLIC"
            ]
          },
          "identifiable": {
            "type": "boolean"
          }
        }
      },
      "Role": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "parentRole": {
            "$ref": "#/components/schemas/Role"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            }
          },
          "authorizedAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": {
            "type": "boolean"
          },
          "native": {
            "type": "boolean"
          },
          "identifiable": {
            "type": "boolean"
          }
        }
      },
      "EntityModelRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "parentRole": {
            "$ref": "#/components/schemas/Role"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            }
          },
          "authorizedAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": {
            "type": "boolean"
          },
          "native": {
            "type": "boolean"
          },
          "identifiable": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "EntityModelResourcesAccess": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "microservice": {
            "type": "string"
          },
          "controllerSimpleName": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "verb": {
            "type": "string",
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "OPTIONS",
              "TRACE"
            ]
          },
          "defaultRole": {
            "type": "string",
            "enum": [
              "INSTANCE_ADMIN",
              "PROJECT_ADMIN",
              "EXPLOIT",
              "ADMIN",
              "REGISTERED_USER",
              "PUBLIC"
            ]
          },
          "identifiable": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PagedResourcesAssemblerResourcesAccess": {
        "type": "object",
        "properties": {
          "forceFirstAndLastRels": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      },
      "PagedModelEntityModelResourcesAccess": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModelResourcesAccess"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ResourceAccess": {
        "type": "object"
      },
      "ResourceMapping": {
        "type": "object",
        "properties": {
          "resourceAccess": {
            "$ref": "#/components/schemas/ResourceAccess"
          },
          "fullPath": {
            "type": "string"
          },
          "controllerSimpleName": {
            "type": "string"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "OPTIONS",
              "TRACE"
            ]
          },
          "autorizedRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAuthority"
            }
          },
          "resourceMappingId": {
            "type": "string"
          }
        }
      },
      "RoleAuthority": {
        "type": "object",
        "properties": {
          "authorizedIpAdresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roleName": {
            "type": "string"
          },
          "authority": {
            "type": "string"
          }
        }
      },
      "EntityModelLicenseDTO": {
        "type": "object",
        "properties": {
          "accepted": {
            "type": "boolean"
          },
          "licenceLink": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PagedResourcesAssemblerProjectUser": {
        "type": "object",
        "properties": {
          "forceFirstAndLastRels": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      },
      "EntityModelProjectUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastConnection": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "origin": {
            "type": "string"
          },
          "accessGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxQuota": {
            "type": "integer",
            "format": "int64"
          },
          "currentQuota": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING_ACCESS",
              "ACCESS_DENIED",
              "ACCESS_GRANTED",
              "ACCESS_INACTIVE",
              "WAITING_ACCOUNT_ACTIVE",
              "WAITING_EMAIL_VERIFICATION"
            ]
          },
          "metadata": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaData"
            }
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            }
          },
          "licenseAccepted": {
            "type": "boolean"
          },
          "identifiable": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PagedModelEntityModelProjectUser": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModelProjectUser"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ProjectUser": {
        "required": [
          "origin",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastConnection": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "origin": {
            "type": "string"
          },
          "accessGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxQuota": {
            "type": "integer",
            "format": "int64"
          },
          "currentQuota": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING_ACCESS",
              "ACCESS_DENIED",
              "ACCESS_GRANTED",
              "ACCESS_INACTIVE",
              "WAITING_ACCOUNT_ACTIVE",
              "WAITING_EMAIL_VERIFICATION"
            ]
          },
          "metadata": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaData"
            }
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourcesAccess"
            }
          },
          "licenseAccepted": {
            "type": "boolean"
          },
          "identifiable": {
            "type": "boolean"
          }
        }
      },
      "ProjectUserSearchParameters": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdBefore": {
            "type": "string",
            "format": "date-time"
          },
          "createdAfter": {
            "type": "string",
            "format": "date-time"
          },
          "lastConnectionBefore": {
            "type": "string",
            "format": "date-time"
          },
          "lastConnectionAfter": {
            "type": "string",
            "format": "date-time"
          },
          "quotaWarningCount": {
            "type": "integer",
            "format": "int64"
          },
          "accessGroup": {
            "type": "string"
          }
        }
      },
      "AccessRequestDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaData"
            }
          },
          "password": {
            "type": "string"
          },
          "originUrl": {
            "type": "string"
          },
          "requestLink": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "accessGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxQuota": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Email": {
        "required": [
          "to"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "string"
          },
          "replyTo": {
            "type": "string"
          },
          "sentDate": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attName": {
            "type": "string"
          },
          "attachment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "identifiable": {
            "type": "boolean"
          }
        }
      },
      "SimpleMailMessage": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "replyTo": {
            "type": "string"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sentDate": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "GenericResponseBody": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "EntityModelMapStringMaintenanceInfo": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "ModuleImportReport": {
        "type": "object",
        "properties": {
          "moduleInformation": {
            "$ref": "#/components/schemas/ModuleInformation"
          },
          "importErrors": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "onlyErrors": {
            "type": "boolean"
          }
        }
      },
      "ModuleInformation": {
        "required": [
          "author",
          "id",
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "legalOwner": {
            "type": "string"
          },
          "documentation": {
            "type": "string"
          }
        }
      },
      "ModuleReadinessReportObject": {
        "type": "object",
        "properties": {
          "ready": {
            "type": "boolean"
          },
          "reasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "specifications": {
            "type": "object"
          }
        }
      },
      "ModuleRestartReport": {
        "type": "object",
        "properties": {
          "moduleInformation": {
            "$ref": "#/components/schemas/ModuleInformation"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PagedResourcesAssemblerSession": {
        "type": "object",
        "properties": {
          "forceFirstAndLastRels": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      },
      "EntityModelSession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "steps": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionStep"
            }
          },
          "managerState": {
            "$ref": "#/components/schemas/ManagerState"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "ManagerState": {
        "required": [
          "errors",
          "running",
          "waiting"
        ],
        "type": "object",
        "properties": {
          "running": {
            "type": "boolean"
          },
          "errors": {
            "type": "boolean"
          },
          "waiting": {
            "type": "boolean"
          }
        }
      },
      "PagedModelEntityModelSession": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModelSession"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "SessionStep": {
        "required": [
          "inputRelated",
          "lastUpdateDate",
          "outputRelated",
          "properties",
          "session",
          "source",
          "state",
          "stepId",
          "type"
        ],
        "type": "object",
        "properties": {
          "stepId": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "session": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ACQUISITION",
              "REFERENCING",
              "STORAGE",
              "DISSEMINATION"
            ]
          },
          "inputRelated": {
            "type": "integer",
            "format": "int64"
          },
          "outputRelated": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/StepState"
          },
          "properties": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StepState": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "integer",
            "format": "int64"
          },
          "waiting": {
            "type": "integer",
            "format": "int64"
          },
          "running": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResourcesAssemblerSource": {
        "type": "object",
        "properties": {
          "forceFirstAndLastRels": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      },
      "AggregationState": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "integer",
            "format": "int64"
          },
          "waiting": {
            "type": "integer",
            "format": "int64"
          },
          "running": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EntityModelSource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "nbSessions": {
            "type": "integer",
            "format": "int64"
          },
          "steps": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceStepAggregation"
            }
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "managerState": {
            "$ref": "#/components/schemas/ManagerState"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PagedModelEntityModelSource": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModelSource"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "SourceStepAggregation": {
        "required": [
          "state",
          "totalIn",
          "totalOut",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ACQUISITION",
              "REFERENCING",
              "STORAGE",
              "DISSEMINATION"
            ]
          },
          "totalIn": {
            "type": "integer",
            "format": "int64"
          },
          "totalOut": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/AggregationState"
          }
        }
      },
      "DynamicTenantSettingDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "defaultValue": {
            "type": "object"
          }
        }
      },
      "EntityModelDynamicTenantSettingDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "defaultValue": {
            "type": "object"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "REGARDS_OAUTH2": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "http://vm-perf.cloud-espace.si.c-s.fr:80/api/v1/rs-authentication/oauth/token",
            "scopes": {}
          }
        }
      }
    }
  }
}
